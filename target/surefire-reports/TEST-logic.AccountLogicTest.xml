<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report-3.0.xsd" version="3.0" name="logic.AccountLogicTest" time="30.528" tests="16" errors="16" skipped="0" failures="0">
  <properties>
    <property name="sun.desktop" value="windows"/>
    <property name="awt.toolkit" value="sun.awt.windows.WToolkit"/>
    <property name="netbeans.deploy" value="true"/>
    <property name="java.specification.version" value="11"/>
    <property name="sun.cpu.isalist" value="amd64"/>
    <property name="sun.jnu.encoding" value="Cp1252"/>
    <property name="java.class.path" value="D:\OneDrive - Algonquin College\Computer Programming\dev\Level 3\SimpleBloodBank-Skeleton\target\test-classes;D:\OneDrive - Algonquin College\Computer Programming\dev\Level 3\SimpleBloodBank-Skeleton\target\classes;C:\Users\shado\.m2\repository\org\junit\jupiter\junit-jupiter\5.7.0\junit-jupiter-5.7.0.jar;C:\Users\shado\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.7.0\junit-jupiter-api-5.7.0.jar;C:\Users\shado\.m2\repository\org\apiguardian\apiguardian-api\1.1.0\apiguardian-api-1.1.0.jar;C:\Users\shado\.m2\repository\org\opentest4j\opentest4j\1.2.0\opentest4j-1.2.0.jar;C:\Users\shado\.m2\repository\org\junit\platform\junit-platform-commons\1.7.0\junit-platform-commons-1.7.0.jar;C:\Users\shado\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.7.0\junit-jupiter-params-5.7.0.jar;C:\Users\shado\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.7.0\junit-jupiter-engine-5.7.0.jar;C:\Users\shado\.m2\repository\org\junit\platform\junit-platform-engine\1.7.0\junit-platform-engine-1.7.0.jar;C:\Users\shado\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\shado\.m2\repository\org\hamcrest\hamcrest-library\2.2\hamcrest-library-2.2.jar;C:\Users\shado\.m2\repository\org\hamcrest\hamcrest-core\2.2\hamcrest-core-2.2.jar;C:\Users\shado\.m2\repository\org\apache\logging\log4j\log4j-api\2.14.0\log4j-api-2.14.0.jar;C:\Users\shado\.m2\repository\org\apache\logging\log4j\log4j-core\2.14.0\log4j-core-2.14.0.jar;C:\Users\shado\.m2\repository\org\hibernate\hibernate-core\5.4.27.Final\hibernate-core-5.4.27.Final.jar;C:\Users\shado\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\shado\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\shado\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\shado\.m2\repository\net\bytebuddy\byte-buddy\1.10.17\byte-buddy-1.10.17.jar;C:\Users\shado\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\shado\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\shado\.m2\repository\org\jboss\jandex\2.1.3.Final\jandex-2.1.3.Final.jar;C:\Users\shado\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\shado\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\shado\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\shado\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\shado\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\shado\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\shado\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\shado\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\shado\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\shado\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\shado\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\9.0.44\tomcat-embed-core-9.0.44.jar;C:\Users\shado\.m2\repository\org\apache\tomcat\tomcat-annotations-api\9.0.44\tomcat-annotations-api-9.0.44.jar;C:\Users\shado\.m2\repository\org\apache\tomcat\embed\tomcat-embed-jasper\9.0.44\tomcat-embed-jasper-9.0.44.jar;C:\Users\shado\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\9.0.44\tomcat-embed-el-9.0.44.jar;C:\Users\shado\.m2\repository\org\eclipse\jdt\ecj\3.18.0\ecj-3.18.0.jar;C:\Users\shado\.m2\repository\org\apache\tomcat\tomcat-jdbc\9.0.44\tomcat-jdbc-9.0.44.jar;C:\Users\shado\.m2\repository\org\apache\tomcat\tomcat-juli\9.0.44\tomcat-juli-9.0.44.jar;C:\Users\shado\.m2\repository\jakarta\platform\jakarta.jakartaee-api\8.0.0\jakarta.jakartaee-api-8.0.0.jar;C:\Users\shado\.m2\repository\org\glassfish\web\jakarta.servlet.jsp.jstl\1.2.6\jakarta.servlet.jsp.jstl-1.2.6.jar;C:\Users\shado\.m2\repository\jakarta\servlet\jsp\jstl\jakarta.servlet.jsp.jstl-api\1.2.4\jakarta.servlet.jsp.jstl-api-1.2.4.jar;C:\Users\shado\.m2\repository\jakarta\servlet\jakarta.servlet-api\4.0.2\jakarta.servlet-api-4.0.2.jar;C:\Users\shado\.m2\repository\jakarta\el\jakarta.el-api\3.0.2\jakarta.el-api-3.0.2.jar;C:\Users\shado\.m2\repository\mysql\mysql-connector-java\8.0.23\mysql-connector-java-8.0.23.jar;C:\Users\shado\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;"/>
    <property name="java.vm.vendor" value="AdoptOpenJDK"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="user.variant" value=""/>
    <property name="catalina.useNaming" value="true"/>
    <property name="java.vendor.url" value="https://adoptopenjdk.net/"/>
    <property name="user.timezone" value="America/New_York"/>
    <property name="java.vm.specification.version" value="11"/>
    <property name="os.name" value="Windows 10"/>
    <property name="user.country" value="US"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="sun.boot.library.path" value="C:\Program Files\AdoptOpenJDK\jdk-11.0.9.101-hotspot\bin"/>
    <property name="sun.java.command" value="C:\Users\shado\AppData\Local\Temp\surefire2501232076785922376\surefirebooter9000069239554304983.jar C:\Users\shado\AppData\Local\Temp\surefire2501232076785922376 2021-04-03T18-01-40_722-jvmRun1 surefire18183812482755203434tmp surefire_0912886330329889399tmp"/>
    <property name="jdk.debug" value="release"/>
    <property name="surefire.test.class.path" value="D:\OneDrive - Algonquin College\Computer Programming\dev\Level 3\SimpleBloodBank-Skeleton\target\test-classes;D:\OneDrive - Algonquin College\Computer Programming\dev\Level 3\SimpleBloodBank-Skeleton\target\classes;C:\Users\shado\.m2\repository\org\junit\jupiter\junit-jupiter\5.7.0\junit-jupiter-5.7.0.jar;C:\Users\shado\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.7.0\junit-jupiter-api-5.7.0.jar;C:\Users\shado\.m2\repository\org\apiguardian\apiguardian-api\1.1.0\apiguardian-api-1.1.0.jar;C:\Users\shado\.m2\repository\org\opentest4j\opentest4j\1.2.0\opentest4j-1.2.0.jar;C:\Users\shado\.m2\repository\org\junit\platform\junit-platform-commons\1.7.0\junit-platform-commons-1.7.0.jar;C:\Users\shado\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.7.0\junit-jupiter-params-5.7.0.jar;C:\Users\shado\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.7.0\junit-jupiter-engine-5.7.0.jar;C:\Users\shado\.m2\repository\org\junit\platform\junit-platform-engine\1.7.0\junit-platform-engine-1.7.0.jar;C:\Users\shado\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\shado\.m2\repository\org\hamcrest\hamcrest-library\2.2\hamcrest-library-2.2.jar;C:\Users\shado\.m2\repository\org\hamcrest\hamcrest-core\2.2\hamcrest-core-2.2.jar;C:\Users\shado\.m2\repository\org\apache\logging\log4j\log4j-api\2.14.0\log4j-api-2.14.0.jar;C:\Users\shado\.m2\repository\org\apache\logging\log4j\log4j-core\2.14.0\log4j-core-2.14.0.jar;C:\Users\shado\.m2\repository\org\hibernate\hibernate-core\5.4.27.Final\hibernate-core-5.4.27.Final.jar;C:\Users\shado\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\shado\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\shado\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\shado\.m2\repository\net\bytebuddy\byte-buddy\1.10.17\byte-buddy-1.10.17.jar;C:\Users\shado\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\shado\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\shado\.m2\repository\org\jboss\jandex\2.1.3.Final\jandex-2.1.3.Final.jar;C:\Users\shado\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\shado\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\shado\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\shado\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\shado\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\shado\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\shado\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\shado\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\shado\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\shado\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\shado\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\9.0.44\tomcat-embed-core-9.0.44.jar;C:\Users\shado\.m2\repository\org\apache\tomcat\tomcat-annotations-api\9.0.44\tomcat-annotations-api-9.0.44.jar;C:\Users\shado\.m2\repository\org\apache\tomcat\embed\tomcat-embed-jasper\9.0.44\tomcat-embed-jasper-9.0.44.jar;C:\Users\shado\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\9.0.44\tomcat-embed-el-9.0.44.jar;C:\Users\shado\.m2\repository\org\eclipse\jdt\ecj\3.18.0\ecj-3.18.0.jar;C:\Users\shado\.m2\repository\org\apache\tomcat\tomcat-jdbc\9.0.44\tomcat-jdbc-9.0.44.jar;C:\Users\shado\.m2\repository\org\apache\tomcat\tomcat-juli\9.0.44\tomcat-juli-9.0.44.jar;C:\Users\shado\.m2\repository\jakarta\platform\jakarta.jakartaee-api\8.0.0\jakarta.jakartaee-api-8.0.0.jar;C:\Users\shado\.m2\repository\org\glassfish\web\jakarta.servlet.jsp.jstl\1.2.6\jakarta.servlet.jsp.jstl-1.2.6.jar;C:\Users\shado\.m2\repository\jakarta\servlet\jsp\jstl\jakarta.servlet.jsp.jstl-api\1.2.4\jakarta.servlet.jsp.jstl-api-1.2.4.jar;C:\Users\shado\.m2\repository\jakarta\servlet\jakarta.servlet-api\4.0.2\jakarta.servlet-api-4.0.2.jar;C:\Users\shado\.m2\repository\jakarta\el\jakarta.el-api\3.0.2\jakarta.el-api-3.0.2.jar;C:\Users\shado\.m2\repository\mysql\mysql-connector-java\8.0.23\mysql-connector-java-8.0.23.jar;C:\Users\shado\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="C:\Users\shado"/>
    <property name="user.language" value="en"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.naming.factory.url.pkgs" value="org.apache.naming"/>
    <property name="java.version.date" value="2020-11-04"/>
    <property name="java.home" value="C:\Program Files\AdoptOpenJDK\jdk-11.0.9.101-hotspot"/>
    <property name="file.separator" value="\"/>
    <property name="basedir" value="D:\OneDrive - Algonquin College\Computer Programming\dev\Level 3\SimpleBloodBank-Skeleton"/>
    <property name="java.vm.compressedOopsMode" value="32-bit"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.awt.graphicsenv" value="sun.awt.Win32GraphicsEnvironment"/>
    <property name="surefire.real.class.path" value="C:\Users\shado\AppData\Local\Temp\surefire2501232076785922376\surefirebooter9000069239554304983.jar"/>
    <property name="user.script" value=""/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="java.runtime.version" value="11.0.9.1+1"/>
    <property name="java.naming.factory.initial" value="org.apache.naming.java.javaURLContextFactory"/>
    <property name="user.name" value="shado"/>
    <property name="path.separator" value=";"/>
    <property name="os.version" value="10.0"/>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="java.vendor.version" value="AdoptOpenJDK"/>
    <property name="maven.ext.class.path" value="C:\Program Files\NetBeans-12.0\netbeans\java\maven-nblib\netbeans-eventspy.jar"/>
    <property name="localRepository" value="C:\Users\shado\.m2\repository"/>
    <property name="java.vendor.url.bug" value="https://github.com/AdoptOpenJDK/openjdk-support/issues"/>
    <property name="java.io.tmpdir" value="C:\Users\shado\AppData\Local\Temp\"/>
    <property name="catalina.home" value="D:\OneDrive - Algonquin College\Computer Programming\dev\Level 3\SimpleBloodBank-Skeleton\tomcat.8080"/>
    <property name="java.version" value="11.0.9.1"/>
    <property name="user.dir" value="D:\OneDrive - Algonquin College\Computer Programming\dev\Level 3\SimpleBloodBank-Skeleton"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="java.awt.printerjob" value="sun.awt.windows.WPrinterJob"/>
    <property name="sun.os.patch.level" value=""/>
    <property name="catalina.base" value="D:\OneDrive - Algonquin College\Computer Programming\dev\Level 3\SimpleBloodBank-Skeleton\tomcat.8080"/>
    <property name="java.library.path" value="C:\Program Files\AdoptOpenJDK\jdk-11.0.9.101-hotspot\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Java\javafx-sdk-11.0.2\bin;C:\oraclexe\app\oracle\product\11.2.0\server\bin;C:\Program Files\AdoptOpenJDK\jdk-11.0.9.101-hotspot\\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Microsoft VS Code\bin;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files (x86)\dotnet\;D:\Program Files\pgmodeler;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;D:\Program Files (x86)\Brackets\command;C:\Program Files\Git\cmd;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Users\shado\AppData\Local\Microsoft\WindowsApps;;."/>
    <property name="java.vm.info" value="mixed mode"/>
    <property name="java.vendor" value="AdoptOpenJDK"/>
    <property name="java.vm.version" value="11.0.9.1+1"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="java.class.version" value="55.0"/>
  </properties>
  <testcase name="testCreateEntity" classname="logic.AccountLogicTest" time="0.072">
    <error type="org.hibernate.service.spi.ServiceException"><![CDATA[org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
	at logic.AccountLogicTest.setUp(AccountLogicTest.java:56)
Caused by: org.hibernate.engine.jndi.JndiException: Unable to lookup JNDI name [java:comp/env/jdbc/SimpleBloodBank]
	at logic.AccountLogicTest.setUp(AccountLogicTest.java:56)
Caused by: javax.naming.NameNotFoundException: Name [comp/env/jdbc/SimpleBloodBank] is not bound in this Context. Unable to find [comp].
	at logic.AccountLogicTest.setUp(AccountLogicTest.java:56)
]]></error>
    <system-out><![CDATA[2021-04-03T18:01:45,485|[DEBUG] ServletListener - Initializing EMF
2021-04-03T18:01:45,493|[DEBUG] EMFactory - initializeing EntityManagerFactory
2021-04-03T18:01:45,493|[DEBUG] EMFactory - creating EntityManagerFactory
2021-04-03T18:01:45,527|[DEBUG] logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2021-04-03T18:01:45,682|[INFO ] LogHelper - HHH000204: Processing PersistenceUnitInfo [name: simplebloodbank-PU-test]
2021-04-03T18:01:45,786|[INFO ] Version - HHH000412: Hibernate ORM core version 5.4.27.Final
2021-04-03T18:01:46,025|[INFO ] Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-04-03T18:01:46,065|[DEBUG] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@630f24a5
2021-04-03T18:01:46,065|[DEBUG] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@630f24a5
2021-04-03T18:01:46,065|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@630f24a5
2021-04-03T18:01:46,065|[DEBUG] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@34ceabf1
2021-04-03T18:01:46,066|[DEBUG] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@47861e3c
2021-04-03T18:01:46,066|[DEBUG] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@3f2fd933
2021-04-03T18:01:46,068|[DEBUG] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@546f0369
2021-04-03T18:01:46,069|[DEBUG] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@546f0369
2021-04-03T18:01:46,069|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@546f0369
2021-04-03T18:01:46,070|[DEBUG] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@6e32eea5
2021-04-03T18:01:46,070|[DEBUG] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@6e32eea5
2021-04-03T18:01:46,070|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6e32eea5
2021-04-03T18:01:46,072|[DEBUG] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2d45db20
2021-04-03T18:01:46,072|[DEBUG] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2d45db20
2021-04-03T18:01:46,072|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2d45db20
2021-04-03T18:01:46,074|[DEBUG] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@52bf434b
2021-04-03T18:01:46,075|[DEBUG] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@52bf434b
2021-04-03T18:01:46,075|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@52bf434b
2021-04-03T18:01:46,077|[DEBUG] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@563b9462
2021-04-03T18:01:46,077|[DEBUG] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@563b9462
2021-04-03T18:01:46,078|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@563b9462
2021-04-03T18:01:46,079|[DEBUG] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6ad51d91
2021-04-03T18:01:46,080|[DEBUG] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6ad51d91
2021-04-03T18:01:46,080|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6ad51d91
2021-04-03T18:01:46,082|[DEBUG] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@288c16a5
2021-04-03T18:01:46,082|[DEBUG] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@288c16a5
2021-04-03T18:01:46,082|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@288c16a5
2021-04-03T18:01:46,084|[DEBUG] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7540aa55
2021-04-03T18:01:46,084|[DEBUG] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7540aa55
2021-04-03T18:01:46,086|[DEBUG] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6815e19c
2021-04-03T18:01:46,086|[DEBUG] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6815e19c
2021-04-03T18:01:46,089|[DEBUG] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@2d66a5d3
2021-04-03T18:01:46,089|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@2d66a5d3
2021-04-03T18:01:46,090|[DEBUG] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@687fa4d0
2021-04-03T18:01:46,091|[DEBUG] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5bfa2801
2021-04-03T18:01:46,093|[DEBUG] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@25428bab
2021-04-03T18:01:46,093|[DEBUG] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@25428bab
2021-04-03T18:01:46,095|[DEBUG] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@1cfb035c
2021-04-03T18:01:46,095|[DEBUG] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@1cfb035c
2021-04-03T18:01:46,104|[DEBUG] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@1c8ab147
2021-04-03T18:01:46,105|[DEBUG] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@1c8ab147
2021-04-03T18:01:46,106|[DEBUG] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@157f284b
2021-04-03T18:01:46,106|[DEBUG] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@157f284b
2021-04-03T18:01:46,108|[DEBUG] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@639f7054
2021-04-03T18:01:46,108|[DEBUG] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@639f7054
2021-04-03T18:01:46,110|[DEBUG] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@13e59265
2021-04-03T18:01:46,110|[DEBUG] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@13e59265
2021-04-03T18:01:46,112|[DEBUG] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3d7c21b7
2021-04-03T18:01:46,112|[DEBUG] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3d7c21b7
2021-04-03T18:01:46,114|[DEBUG] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@58da1b27
2021-04-03T18:01:46,114|[DEBUG] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@58da1b27
2021-04-03T18:01:46,117|[DEBUG] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@129bc797
2021-04-03T18:01:46,117|[DEBUG] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@129bc797
2021-04-03T18:01:46,120|[DEBUG] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@38b65eb9
2021-04-03T18:01:46,120|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@38b65eb9
2021-04-03T18:01:46,121|[DEBUG] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@723493f2
2021-04-03T18:01:46,122|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@723493f2
2021-04-03T18:01:46,123|[DEBUG] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@2be33ac
2021-04-03T18:01:46,123|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2be33ac
2021-04-03T18:01:46,124|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2be33ac
2021-04-03T18:01:46,125|[DEBUG] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7892d7a7
2021-04-03T18:01:46,127|[DEBUG] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@704a0f9
2021-04-03T18:01:46,127|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@704a0f9
2021-04-03T18:01:46,127|[DEBUG] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@704a0f9
2021-04-03T18:01:46,128|[DEBUG] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@15cf663c
2021-04-03T18:01:46,129|[DEBUG] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@68317dc0
2021-04-03T18:01:46,130|[DEBUG] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@2c9e3083
2021-04-03T18:01:46,130|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2c9e3083
2021-04-03T18:01:46,132|[DEBUG] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@179eb386
2021-04-03T18:01:46,132|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@179eb386
2021-04-03T18:01:46,134|[DEBUG] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@70915da3
2021-04-03T18:01:46,134|[DEBUG] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@70915da3
2021-04-03T18:01:46,136|[DEBUG] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@3e5b32ca
2021-04-03T18:01:46,136|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3e5b32ca
2021-04-03T18:01:46,138|[DEBUG] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5d6d21e2
2021-04-03T18:01:46,138|[DEBUG] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5d6d21e2
2021-04-03T18:01:46,138|[DEBUG] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@39e67fbc
2021-04-03T18:01:46,140|[DEBUG] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@33260ecd
2021-04-03T18:01:46,140|[DEBUG] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@33260ecd
2021-04-03T18:01:46,140|[DEBUG] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@33260ecd
2021-04-03T18:01:46,141|[DEBUG] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@671f70bc
2021-04-03T18:01:46,141|[DEBUG] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@671f70bc
2021-04-03T18:01:46,141|[DEBUG] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@671f70bc
2021-04-03T18:01:46,142|[DEBUG] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@3e0d722f
2021-04-03T18:01:46,143|[DEBUG] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@7fab8e9a
2021-04-03T18:01:46,144|[DEBUG] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@251d3913
2021-04-03T18:01:46,144|[DEBUG] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@251d3913
2021-04-03T18:01:46,145|[DEBUG] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@251d3913
2021-04-03T18:01:46,146|[DEBUG] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@18211894
2021-04-03T18:01:46,146|[DEBUG] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@18211894
2021-04-03T18:01:46,146|[DEBUG] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@18211894
2021-04-03T18:01:46,147|[DEBUG] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@76cb6d16
2021-04-03T18:01:46,148|[DEBUG] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@3bd6ce4e
2021-04-03T18:01:46,149|[DEBUG] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@4f2a0651
2021-04-03T18:01:46,149|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4f2a0651
2021-04-03T18:01:46,150|[DEBUG] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@79f6e671
2021-04-03T18:01:46,151|[DEBUG] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@4c49471c
2021-04-03T18:01:46,151|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4c49471c
2021-04-03T18:01:46,153|[DEBUG] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@559ac87f
2021-04-03T18:01:46,154|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@559ac87f
2021-04-03T18:01:46,154|[DEBUG] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@10683f87
2021-04-03T18:01:46,155|[DEBUG] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2c3f9229
2021-04-03T18:01:46,156|[DEBUG] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@6d68cbf3
2021-04-03T18:01:46,159|[DEBUG] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@151cbba4
2021-04-03T18:01:46,160|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@151cbba4
2021-04-03T18:01:46,160|[DEBUG] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@458c58e3
2021-04-03T18:01:46,160|[DEBUG] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3cb1a148
2021-04-03T18:01:46,160|[DEBUG] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6910e725
2021-04-03T18:01:46,160|[DEBUG] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3453a820
2021-04-03T18:01:46,160|[DEBUG] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@133fb509
2021-04-03T18:01:46,160|[DEBUG] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2235fdc7
2021-04-03T18:01:46,160|[DEBUG] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4c721f6b
2021-04-03T18:01:46,161|[DEBUG] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6549ac6d
2021-04-03T18:01:46,386|[INFO ] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2021-04-03T18:01:46,466|[DEBUG] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6e4731d5] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7111dd38]
2021-04-03T18:01:46,653|[INFO ] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
2021-04-03T18:01:46,655|[DEBUG] JavaTypeDescriptorRegistry - Could not find matching scoped JavaTypeDescriptor for requested Java class [entity.RhesusFactorConvertor]; falling back to static registry
2021-04-03T18:01:46,660|[DEBUG] JavaTypeDescriptorRegistry - Could not find matching scoped JavaTypeDescriptor for requested Java class [java.lang.String]; falling back to static registry
2021-04-03T18:01:46,665|[DEBUG] AttributeConverterTypeAdapter - Created AttributeConverterTypeAdapter -> converted::entity.RhesusFactorConvertor
2021-04-03T18:01:46,701|[DEBUG] EnumType - Using NAMED-based conversion for Enum entity.BloodGroup
2021-04-03T18:01:46,813|[DEBUG] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6e4731d5] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@6bea3a13]
2021-04-03T18:01:47,241|[INFO ] SchemaCreatorImpl - HHH000476: Executing import script 'file:/D:/OneDrive%20-%20Algonquin%20College/Computer%20Programming/dev/Level%203/SimpleBloodBank-Skeleton/target/classes/META-INF/sql/simplebloodbank-drop.sql'
2021-04-03T18:01:47,257|[DEBUG] SQL - 
    
    DROP SCHEMA IF EXISTS `simplebloodbank`
2021-04-03T18:02:11,612|[DEBUG] TypeConfiguration$Scope - Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@513f965e] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@6bea3a13]
2021-04-03T18:02:11,984|[DEBUG] ServletListener - Destroying EMF
2021-04-03T18:02:11,984|[DEBUG] EMFactory - closing EntityManagerFactory
2021-04-03T18:02:11,984|[DEBUG] ServletListener - EMF Destroyed
2021-04-03T18:02:12,021|[DEBUG] EMFactory - getting EntityManagerFactory
2021-04-03T18:02:12,021|[DEBUG] EMFactory - initializeing EntityManagerFactory
2021-04-03T18:02:12,022|[DEBUG] EMFactory - creating EntityManagerFactory
2021-04-03T18:02:12,035|[INFO ] LogHelper - HHH000204: Processing PersistenceUnitInfo [name: simplebloodbank-PU-test]
2021-04-03T18:02:12,037|[DEBUG] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@630f24a5
2021-04-03T18:02:12,037|[DEBUG] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@630f24a5
2021-04-03T18:02:12,037|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@630f24a5
2021-04-03T18:02:12,037|[DEBUG] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@34ceabf1
2021-04-03T18:02:12,038|[DEBUG] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@47861e3c
2021-04-03T18:02:12,038|[DEBUG] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@3f2fd933
2021-04-03T18:02:12,038|[DEBUG] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@546f0369
2021-04-03T18:02:12,038|[DEBUG] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@546f0369
2021-04-03T18:02:12,038|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@546f0369
2021-04-03T18:02:12,038|[DEBUG] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@6e32eea5
2021-04-03T18:02:12,038|[DEBUG] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@6e32eea5
2021-04-03T18:02:12,038|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6e32eea5
2021-04-03T18:02:12,038|[DEBUG] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2d45db20
2021-04-03T18:02:12,038|[DEBUG] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2d45db20
2021-04-03T18:02:12,038|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2d45db20
2021-04-03T18:02:12,038|[DEBUG] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@52bf434b
2021-04-03T18:02:12,038|[DEBUG] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@52bf434b
2021-04-03T18:02:12,038|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@52bf434b
2021-04-03T18:02:12,038|[DEBUG] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@563b9462
2021-04-03T18:02:12,038|[DEBUG] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@563b9462
2021-04-03T18:02:12,038|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@563b9462
2021-04-03T18:02:12,039|[DEBUG] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6ad51d91
2021-04-03T18:02:12,039|[DEBUG] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6ad51d91
2021-04-03T18:02:12,039|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6ad51d91
2021-04-03T18:02:12,039|[DEBUG] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@288c16a5
2021-04-03T18:02:12,039|[DEBUG] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@288c16a5
2021-04-03T18:02:12,039|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@288c16a5
2021-04-03T18:02:12,039|[DEBUG] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7540aa55
2021-04-03T18:02:12,039|[DEBUG] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7540aa55
2021-04-03T18:02:12,039|[DEBUG] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6815e19c
2021-04-03T18:02:12,039|[DEBUG] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6815e19c
2021-04-03T18:02:12,039|[DEBUG] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@2d66a5d3
2021-04-03T18:02:12,039|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@2d66a5d3
2021-04-03T18:02:12,039|[DEBUG] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@687fa4d0
2021-04-03T18:02:12,039|[DEBUG] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5bfa2801
2021-04-03T18:02:12,039|[DEBUG] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@25428bab
2021-04-03T18:02:12,039|[DEBUG] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@25428bab
2021-04-03T18:02:12,039|[DEBUG] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@1cfb035c
2021-04-03T18:02:12,040|[DEBUG] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@1cfb035c
2021-04-03T18:02:12,040|[DEBUG] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@1c8ab147
2021-04-03T18:02:12,040|[DEBUG] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@1c8ab147
2021-04-03T18:02:12,040|[DEBUG] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@157f284b
2021-04-03T18:02:12,040|[DEBUG] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@157f284b
2021-04-03T18:02:12,040|[DEBUG] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@639f7054
2021-04-03T18:02:12,040|[DEBUG] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@639f7054
2021-04-03T18:02:12,040|[DEBUG] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@13e59265
2021-04-03T18:02:12,040|[DEBUG] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@13e59265
2021-04-03T18:02:12,040|[DEBUG] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3d7c21b7
2021-04-03T18:02:12,040|[DEBUG] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3d7c21b7
2021-04-03T18:02:12,040|[DEBUG] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@58da1b27
2021-04-03T18:02:12,040|[DEBUG] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@58da1b27
2021-04-03T18:02:12,040|[DEBUG] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@129bc797
2021-04-03T18:02:12,040|[DEBUG] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@129bc797
2021-04-03T18:02:12,040|[DEBUG] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@38b65eb9
2021-04-03T18:02:12,040|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@38b65eb9
2021-04-03T18:02:12,040|[DEBUG] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@723493f2
2021-04-03T18:02:12,040|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@723493f2
2021-04-03T18:02:12,041|[DEBUG] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@2be33ac
2021-04-03T18:02:12,041|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2be33ac
2021-04-03T18:02:12,041|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2be33ac
2021-04-03T18:02:12,041|[DEBUG] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7892d7a7
2021-04-03T18:02:12,041|[DEBUG] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@704a0f9
2021-04-03T18:02:12,041|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@704a0f9
2021-04-03T18:02:12,041|[DEBUG] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@704a0f9
2021-04-03T18:02:12,041|[DEBUG] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@15cf663c
2021-04-03T18:02:12,041|[DEBUG] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@68317dc0
2021-04-03T18:02:12,041|[DEBUG] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@2c9e3083
2021-04-03T18:02:12,041|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2c9e3083
2021-04-03T18:02:12,041|[DEBUG] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@179eb386
2021-04-03T18:02:12,041|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@179eb386
2021-04-03T18:02:12,041|[DEBUG] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@70915da3
2021-04-03T18:02:12,042|[DEBUG] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@70915da3
2021-04-03T18:02:12,042|[DEBUG] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@3e5b32ca
2021-04-03T18:02:12,042|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3e5b32ca
2021-04-03T18:02:12,042|[DEBUG] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5d6d21e2
2021-04-03T18:02:12,042|[DEBUG] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5d6d21e2
2021-04-03T18:02:12,042|[DEBUG] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@39e67fbc
2021-04-03T18:02:12,042|[DEBUG] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@33260ecd
2021-04-03T18:02:12,042|[DEBUG] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@33260ecd
2021-04-03T18:02:12,042|[DEBUG] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@33260ecd
2021-04-03T18:02:12,042|[DEBUG] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@671f70bc
2021-04-03T18:02:12,042|[DEBUG] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@671f70bc
2021-04-03T18:02:12,043|[DEBUG] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@671f70bc
2021-04-03T18:02:12,043|[DEBUG] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@3e0d722f
2021-04-03T18:02:12,043|[DEBUG] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@7fab8e9a
2021-04-03T18:02:12,043|[DEBUG] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@251d3913
2021-04-03T18:02:12,043|[DEBUG] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@251d3913
2021-04-03T18:02:12,043|[DEBUG] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@251d3913
2021-04-03T18:02:12,043|[DEBUG] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@18211894
2021-04-03T18:02:12,043|[DEBUG] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@18211894
2021-04-03T18:02:12,043|[DEBUG] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@18211894
2021-04-03T18:02:12,043|[DEBUG] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@76cb6d16
2021-04-03T18:02:12,043|[DEBUG] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@3bd6ce4e
2021-04-03T18:02:12,043|[DEBUG] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@4f2a0651
2021-04-03T18:02:12,043|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4f2a0651
2021-04-03T18:02:12,044|[DEBUG] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@79f6e671
2021-04-03T18:02:12,044|[DEBUG] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@4c49471c
2021-04-03T18:02:12,044|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4c49471c
2021-04-03T18:02:12,044|[DEBUG] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@559ac87f
2021-04-03T18:02:12,044|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@559ac87f
2021-04-03T18:02:12,044|[DEBUG] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@10683f87
2021-04-03T18:02:12,044|[DEBUG] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2c3f9229
2021-04-03T18:02:12,044|[DEBUG] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@6d68cbf3
2021-04-03T18:02:12,044|[DEBUG] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@151cbba4
2021-04-03T18:02:12,044|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@151cbba4
2021-04-03T18:02:12,045|[DEBUG] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4df207e1
2021-04-03T18:02:12,045|[DEBUG] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1a2a94ae
2021-04-03T18:02:12,045|[DEBUG] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@36840e6c
2021-04-03T18:02:12,045|[DEBUG] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@600dfbca
2021-04-03T18:02:12,045|[DEBUG] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3d1d3525
2021-04-03T18:02:12,045|[DEBUG] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@735c49cc
2021-04-03T18:02:12,045|[DEBUG] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@653ddea5
2021-04-03T18:02:12,045|[DEBUG] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6ae1ba63
]]></system-out>
    <system-err><![CDATA[Apr 03, 2021 6:01:43 PM org.apache.catalina.core.StandardService startInternal
INFO: Starting service [Tomcat]
Apr 03, 2021 6:01:43 PM org.apache.catalina.core.StandardEngine startInternal
INFO: Starting Servlet engine: [Apache Tomcat/9.0.44]
Apr 03, 2021 6:01:43 PM org.apache.catalina.startup.ContextConfig getDefaultWebXmlFragment
INFO: No global web.xml found
Apr 03, 2021 6:01:43 PM org.apache.tomcat.util.scan.StandardJarScanner processURLs
WARNING: Failed to scan [file:/C:/Users/shado/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-api-2.3.1.jar] from classloader hierarchy
java.io.IOException: java.lang.reflect.InvocationTargetException
	at org.apache.tomcat.util.compat.Jre9Compat.jarFileNewInstance(Jre9Compat.java:209)
	at org.apache.tomcat.util.scan.JarFileUrlJar.<init>(JarFileUrlJar.java:65)
	at org.apache.tomcat.util.scan.JarFactory.newInstance(JarFactory.java:49)
	at org.apache.tomcat.util.scan.StandardJarScanner.process(StandardJarScanner.java:383)
	at org.apache.tomcat.util.scan.StandardJarScanner.processURLs(StandardJarScanner.java:318)
	at org.apache.tomcat.util.scan.StandardJarScanner.doScanClassPath(StandardJarScanner.java:282)
	at org.apache.tomcat.util.scan.StandardJarScanner.scan(StandardJarScanner.java:233)
	at org.apache.catalina.startup.ContextConfig.processJarsForWebFragments(ContextConfig.java:2135)
	at org.apache.catalina.startup.ContextConfig.webConfig(ContextConfig.java:1289)
	at org.apache.catalina.startup.ContextConfig.configureStart(ContextConfig.java:986)
	at org.apache.catalina.startup.ContextConfig.lifecycleEvent(ContextConfig.java:303)
	at org.apache.catalina.util.LifecycleBase.fireLifecycleEvent(LifecycleBase.java:123)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5082)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:843)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:434)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:930)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:486)
	at common.TomcatStartUp.createTomcat(TomcatStartUp.java:20)
	at logic.AccountLogicTest.setUpBeforeClass(AccountLogicTest.java:36)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:688)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptLifecycleMethod(TimeoutExtension.java:126)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptBeforeAllMethod(TimeoutExtension.java:68)
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeBeforeAllMethods$9(ClassBasedTestDescriptor.java:384)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeBeforeAllMethods(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.before(ClassBasedTestDescriptor.java:196)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.before(ClassBasedTestDescriptor.java:78)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:136)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:108)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:96)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:75)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:188)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:154)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:128)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.GeneratedConstructorAccessor17.newInstance(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
	at org.apache.tomcat.util.compat.Jre9Compat.jarFileNewInstance(Jre9Compat.java:206)
	... 94 more
Caused by: java.nio.file.NoSuchFileException: C:\Users\shado\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-api-2.3.1.jar
	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:85)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:108)
	at java.base/sun.nio.fs.WindowsFileAttributeViews$Basic.readAttributes(WindowsFileAttributeViews.java:53)
	at java.base/sun.nio.fs.WindowsFileAttributeViews$Basic.readAttributes(WindowsFileAttributeViews.java:38)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.readAttributes(WindowsFileSystemProvider.java:198)
	at java.base/java.nio.file.Files.readAttributes(Files.java:1763)
	at java.base/java.util.zip.ZipFile$Source.get(ZipFile.java:1225)
	at java.base/java.util.zip.ZipFile$CleanableResource.<init>(ZipFile.java:727)
	at java.base/java.util.zip.ZipFile$CleanableResource.get(ZipFile.java:844)
	at java.base/java.util.zip.ZipFile.<init>(ZipFile.java:247)
	at java.base/java.util.zip.ZipFile.<init>(ZipFile.java:177)
	at java.base/java.util.jar.JarFile.<init>(JarFile.java:348)
	... 98 more

Apr 03, 2021 6:01:43 PM org.apache.tomcat.util.scan.StandardJarScanner processURLs
WARNING: Failed to scan [file:/C:/Users/shado/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/txw2-2.3.1.jar] from classloader hierarchy
java.io.IOException: java.lang.reflect.InvocationTargetException
	at org.apache.tomcat.util.compat.Jre9Compat.jarFileNewInstance(Jre9Compat.java:209)
	at org.apache.tomcat.util.scan.JarFileUrlJar.<init>(JarFileUrlJar.java:65)
	at org.apache.tomcat.util.scan.JarFactory.newInstance(JarFactory.java:49)
	at org.apache.tomcat.util.scan.StandardJarScanner.process(StandardJarScanner.java:383)
	at org.apache.tomcat.util.scan.StandardJarScanner.processURLs(StandardJarScanner.java:318)
	at org.apache.tomcat.util.scan.StandardJarScanner.doScanClassPath(StandardJarScanner.java:282)
	at org.apache.tomcat.util.scan.StandardJarScanner.scan(StandardJarScanner.java:233)
	at org.apache.catalina.startup.ContextConfig.processJarsForWebFragments(ContextConfig.java:2135)
	at org.apache.catalina.startup.ContextConfig.webConfig(ContextConfig.java:1289)
	at org.apache.catalina.startup.ContextConfig.configureStart(ContextConfig.java:986)
	at org.apache.catalina.startup.ContextConfig.lifecycleEvent(ContextConfig.java:303)
	at org.apache.catalina.util.LifecycleBase.fireLifecycleEvent(LifecycleBase.java:123)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5082)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:843)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:434)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:930)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:486)
	at common.TomcatStartUp.createTomcat(TomcatStartUp.java:20)
	at logic.AccountLogicTest.setUpBeforeClass(AccountLogicTest.java:36)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:688)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptLifecycleMethod(TimeoutExtension.java:126)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptBeforeAllMethod(TimeoutExtension.java:68)
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeBeforeAllMethods$9(ClassBasedTestDescriptor.java:384)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeBeforeAllMethods(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.before(ClassBasedTestDescriptor.java:196)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.before(ClassBasedTestDescriptor.java:78)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:136)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:108)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:96)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:75)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:188)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:154)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:128)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.GeneratedConstructorAccessor17.newInstance(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
	at org.apache.tomcat.util.compat.Jre9Compat.jarFileNewInstance(Jre9Compat.java:206)
	... 94 more
Caused by: java.nio.file.NoSuchFileException: C:\Users\shado\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\txw2-2.3.1.jar
	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:85)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:108)
	at java.base/sun.nio.fs.WindowsFileAttributeViews$Basic.readAttributes(WindowsFileAttributeViews.java:53)
	at java.base/sun.nio.fs.WindowsFileAttributeViews$Basic.readAttributes(WindowsFileAttributeViews.java:38)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.readAttributes(WindowsFileSystemProvider.java:198)
	at java.base/java.nio.file.Files.readAttributes(Files.java:1763)
	at java.base/java.util.zip.ZipFile$Source.get(ZipFile.java:1225)
	at java.base/java.util.zip.ZipFile$CleanableResource.<init>(ZipFile.java:727)
	at java.base/java.util.zip.ZipFile$CleanableResource.get(ZipFile.java:844)
	at java.base/java.util.zip.ZipFile.<init>(ZipFile.java:247)
	at java.base/java.util.zip.ZipFile.<init>(ZipFile.java:177)
	at java.base/java.util.jar.JarFile.<init>(JarFile.java:348)
	... 98 more

Apr 03, 2021 6:01:43 PM org.apache.tomcat.util.scan.StandardJarScanner processURLs
WARNING: Failed to scan [file:/C:/Users/shado/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/istack-commons-runtime-3.0.7.jar] from classloader hierarchy
java.io.IOException: java.lang.reflect.InvocationTargetException
	at org.apache.tomcat.util.compat.Jre9Compat.jarFileNewInstance(Jre9Compat.java:209)
	at org.apache.tomcat.util.scan.JarFileUrlJar.<init>(JarFileUrlJar.java:65)
	at org.apache.tomcat.util.scan.JarFactory.newInstance(JarFactory.java:49)
	at org.apache.tomcat.util.scan.StandardJarScanner.process(StandardJarScanner.java:383)
	at org.apache.tomcat.util.scan.StandardJarScanner.processURLs(StandardJarScanner.java:318)
	at org.apache.tomcat.util.scan.StandardJarScanner.doScanClassPath(StandardJarScanner.java:282)
	at org.apache.tomcat.util.scan.StandardJarScanner.scan(StandardJarScanner.java:233)
	at org.apache.catalina.startup.ContextConfig.processJarsForWebFragments(ContextConfig.java:2135)
	at org.apache.catalina.startup.ContextConfig.webConfig(ContextConfig.java:1289)
	at org.apache.catalina.startup.ContextConfig.configureStart(ContextConfig.java:986)
	at org.apache.catalina.startup.ContextConfig.lifecycleEvent(ContextConfig.java:303)
	at org.apache.catalina.util.LifecycleBase.fireLifecycleEvent(LifecycleBase.java:123)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5082)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:843)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:434)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:930)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:486)
	at common.TomcatStartUp.createTomcat(TomcatStartUp.java:20)
	at logic.AccountLogicTest.setUpBeforeClass(AccountLogicTest.java:36)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:688)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptLifecycleMethod(TimeoutExtension.java:126)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptBeforeAllMethod(TimeoutExtension.java:68)
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeBeforeAllMethods$9(ClassBasedTestDescriptor.java:384)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeBeforeAllMethods(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.before(ClassBasedTestDescriptor.java:196)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.before(ClassBasedTestDescriptor.java:78)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:136)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:108)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:96)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:75)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:188)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:154)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:128)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.GeneratedConstructorAccessor17.newInstance(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
	at org.apache.tomcat.util.compat.Jre9Compat.jarFileNewInstance(Jre9Compat.java:206)
	... 94 more
Caused by: java.nio.file.NoSuchFileException: C:\Users\shado\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\istack-commons-runtime-3.0.7.jar
	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:85)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:108)
	at java.base/sun.nio.fs.WindowsFileAttributeViews$Basic.readAttributes(WindowsFileAttributeViews.java:53)
	at java.base/sun.nio.fs.WindowsFileAttributeViews$Basic.readAttributes(WindowsFileAttributeViews.java:38)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.readAttributes(WindowsFileSystemProvider.java:198)
	at java.base/java.nio.file.Files.readAttributes(Files.java:1763)
	at java.base/java.util.zip.ZipFile$Source.get(ZipFile.java:1225)
	at java.base/java.util.zip.ZipFile$CleanableResource.<init>(ZipFile.java:727)
	at java.base/java.util.zip.ZipFile$CleanableResource.get(ZipFile.java:844)
	at java.base/java.util.zip.ZipFile.<init>(ZipFile.java:247)
	at java.base/java.util.zip.ZipFile.<init>(ZipFile.java:177)
	at java.base/java.util.jar.JarFile.<init>(JarFile.java:348)
	... 98 more

Apr 03, 2021 6:01:43 PM org.apache.tomcat.util.scan.StandardJarScanner processURLs
WARNING: Failed to scan [file:/C:/Users/shado/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/stax-ex-1.8.jar] from classloader hierarchy
java.io.IOException: java.lang.reflect.InvocationTargetException
	at org.apache.tomcat.util.compat.Jre9Compat.jarFileNewInstance(Jre9Compat.java:209)
	at org.apache.tomcat.util.scan.JarFileUrlJar.<init>(JarFileUrlJar.java:65)
	at org.apache.tomcat.util.scan.JarFactory.newInstance(JarFactory.java:49)
	at org.apache.tomcat.util.scan.StandardJarScanner.process(StandardJarScanner.java:383)
	at org.apache.tomcat.util.scan.StandardJarScanner.processURLs(StandardJarScanner.java:318)
	at org.apache.tomcat.util.scan.StandardJarScanner.doScanClassPath(StandardJarScanner.java:282)
	at org.apache.tomcat.util.scan.StandardJarScanner.scan(StandardJarScanner.java:233)
	at org.apache.catalina.startup.ContextConfig.processJarsForWebFragments(ContextConfig.java:2135)
	at org.apache.catalina.startup.ContextConfig.webConfig(ContextConfig.java:1289)
	at org.apache.catalina.startup.ContextConfig.configureStart(ContextConfig.java:986)
	at org.apache.catalina.startup.ContextConfig.lifecycleEvent(ContextConfig.java:303)
	at org.apache.catalina.util.LifecycleBase.fireLifecycleEvent(LifecycleBase.java:123)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5082)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:843)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:434)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:930)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:486)
	at common.TomcatStartUp.createTomcat(TomcatStartUp.java:20)
	at logic.AccountLogicTest.setUpBeforeClass(AccountLogicTest.java:36)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:688)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptLifecycleMethod(TimeoutExtension.java:126)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptBeforeAllMethod(TimeoutExtension.java:68)
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeBeforeAllMethods$9(ClassBasedTestDescriptor.java:384)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeBeforeAllMethods(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.before(ClassBasedTestDescriptor.java:196)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.before(ClassBasedTestDescriptor.java:78)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:136)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:108)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:96)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:75)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:188)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:154)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:128)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.GeneratedConstructorAccessor17.newInstance(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
	at org.apache.tomcat.util.compat.Jre9Compat.jarFileNewInstance(Jre9Compat.java:206)
	... 94 more
Caused by: java.nio.file.NoSuchFileException: C:\Users\shado\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\stax-ex-1.8.jar
	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:85)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:108)
	at java.base/sun.nio.fs.WindowsFileAttributeViews$Basic.readAttributes(WindowsFileAttributeViews.java:53)
	at java.base/sun.nio.fs.WindowsFileAttributeViews$Basic.readAttributes(WindowsFileAttributeViews.java:38)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.readAttributes(WindowsFileSystemProvider.java:198)
	at java.base/java.nio.file.Files.readAttributes(Files.java:1763)
	at java.base/java.util.zip.ZipFile$Source.get(ZipFile.java:1225)
	at java.base/java.util.zip.ZipFile$CleanableResource.<init>(ZipFile.java:727)
	at java.base/java.util.zip.ZipFile$CleanableResource.get(ZipFile.java:844)
	at java.base/java.util.zip.ZipFile.<init>(ZipFile.java:247)
	at java.base/java.util.zip.ZipFile.<init>(ZipFile.java:177)
	at java.base/java.util.jar.JarFile.<init>(JarFile.java:348)
	... 98 more

Apr 03, 2021 6:01:43 PM org.apache.tomcat.util.scan.StandardJarScanner processURLs
WARNING: Failed to scan [file:/C:/Users/shado/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/FastInfoset-1.2.15.jar] from classloader hierarchy
java.io.IOException: java.lang.reflect.InvocationTargetException
	at org.apache.tomcat.util.compat.Jre9Compat.jarFileNewInstance(Jre9Compat.java:209)
	at org.apache.tomcat.util.scan.JarFileUrlJar.<init>(JarFileUrlJar.java:65)
	at org.apache.tomcat.util.scan.JarFactory.newInstance(JarFactory.java:49)
	at org.apache.tomcat.util.scan.StandardJarScanner.process(StandardJarScanner.java:383)
	at org.apache.tomcat.util.scan.StandardJarScanner.processURLs(StandardJarScanner.java:318)
	at org.apache.tomcat.util.scan.StandardJarScanner.doScanClassPath(StandardJarScanner.java:282)
	at org.apache.tomcat.util.scan.StandardJarScanner.scan(StandardJarScanner.java:233)
	at org.apache.catalina.startup.ContextConfig.processJarsForWebFragments(ContextConfig.java:2135)
	at org.apache.catalina.startup.ContextConfig.webConfig(ContextConfig.java:1289)
	at org.apache.catalina.startup.ContextConfig.configureStart(ContextConfig.java:986)
	at org.apache.catalina.startup.ContextConfig.lifecycleEvent(ContextConfig.java:303)
	at org.apache.catalina.util.LifecycleBase.fireLifecycleEvent(LifecycleBase.java:123)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5082)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:843)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:434)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:930)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:486)
	at common.TomcatStartUp.createTomcat(TomcatStartUp.java:20)
	at logic.AccountLogicTest.setUpBeforeClass(AccountLogicTest.java:36)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:688)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptLifecycleMethod(TimeoutExtension.java:126)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptBeforeAllMethod(TimeoutExtension.java:68)
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeBeforeAllMethods$9(ClassBasedTestDescriptor.java:384)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeBeforeAllMethods(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.before(ClassBasedTestDescriptor.java:196)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.before(ClassBasedTestDescriptor.java:78)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:136)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:108)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:96)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:75)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:188)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:154)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:128)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.GeneratedConstructorAccessor17.newInstance(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
	at org.apache.tomcat.util.compat.Jre9Compat.jarFileNewInstance(Jre9Compat.java:206)
	... 94 more
Caused by: java.nio.file.NoSuchFileException: C:\Users\shado\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\FastInfoset-1.2.15.jar
	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:85)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:108)
	at java.base/sun.nio.fs.WindowsFileAttributeViews$Basic.readAttributes(WindowsFileAttributeViews.java:53)
	at java.base/sun.nio.fs.WindowsFileAttributeViews$Basic.readAttributes(WindowsFileAttributeViews.java:38)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.readAttributes(WindowsFileSystemProvider.java:198)
	at java.base/java.nio.file.Files.readAttributes(Files.java:1763)
	at java.base/java.util.zip.ZipFile$Source.get(ZipFile.java:1225)
	at java.base/java.util.zip.ZipFile$CleanableResource.<init>(ZipFile.java:727)
	at java.base/java.util.zip.ZipFile$CleanableResource.get(ZipFile.java:844)
	at java.base/java.util.zip.ZipFile.<init>(ZipFile.java:247)
	at java.base/java.util.zip.ZipFile.<init>(ZipFile.java:177)
	at java.base/java.util.jar.JarFile.<init>(JarFile.java:348)
	... 98 more

Apr 03, 2021 6:01:43 PM org.apache.tomcat.util.scan.StandardJarScanner processURLs
WARNING: Failed to scan [file:/C:/Users/shado/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/javax.activation-api-1.2.0.jar] from classloader hierarchy
java.io.IOException: java.lang.reflect.InvocationTargetException
	at org.apache.tomcat.util.compat.Jre9Compat.jarFileNewInstance(Jre9Compat.java:209)
	at org.apache.tomcat.util.scan.JarFileUrlJar.<init>(JarFileUrlJar.java:65)
	at org.apache.tomcat.util.scan.JarFactory.newInstance(JarFactory.java:49)
	at org.apache.tomcat.util.scan.StandardJarScanner.process(StandardJarScanner.java:383)
	at org.apache.tomcat.util.scan.StandardJarScanner.processURLs(StandardJarScanner.java:318)
	at org.apache.tomcat.util.scan.StandardJarScanner.doScanClassPath(StandardJarScanner.java:282)
	at org.apache.tomcat.util.scan.StandardJarScanner.scan(StandardJarScanner.java:233)
	at org.apache.catalina.startup.ContextConfig.processJarsForWebFragments(ContextConfig.java:2135)
	at org.apache.catalina.startup.ContextConfig.webConfig(ContextConfig.java:1289)
	at org.apache.catalina.startup.ContextConfig.configureStart(ContextConfig.java:986)
	at org.apache.catalina.startup.ContextConfig.lifecycleEvent(ContextConfig.java:303)
	at org.apache.catalina.util.LifecycleBase.fireLifecycleEvent(LifecycleBase.java:123)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5082)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:843)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:434)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:930)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:486)
	at common.TomcatStartUp.createTomcat(TomcatStartUp.java:20)
	at logic.AccountLogicTest.setUpBeforeClass(AccountLogicTest.java:36)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:688)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptLifecycleMethod(TimeoutExtension.java:126)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptBeforeAllMethod(TimeoutExtension.java:68)
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeBeforeAllMethods$9(ClassBasedTestDescriptor.java:384)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeBeforeAllMethods(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.before(ClassBasedTestDescriptor.java:196)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.before(ClassBasedTestDescriptor.java:78)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:136)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:108)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:96)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:75)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:188)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:154)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:128)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.GeneratedConstructorAccessor17.newInstance(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
	at org.apache.tomcat.util.compat.Jre9Compat.jarFileNewInstance(Jre9Compat.java:206)
	... 94 more
Caused by: java.nio.file.NoSuchFileException: C:\Users\shado\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\javax.activation-api-1.2.0.jar
	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:85)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:108)
	at java.base/sun.nio.fs.WindowsFileAttributeViews$Basic.readAttributes(WindowsFileAttributeViews.java:53)
	at java.base/sun.nio.fs.WindowsFileAttributeViews$Basic.readAttributes(WindowsFileAttributeViews.java:38)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.readAttributes(WindowsFileSystemProvider.java:198)
	at java.base/java.nio.file.Files.readAttributes(Files.java:1763)
	at java.base/java.util.zip.ZipFile$Source.get(ZipFile.java:1225)
	at java.base/java.util.zip.ZipFile$CleanableResource.<init>(ZipFile.java:727)
	at java.base/java.util.zip.ZipFile$CleanableResource.get(ZipFile.java:844)
	at java.base/java.util.zip.ZipFile.<init>(ZipFile.java:247)
	at java.base/java.util.zip.ZipFile.<init>(ZipFile.java:177)
	at java.base/java.util.jar.JarFile.<init>(JarFile.java:348)
	... 98 more

Apr 03, 2021 6:01:45 PM org.apache.tomcat.util.scan.StandardJarScanner processURLs
WARNING: Failed to scan [file:/C:/Users/shado/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-api-2.3.1.jar] from classloader hierarchy
java.io.IOException: java.lang.reflect.InvocationTargetException
	at org.apache.tomcat.util.compat.Jre9Compat.jarFileNewInstance(Jre9Compat.java:209)
	at org.apache.tomcat.util.scan.JarFileUrlJar.<init>(JarFileUrlJar.java:65)
	at org.apache.tomcat.util.scan.JarFactory.newInstance(JarFactory.java:49)
	at org.apache.tomcat.util.scan.StandardJarScanner.process(StandardJarScanner.java:383)
	at org.apache.tomcat.util.scan.StandardJarScanner.processURLs(StandardJarScanner.java:318)
	at org.apache.tomcat.util.scan.StandardJarScanner.doScanClassPath(StandardJarScanner.java:282)
	at org.apache.tomcat.util.scan.StandardJarScanner.scan(StandardJarScanner.java:233)
	at org.apache.jasper.servlet.TldScanner.scanJars(TldScanner.java:262)
	at org.apache.jasper.servlet.TldScanner.scan(TldScanner.java:104)
	at org.apache.jasper.servlet.JasperInitializer.onStartup(JasperInitializer.java:83)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5166)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:843)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:434)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:930)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:486)
	at common.TomcatStartUp.createTomcat(TomcatStartUp.java:20)
	at logic.AccountLogicTest.setUpBeforeClass(AccountLogicTest.java:36)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:688)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptLifecycleMethod(TimeoutExtension.java:126)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptBeforeAllMethod(TimeoutExtension.java:68)
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeBeforeAllMethods$9(ClassBasedTestDescriptor.java:384)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeBeforeAllMethods(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.before(ClassBasedTestDescriptor.java:196)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.before(ClassBasedTestDescriptor.java:78)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:136)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:108)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:96)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:75)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:188)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:154)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:128)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.GeneratedConstructorAccessor17.newInstance(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
	at org.apache.tomcat.util.compat.Jre9Compat.jarFileNewInstance(Jre9Compat.java:206)
	... 92 more
Caused by: java.nio.file.NoSuchFileException: C:\Users\shado\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-api-2.3.1.jar
	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:85)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:108)
	at java.base/sun.nio.fs.WindowsFileAttributeViews$Basic.readAttributes(WindowsFileAttributeViews.java:53)
	at java.base/sun.nio.fs.WindowsFileAttributeViews$Basic.readAttributes(WindowsFileAttributeViews.java:38)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.readAttributes(WindowsFileSystemProvider.java:198)
	at java.base/java.nio.file.Files.readAttributes(Files.java:1763)
	at java.base/java.util.zip.ZipFile$Source.get(ZipFile.java:1225)
	at java.base/java.util.zip.ZipFile$CleanableResource.<init>(ZipFile.java:727)
	at java.base/java.util.zip.ZipFile$CleanableResource.get(ZipFile.java:844)
	at java.base/java.util.zip.ZipFile.<init>(ZipFile.java:247)
	at java.base/java.util.zip.ZipFile.<init>(ZipFile.java:177)
	at java.base/java.util.jar.JarFile.<init>(JarFile.java:348)
	... 96 more

Apr 03, 2021 6:01:45 PM org.apache.tomcat.util.scan.StandardJarScanner processURLs
WARNING: Failed to scan [file:/C:/Users/shado/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/txw2-2.3.1.jar] from classloader hierarchy
java.io.IOException: java.lang.reflect.InvocationTargetException
	at org.apache.tomcat.util.compat.Jre9Compat.jarFileNewInstance(Jre9Compat.java:209)
	at org.apache.tomcat.util.scan.JarFileUrlJar.<init>(JarFileUrlJar.java:65)
	at org.apache.tomcat.util.scan.JarFactory.newInstance(JarFactory.java:49)
	at org.apache.tomcat.util.scan.StandardJarScanner.process(StandardJarScanner.java:383)
	at org.apache.tomcat.util.scan.StandardJarScanner.processURLs(StandardJarScanner.java:318)
	at org.apache.tomcat.util.scan.StandardJarScanner.doScanClassPath(StandardJarScanner.java:282)
	at org.apache.tomcat.util.scan.StandardJarScanner.scan(StandardJarScanner.java:233)
	at org.apache.jasper.servlet.TldScanner.scanJars(TldScanner.java:262)
	at org.apache.jasper.servlet.TldScanner.scan(TldScanner.java:104)
	at org.apache.jasper.servlet.JasperInitializer.onStartup(JasperInitializer.java:83)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5166)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:843)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:434)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:930)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:486)
	at common.TomcatStartUp.createTomcat(TomcatStartUp.java:20)
	at logic.AccountLogicTest.setUpBeforeClass(AccountLogicTest.java:36)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:688)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptLifecycleMethod(TimeoutExtension.java:126)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptBeforeAllMethod(TimeoutExtension.java:68)
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeBeforeAllMethods$9(ClassBasedTestDescriptor.java:384)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeBeforeAllMethods(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.before(ClassBasedTestDescriptor.java:196)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.before(ClassBasedTestDescriptor.java:78)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:136)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:108)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:96)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:75)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:188)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:154)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:128)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.GeneratedConstructorAccessor17.newInstance(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
	at org.apache.tomcat.util.compat.Jre9Compat.jarFileNewInstance(Jre9Compat.java:206)
	... 92 more
Caused by: java.nio.file.NoSuchFileException: C:\Users\shado\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\txw2-2.3.1.jar
	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:85)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:108)
	at java.base/sun.nio.fs.WindowsFileAttributeViews$Basic.readAttributes(WindowsFileAttributeViews.java:53)
	at java.base/sun.nio.fs.WindowsFileAttributeViews$Basic.readAttributes(WindowsFileAttributeViews.java:38)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.readAttributes(WindowsFileSystemProvider.java:198)
	at java.base/java.nio.file.Files.readAttributes(Files.java:1763)
	at java.base/java.util.zip.ZipFile$Source.get(ZipFile.java:1225)
	at java.base/java.util.zip.ZipFile$CleanableResource.<init>(ZipFile.java:727)
	at java.base/java.util.zip.ZipFile$CleanableResource.get(ZipFile.java:844)
	at java.base/java.util.zip.ZipFile.<init>(ZipFile.java:247)
	at java.base/java.util.zip.ZipFile.<init>(ZipFile.java:177)
	at java.base/java.util.jar.JarFile.<init>(JarFile.java:348)
	... 96 more

Apr 03, 2021 6:01:45 PM org.apache.tomcat.util.scan.StandardJarScanner processURLs
WARNING: Failed to scan [file:/C:/Users/shado/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/istack-commons-runtime-3.0.7.jar] from classloader hierarchy
java.io.IOException: java.lang.reflect.InvocationTargetException
	at org.apache.tomcat.util.compat.Jre9Compat.jarFileNewInstance(Jre9Compat.java:209)
	at org.apache.tomcat.util.scan.JarFileUrlJar.<init>(JarFileUrlJar.java:65)
	at org.apache.tomcat.util.scan.JarFactory.newInstance(JarFactory.java:49)
	at org.apache.tomcat.util.scan.StandardJarScanner.process(StandardJarScanner.java:383)
	at org.apache.tomcat.util.scan.StandardJarScanner.processURLs(StandardJarScanner.java:318)
	at org.apache.tomcat.util.scan.StandardJarScanner.doScanClassPath(StandardJarScanner.java:282)
	at org.apache.tomcat.util.scan.StandardJarScanner.scan(StandardJarScanner.java:233)
	at org.apache.jasper.servlet.TldScanner.scanJars(TldScanner.java:262)
	at org.apache.jasper.servlet.TldScanner.scan(TldScanner.java:104)
	at org.apache.jasper.servlet.JasperInitializer.onStartup(JasperInitializer.java:83)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5166)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:843)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:434)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:930)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:486)
	at common.TomcatStartUp.createTomcat(TomcatStartUp.java:20)
	at logic.AccountLogicTest.setUpBeforeClass(AccountLogicTest.java:36)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:688)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptLifecycleMethod(TimeoutExtension.java:126)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptBeforeAllMethod(TimeoutExtension.java:68)
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeBeforeAllMethods$9(ClassBasedTestDescriptor.java:384)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeBeforeAllMethods(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.before(ClassBasedTestDescriptor.java:196)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.before(ClassBasedTestDescriptor.java:78)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:136)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:108)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:96)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:75)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:188)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:154)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:128)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.GeneratedConstructorAccessor17.newInstance(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
	at org.apache.tomcat.util.compat.Jre9Compat.jarFileNewInstance(Jre9Compat.java:206)
	... 92 more
Caused by: java.nio.file.NoSuchFileException: C:\Users\shado\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\istack-commons-runtime-3.0.7.jar
	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:85)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:108)
	at java.base/sun.nio.fs.WindowsFileAttributeViews$Basic.readAttributes(WindowsFileAttributeViews.java:53)
	at java.base/sun.nio.fs.WindowsFileAttributeViews$Basic.readAttributes(WindowsFileAttributeViews.java:38)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.readAttributes(WindowsFileSystemProvider.java:198)
	at java.base/java.nio.file.Files.readAttributes(Files.java:1763)
	at java.base/java.util.zip.ZipFile$Source.get(ZipFile.java:1225)
	at java.base/java.util.zip.ZipFile$CleanableResource.<init>(ZipFile.java:727)
	at java.base/java.util.zip.ZipFile$CleanableResource.get(ZipFile.java:844)
	at java.base/java.util.zip.ZipFile.<init>(ZipFile.java:247)
	at java.base/java.util.zip.ZipFile.<init>(ZipFile.java:177)
	at java.base/java.util.jar.JarFile.<init>(JarFile.java:348)
	... 96 more

Apr 03, 2021 6:01:45 PM org.apache.tomcat.util.scan.StandardJarScanner processURLs
WARNING: Failed to scan [file:/C:/Users/shado/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/stax-ex-1.8.jar] from classloader hierarchy
java.io.IOException: java.lang.reflect.InvocationTargetException
	at org.apache.tomcat.util.compat.Jre9Compat.jarFileNewInstance(Jre9Compat.java:209)
	at org.apache.tomcat.util.scan.JarFileUrlJar.<init>(JarFileUrlJar.java:65)
	at org.apache.tomcat.util.scan.JarFactory.newInstance(JarFactory.java:49)
	at org.apache.tomcat.util.scan.StandardJarScanner.process(StandardJarScanner.java:383)
	at org.apache.tomcat.util.scan.StandardJarScanner.processURLs(StandardJarScanner.java:318)
	at org.apache.tomcat.util.scan.StandardJarScanner.doScanClassPath(StandardJarScanner.java:282)
	at org.apache.tomcat.util.scan.StandardJarScanner.scan(StandardJarScanner.java:233)
	at org.apache.jasper.servlet.TldScanner.scanJars(TldScanner.java:262)
	at org.apache.jasper.servlet.TldScanner.scan(TldScanner.java:104)
	at org.apache.jasper.servlet.JasperInitializer.onStartup(JasperInitializer.java:83)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5166)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:843)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:434)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:930)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:486)
	at common.TomcatStartUp.createTomcat(TomcatStartUp.java:20)
	at logic.AccountLogicTest.setUpBeforeClass(AccountLogicTest.java:36)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:688)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptLifecycleMethod(TimeoutExtension.java:126)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptBeforeAllMethod(TimeoutExtension.java:68)
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeBeforeAllMethods$9(ClassBasedTestDescriptor.java:384)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeBeforeAllMethods(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.before(ClassBasedTestDescriptor.java:196)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.before(ClassBasedTestDescriptor.java:78)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:136)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:108)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:96)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:75)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:188)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:154)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:128)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.GeneratedConstructorAccessor17.newInstance(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
	at org.apache.tomcat.util.compat.Jre9Compat.jarFileNewInstance(Jre9Compat.java:206)
	... 92 more
Caused by: java.nio.file.NoSuchFileException: C:\Users\shado\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\stax-ex-1.8.jar
	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:85)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:108)
	at java.base/sun.nio.fs.WindowsFileAttributeViews$Basic.readAttributes(WindowsFileAttributeViews.java:53)
	at java.base/sun.nio.fs.WindowsFileAttributeViews$Basic.readAttributes(WindowsFileAttributeViews.java:38)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.readAttributes(WindowsFileSystemProvider.java:198)
	at java.base/java.nio.file.Files.readAttributes(Files.java:1763)
	at java.base/java.util.zip.ZipFile$Source.get(ZipFile.java:1225)
	at java.base/java.util.zip.ZipFile$CleanableResource.<init>(ZipFile.java:727)
	at java.base/java.util.zip.ZipFile$CleanableResource.get(ZipFile.java:844)
	at java.base/java.util.zip.ZipFile.<init>(ZipFile.java:247)
	at java.base/java.util.zip.ZipFile.<init>(ZipFile.java:177)
	at java.base/java.util.jar.JarFile.<init>(JarFile.java:348)
	... 96 more

Apr 03, 2021 6:01:45 PM org.apache.tomcat.util.scan.StandardJarScanner processURLs
WARNING: Failed to scan [file:/C:/Users/shado/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/FastInfoset-1.2.15.jar] from classloader hierarchy
java.io.IOException: java.lang.reflect.InvocationTargetException
	at org.apache.tomcat.util.compat.Jre9Compat.jarFileNewInstance(Jre9Compat.java:209)
	at org.apache.tomcat.util.scan.JarFileUrlJar.<init>(JarFileUrlJar.java:65)
	at org.apache.tomcat.util.scan.JarFactory.newInstance(JarFactory.java:49)
	at org.apache.tomcat.util.scan.StandardJarScanner.process(StandardJarScanner.java:383)
	at org.apache.tomcat.util.scan.StandardJarScanner.processURLs(StandardJarScanner.java:318)
	at org.apache.tomcat.util.scan.StandardJarScanner.doScanClassPath(StandardJarScanner.java:282)
	at org.apache.tomcat.util.scan.StandardJarScanner.scan(StandardJarScanner.java:233)
	at org.apache.jasper.servlet.TldScanner.scanJars(TldScanner.java:262)
	at org.apache.jasper.servlet.TldScanner.scan(TldScanner.java:104)
	at org.apache.jasper.servlet.JasperInitializer.onStartup(JasperInitializer.java:83)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5166)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:843)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:434)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:930)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:486)
	at common.TomcatStartUp.createTomcat(TomcatStartUp.java:20)
	at logic.AccountLogicTest.setUpBeforeClass(AccountLogicTest.java:36)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:688)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptLifecycleMethod(TimeoutExtension.java:126)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptBeforeAllMethod(TimeoutExtension.java:68)
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeBeforeAllMethods$9(ClassBasedTestDescriptor.java:384)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeBeforeAllMethods(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.before(ClassBasedTestDescriptor.java:196)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.before(ClassBasedTestDescriptor.java:78)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:136)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:108)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:96)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:75)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:188)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:154)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:128)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.GeneratedConstructorAccessor17.newInstance(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
	at org.apache.tomcat.util.compat.Jre9Compat.jarFileNewInstance(Jre9Compat.java:206)
	... 92 more
Caused by: java.nio.file.NoSuchFileException: C:\Users\shado\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\FastInfoset-1.2.15.jar
	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:85)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:108)
	at java.base/sun.nio.fs.WindowsFileAttributeViews$Basic.readAttributes(WindowsFileAttributeViews.java:53)
	at java.base/sun.nio.fs.WindowsFileAttributeViews$Basic.readAttributes(WindowsFileAttributeViews.java:38)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.readAttributes(WindowsFileSystemProvider.java:198)
	at java.base/java.nio.file.Files.readAttributes(Files.java:1763)
	at java.base/java.util.zip.ZipFile$Source.get(ZipFile.java:1225)
	at java.base/java.util.zip.ZipFile$CleanableResource.<init>(ZipFile.java:727)
	at java.base/java.util.zip.ZipFile$CleanableResource.get(ZipFile.java:844)
	at java.base/java.util.zip.ZipFile.<init>(ZipFile.java:247)
	at java.base/java.util.zip.ZipFile.<init>(ZipFile.java:177)
	at java.base/java.util.jar.JarFile.<init>(JarFile.java:348)
	... 96 more

Apr 03, 2021 6:01:45 PM org.apache.tomcat.util.scan.StandardJarScanner processURLs
WARNING: Failed to scan [file:/C:/Users/shado/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/javax.activation-api-1.2.0.jar] from classloader hierarchy
java.io.IOException: java.lang.reflect.InvocationTargetException
	at org.apache.tomcat.util.compat.Jre9Compat.jarFileNewInstance(Jre9Compat.java:209)
	at org.apache.tomcat.util.scan.JarFileUrlJar.<init>(JarFileUrlJar.java:65)
	at org.apache.tomcat.util.scan.JarFactory.newInstance(JarFactory.java:49)
	at org.apache.tomcat.util.scan.StandardJarScanner.process(StandardJarScanner.java:383)
	at org.apache.tomcat.util.scan.StandardJarScanner.processURLs(StandardJarScanner.java:318)
	at org.apache.tomcat.util.scan.StandardJarScanner.doScanClassPath(StandardJarScanner.java:282)
	at org.apache.tomcat.util.scan.StandardJarScanner.scan(StandardJarScanner.java:233)
	at org.apache.jasper.servlet.TldScanner.scanJars(TldScanner.java:262)
	at org.apache.jasper.servlet.TldScanner.scan(TldScanner.java:104)
	at org.apache.jasper.servlet.JasperInitializer.onStartup(JasperInitializer.java:83)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5166)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:843)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:434)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:930)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:486)
	at common.TomcatStartUp.createTomcat(TomcatStartUp.java:20)
	at logic.AccountLogicTest.setUpBeforeClass(AccountLogicTest.java:36)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:688)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptLifecycleMethod(TimeoutExtension.java:126)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptBeforeAllMethod(TimeoutExtension.java:68)
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeBeforeAllMethods$9(ClassBasedTestDescriptor.java:384)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeBeforeAllMethods(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.before(ClassBasedTestDescriptor.java:196)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.before(ClassBasedTestDescriptor.java:78)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:136)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:108)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:96)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:75)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:188)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:154)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:128)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.GeneratedConstructorAccessor17.newInstance(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
	at org.apache.tomcat.util.compat.Jre9Compat.jarFileNewInstance(Jre9Compat.java:206)
	... 92 more
Caused by: java.nio.file.NoSuchFileException: C:\Users\shado\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\javax.activation-api-1.2.0.jar
	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:85)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:108)
	at java.base/sun.nio.fs.WindowsFileAttributeViews$Basic.readAttributes(WindowsFileAttributeViews.java:53)
	at java.base/sun.nio.fs.WindowsFileAttributeViews$Basic.readAttributes(WindowsFileAttributeViews.java:38)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.readAttributes(WindowsFileSystemProvider.java:198)
	at java.base/java.nio.file.Files.readAttributes(Files.java:1763)
	at java.base/java.util.zip.ZipFile$Source.get(ZipFile.java:1225)
	at java.base/java.util.zip.ZipFile$CleanableResource.<init>(ZipFile.java:727)
	at java.base/java.util.zip.ZipFile$CleanableResource.get(ZipFile.java:844)
	at java.base/java.util.zip.ZipFile.<init>(ZipFile.java:247)
	at java.base/java.util.zip.ZipFile.<init>(ZipFile.java:177)
	at java.base/java.util.jar.JarFile.<init>(JarFile.java:348)
	... 96 more

Apr 03, 2021 6:01:45 PM org.apache.jasper.servlet.TldScanner scanJars
INFO: At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
Apr 03, 2021 6:02:11 PM org.apache.catalina.core.StandardContext listenerStart
SEVERE: Exception sending context initialized event to listener instance of class [common.ServletListener]
javax.persistence.PersistenceException: [PersistenceUnit: simplebloodbank-PU-test] Unable to build Hibernate SessionFactory
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.persistenceException(EntityManagerFactoryBuilderImpl.java:1336)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1262)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:56)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:79)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:54)
	at common.EMFactory.initializeEMF(EMFactory.java:33)
	at common.ServletListener.contextInitialized(ServletListener.java:36)
	at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4716)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5177)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:843)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:434)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:930)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:486)
	at common.TomcatStartUp.createTomcat(TomcatStartUp.java:20)
	at logic.AccountLogicTest.setUpBeforeClass(AccountLogicTest.java:36)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:688)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptLifecycleMethod(TimeoutExtension.java:126)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptBeforeAllMethod(TimeoutExtension.java:68)
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeBeforeAllMethods$9(ClassBasedTestDescriptor.java:384)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeBeforeAllMethods(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.before(ClassBasedTestDescriptor.java:196)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.before(ClassBasedTestDescriptor.java:78)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:136)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:108)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:96)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:75)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:188)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:154)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:128)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
Caused by: java.lang.NullPointerException
	at com.mysql.cj.jdbc.StatementImpl.getWarnings(StatementImpl.java:1731)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.apache.tomcat.jdbc.pool.StatementFacade$StatementProxy.invoke(StatementFacade.java:114)
	at com.sun.proxy.$Proxy59.getWarnings(Unknown Source)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:57)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlString(SchemaDropperImpl.java:375)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropFromScript(SchemaDropperImpl.java:175)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.performDrop(SchemaDropperImpl.java:151)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:126)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:112)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:145)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:73)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:316)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:469)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1259)
	... 89 more

Apr 03, 2021 6:02:11 PM org.apache.catalina.core.StandardContext startInternal
SEVERE: One or more listeners failed to start. Full details will be found in the appropriate container log file
Apr 03, 2021 6:02:11 PM org.apache.catalina.util.SessionIdGeneratorBase createSecureRandom
WARNING: Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [367] milliseconds.
Apr 03, 2021 6:02:11 PM org.apache.catalina.core.StandardContext startInternal
SEVERE: Context [/SimpleBloodBank] startup failed due to previous errors
]]></system-err>
  </testcase>
  <testcase name="testGetAccountWithDisplayName" classname="logic.AccountLogicTest" time="0.035">
    <error type="org.hibernate.service.spi.ServiceException"><![CDATA[org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
	at logic.AccountLogicTest.setUp(AccountLogicTest.java:56)
Caused by: org.hibernate.engine.jndi.JndiException: Unable to lookup JNDI name [java:comp/env/jdbc/SimpleBloodBank]
	at logic.AccountLogicTest.setUp(AccountLogicTest.java:56)
Caused by: javax.naming.NameNotFoundException: Name [comp/env/jdbc/SimpleBloodBank] is not bound in this Context. Unable to find [comp].
	at logic.AccountLogicTest.setUp(AccountLogicTest.java:56)
]]></error>
    <system-out><![CDATA[2021-04-03T18:02:12,084|[DEBUG] EMFactory - getting EntityManagerFactory
2021-04-03T18:02:12,084|[DEBUG] EMFactory - initializeing EntityManagerFactory
2021-04-03T18:02:12,084|[DEBUG] EMFactory - creating EntityManagerFactory
2021-04-03T18:02:12,091|[INFO ] LogHelper - HHH000204: Processing PersistenceUnitInfo [name: simplebloodbank-PU-test]
2021-04-03T18:02:12,095|[DEBUG] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@630f24a5
2021-04-03T18:02:12,095|[DEBUG] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@630f24a5
2021-04-03T18:02:12,095|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@630f24a5
2021-04-03T18:02:12,095|[DEBUG] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@34ceabf1
2021-04-03T18:02:12,095|[DEBUG] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@47861e3c
2021-04-03T18:02:12,095|[DEBUG] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@3f2fd933
2021-04-03T18:02:12,095|[DEBUG] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@546f0369
2021-04-03T18:02:12,095|[DEBUG] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@546f0369
2021-04-03T18:02:12,095|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@546f0369
2021-04-03T18:02:12,095|[DEBUG] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@6e32eea5
2021-04-03T18:02:12,095|[DEBUG] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@6e32eea5
2021-04-03T18:02:12,095|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6e32eea5
2021-04-03T18:02:12,095|[DEBUG] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2d45db20
2021-04-03T18:02:12,095|[DEBUG] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2d45db20
2021-04-03T18:02:12,096|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2d45db20
2021-04-03T18:02:12,096|[DEBUG] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@52bf434b
2021-04-03T18:02:12,096|[DEBUG] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@52bf434b
2021-04-03T18:02:12,096|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@52bf434b
2021-04-03T18:02:12,096|[DEBUG] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@563b9462
2021-04-03T18:02:12,096|[DEBUG] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@563b9462
2021-04-03T18:02:12,096|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@563b9462
2021-04-03T18:02:12,096|[DEBUG] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6ad51d91
2021-04-03T18:02:12,096|[DEBUG] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6ad51d91
2021-04-03T18:02:12,096|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6ad51d91
2021-04-03T18:02:12,096|[DEBUG] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@288c16a5
2021-04-03T18:02:12,096|[DEBUG] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@288c16a5
2021-04-03T18:02:12,096|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@288c16a5
2021-04-03T18:02:12,096|[DEBUG] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7540aa55
2021-04-03T18:02:12,096|[DEBUG] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7540aa55
2021-04-03T18:02:12,096|[DEBUG] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6815e19c
2021-04-03T18:02:12,096|[DEBUG] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6815e19c
2021-04-03T18:02:12,096|[DEBUG] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@2d66a5d3
2021-04-03T18:02:12,096|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@2d66a5d3
2021-04-03T18:02:12,097|[DEBUG] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@687fa4d0
2021-04-03T18:02:12,097|[DEBUG] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5bfa2801
2021-04-03T18:02:12,097|[DEBUG] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@25428bab
2021-04-03T18:02:12,097|[DEBUG] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@25428bab
2021-04-03T18:02:12,097|[DEBUG] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@1cfb035c
2021-04-03T18:02:12,097|[DEBUG] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@1cfb035c
2021-04-03T18:02:12,097|[DEBUG] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@1c8ab147
2021-04-03T18:02:12,097|[DEBUG] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@1c8ab147
2021-04-03T18:02:12,097|[DEBUG] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@157f284b
2021-04-03T18:02:12,097|[DEBUG] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@157f284b
2021-04-03T18:02:12,097|[DEBUG] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@639f7054
2021-04-03T18:02:12,097|[DEBUG] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@639f7054
2021-04-03T18:02:12,097|[DEBUG] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@13e59265
2021-04-03T18:02:12,097|[DEBUG] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@13e59265
2021-04-03T18:02:12,097|[DEBUG] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3d7c21b7
2021-04-03T18:02:12,097|[DEBUG] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3d7c21b7
2021-04-03T18:02:12,097|[DEBUG] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@58da1b27
2021-04-03T18:02:12,097|[DEBUG] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@58da1b27
2021-04-03T18:02:12,097|[DEBUG] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@129bc797
2021-04-03T18:02:12,097|[DEBUG] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@129bc797
2021-04-03T18:02:12,098|[DEBUG] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@38b65eb9
2021-04-03T18:02:12,098|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@38b65eb9
2021-04-03T18:02:12,098|[DEBUG] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@723493f2
2021-04-03T18:02:12,098|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@723493f2
2021-04-03T18:02:12,098|[DEBUG] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@2be33ac
2021-04-03T18:02:12,098|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2be33ac
2021-04-03T18:02:12,098|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2be33ac
2021-04-03T18:02:12,098|[DEBUG] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7892d7a7
2021-04-03T18:02:12,098|[DEBUG] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@704a0f9
2021-04-03T18:02:12,098|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@704a0f9
2021-04-03T18:02:12,098|[DEBUG] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@704a0f9
2021-04-03T18:02:12,098|[DEBUG] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@15cf663c
2021-04-03T18:02:12,098|[DEBUG] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@68317dc0
2021-04-03T18:02:12,098|[DEBUG] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@2c9e3083
2021-04-03T18:02:12,098|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2c9e3083
2021-04-03T18:02:12,098|[DEBUG] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@179eb386
2021-04-03T18:02:12,098|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@179eb386
2021-04-03T18:02:12,098|[DEBUG] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@70915da3
2021-04-03T18:02:12,098|[DEBUG] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@70915da3
2021-04-03T18:02:12,098|[DEBUG] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@3e5b32ca
2021-04-03T18:02:12,099|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3e5b32ca
2021-04-03T18:02:12,099|[DEBUG] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5d6d21e2
2021-04-03T18:02:12,099|[DEBUG] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5d6d21e2
2021-04-03T18:02:12,099|[DEBUG] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@39e67fbc
2021-04-03T18:02:12,099|[DEBUG] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@33260ecd
2021-04-03T18:02:12,099|[DEBUG] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@33260ecd
2021-04-03T18:02:12,099|[DEBUG] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@33260ecd
2021-04-03T18:02:12,099|[DEBUG] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@671f70bc
2021-04-03T18:02:12,099|[DEBUG] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@671f70bc
2021-04-03T18:02:12,099|[DEBUG] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@671f70bc
2021-04-03T18:02:12,099|[DEBUG] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@3e0d722f
2021-04-03T18:02:12,099|[DEBUG] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@7fab8e9a
2021-04-03T18:02:12,099|[DEBUG] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@251d3913
2021-04-03T18:02:12,099|[DEBUG] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@251d3913
2021-04-03T18:02:12,099|[DEBUG] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@251d3913
2021-04-03T18:02:12,099|[DEBUG] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@18211894
2021-04-03T18:02:12,099|[DEBUG] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@18211894
2021-04-03T18:02:12,099|[DEBUG] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@18211894
2021-04-03T18:02:12,099|[DEBUG] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@76cb6d16
2021-04-03T18:02:12,099|[DEBUG] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@3bd6ce4e
2021-04-03T18:02:12,100|[DEBUG] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@4f2a0651
2021-04-03T18:02:12,100|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4f2a0651
2021-04-03T18:02:12,100|[DEBUG] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@79f6e671
2021-04-03T18:02:12,100|[DEBUG] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@4c49471c
2021-04-03T18:02:12,100|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4c49471c
2021-04-03T18:02:12,100|[DEBUG] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@559ac87f
2021-04-03T18:02:12,100|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@559ac87f
2021-04-03T18:02:12,100|[DEBUG] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@10683f87
2021-04-03T18:02:12,100|[DEBUG] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2c3f9229
2021-04-03T18:02:12,100|[DEBUG] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@6d68cbf3
2021-04-03T18:02:12,100|[DEBUG] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@151cbba4
2021-04-03T18:02:12,100|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@151cbba4
2021-04-03T18:02:12,100|[DEBUG] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@32e9818b
2021-04-03T18:02:12,100|[DEBUG] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@64922e2f
2021-04-03T18:02:12,100|[DEBUG] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6d77c929
2021-04-03T18:02:12,100|[DEBUG] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@45eeea37
2021-04-03T18:02:12,100|[DEBUG] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3bf5ced8
2021-04-03T18:02:12,101|[DEBUG] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4e637cdf
2021-04-03T18:02:12,101|[DEBUG] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1d8ecabb
2021-04-03T18:02:12,101|[DEBUG] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2f83346f
]]></system-out>
  </testcase>
  <testcase name="testCreateEntityNullAndEmptyValues" classname="logic.AccountLogicTest" time="0.044">
    <error type="org.hibernate.service.spi.ServiceException"><![CDATA[org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
	at logic.AccountLogicTest.setUp(AccountLogicTest.java:56)
Caused by: org.hibernate.engine.jndi.JndiException: Unable to lookup JNDI name [java:comp/env/jdbc/SimpleBloodBank]
	at logic.AccountLogicTest.setUp(AccountLogicTest.java:56)
Caused by: javax.naming.NameNotFoundException: Name [comp/env/jdbc/SimpleBloodBank] is not bound in this Context. Unable to find [comp].
	at logic.AccountLogicTest.setUp(AccountLogicTest.java:56)
]]></error>
    <system-out><![CDATA[2021-04-03T18:02:12,120|[DEBUG] EMFactory - getting EntityManagerFactory
2021-04-03T18:02:12,120|[DEBUG] EMFactory - initializeing EntityManagerFactory
2021-04-03T18:02:12,120|[DEBUG] EMFactory - creating EntityManagerFactory
2021-04-03T18:02:12,127|[INFO ] LogHelper - HHH000204: Processing PersistenceUnitInfo [name: simplebloodbank-PU-test]
2021-04-03T18:02:12,131|[DEBUG] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@630f24a5
2021-04-03T18:02:12,132|[DEBUG] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@630f24a5
2021-04-03T18:02:12,132|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@630f24a5
2021-04-03T18:02:12,132|[DEBUG] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@34ceabf1
2021-04-03T18:02:12,132|[DEBUG] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@47861e3c
2021-04-03T18:02:12,132|[DEBUG] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@3f2fd933
2021-04-03T18:02:12,132|[DEBUG] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@546f0369
2021-04-03T18:02:12,132|[DEBUG] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@546f0369
2021-04-03T18:02:12,132|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@546f0369
2021-04-03T18:02:12,132|[DEBUG] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@6e32eea5
2021-04-03T18:02:12,133|[DEBUG] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@6e32eea5
2021-04-03T18:02:12,133|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6e32eea5
2021-04-03T18:02:12,133|[DEBUG] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2d45db20
2021-04-03T18:02:12,133|[DEBUG] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2d45db20
2021-04-03T18:02:12,133|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2d45db20
2021-04-03T18:02:12,133|[DEBUG] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@52bf434b
2021-04-03T18:02:12,133|[DEBUG] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@52bf434b
2021-04-03T18:02:12,133|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@52bf434b
2021-04-03T18:02:12,133|[DEBUG] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@563b9462
2021-04-03T18:02:12,134|[DEBUG] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@563b9462
2021-04-03T18:02:12,134|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@563b9462
2021-04-03T18:02:12,134|[DEBUG] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6ad51d91
2021-04-03T18:02:12,134|[DEBUG] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6ad51d91
2021-04-03T18:02:12,134|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6ad51d91
2021-04-03T18:02:12,134|[DEBUG] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@288c16a5
2021-04-03T18:02:12,134|[DEBUG] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@288c16a5
2021-04-03T18:02:12,134|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@288c16a5
2021-04-03T18:02:12,134|[DEBUG] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7540aa55
2021-04-03T18:02:12,134|[DEBUG] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7540aa55
2021-04-03T18:02:12,134|[DEBUG] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6815e19c
2021-04-03T18:02:12,135|[DEBUG] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6815e19c
2021-04-03T18:02:12,135|[DEBUG] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@2d66a5d3
2021-04-03T18:02:12,135|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@2d66a5d3
2021-04-03T18:02:12,135|[DEBUG] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@687fa4d0
2021-04-03T18:02:12,135|[DEBUG] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5bfa2801
2021-04-03T18:02:12,135|[DEBUG] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@25428bab
2021-04-03T18:02:12,135|[DEBUG] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@25428bab
2021-04-03T18:02:12,135|[DEBUG] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@1cfb035c
2021-04-03T18:02:12,136|[DEBUG] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@1cfb035c
2021-04-03T18:02:12,136|[DEBUG] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@1c8ab147
2021-04-03T18:02:12,136|[DEBUG] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@1c8ab147
2021-04-03T18:02:12,136|[DEBUG] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@157f284b
2021-04-03T18:02:12,136|[DEBUG] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@157f284b
2021-04-03T18:02:12,136|[DEBUG] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@639f7054
2021-04-03T18:02:12,136|[DEBUG] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@639f7054
2021-04-03T18:02:12,136|[DEBUG] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@13e59265
2021-04-03T18:02:12,136|[DEBUG] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@13e59265
2021-04-03T18:02:12,136|[DEBUG] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3d7c21b7
2021-04-03T18:02:12,136|[DEBUG] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3d7c21b7
2021-04-03T18:02:12,136|[DEBUG] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@58da1b27
2021-04-03T18:02:12,137|[DEBUG] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@58da1b27
2021-04-03T18:02:12,137|[DEBUG] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@129bc797
2021-04-03T18:02:12,137|[DEBUG] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@129bc797
2021-04-03T18:02:12,137|[DEBUG] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@38b65eb9
2021-04-03T18:02:12,137|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@38b65eb9
2021-04-03T18:02:12,137|[DEBUG] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@723493f2
2021-04-03T18:02:12,137|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@723493f2
2021-04-03T18:02:12,137|[DEBUG] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@2be33ac
2021-04-03T18:02:12,137|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2be33ac
2021-04-03T18:02:12,137|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2be33ac
2021-04-03T18:02:12,137|[DEBUG] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7892d7a7
2021-04-03T18:02:12,137|[DEBUG] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@704a0f9
2021-04-03T18:02:12,137|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@704a0f9
2021-04-03T18:02:12,137|[DEBUG] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@704a0f9
2021-04-03T18:02:12,137|[DEBUG] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@15cf663c
2021-04-03T18:02:12,137|[DEBUG] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@68317dc0
2021-04-03T18:02:12,137|[DEBUG] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@2c9e3083
2021-04-03T18:02:12,137|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2c9e3083
2021-04-03T18:02:12,138|[DEBUG] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@179eb386
2021-04-03T18:02:12,138|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@179eb386
2021-04-03T18:02:12,138|[DEBUG] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@70915da3
2021-04-03T18:02:12,138|[DEBUG] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@70915da3
2021-04-03T18:02:12,138|[DEBUG] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@3e5b32ca
2021-04-03T18:02:12,138|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3e5b32ca
2021-04-03T18:02:12,138|[DEBUG] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5d6d21e2
2021-04-03T18:02:12,138|[DEBUG] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5d6d21e2
2021-04-03T18:02:12,138|[DEBUG] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@39e67fbc
2021-04-03T18:02:12,138|[DEBUG] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@33260ecd
2021-04-03T18:02:12,139|[DEBUG] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@33260ecd
2021-04-03T18:02:12,139|[DEBUG] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@33260ecd
2021-04-03T18:02:12,139|[DEBUG] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@671f70bc
2021-04-03T18:02:12,139|[DEBUG] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@671f70bc
2021-04-03T18:02:12,139|[DEBUG] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@671f70bc
2021-04-03T18:02:12,139|[DEBUG] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@3e0d722f
2021-04-03T18:02:12,139|[DEBUG] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@7fab8e9a
2021-04-03T18:02:12,139|[DEBUG] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@251d3913
2021-04-03T18:02:12,139|[DEBUG] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@251d3913
2021-04-03T18:02:12,139|[DEBUG] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@251d3913
2021-04-03T18:02:12,139|[DEBUG] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@18211894
2021-04-03T18:02:12,139|[DEBUG] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@18211894
2021-04-03T18:02:12,139|[DEBUG] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@18211894
2021-04-03T18:02:12,139|[DEBUG] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@76cb6d16
2021-04-03T18:02:12,140|[DEBUG] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@3bd6ce4e
2021-04-03T18:02:12,140|[DEBUG] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@4f2a0651
2021-04-03T18:02:12,140|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4f2a0651
2021-04-03T18:02:12,140|[DEBUG] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@79f6e671
2021-04-03T18:02:12,140|[DEBUG] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@4c49471c
2021-04-03T18:02:12,140|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4c49471c
2021-04-03T18:02:12,140|[DEBUG] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@559ac87f
2021-04-03T18:02:12,140|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@559ac87f
2021-04-03T18:02:12,140|[DEBUG] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@10683f87
2021-04-03T18:02:12,140|[DEBUG] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2c3f9229
2021-04-03T18:02:12,140|[DEBUG] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@6d68cbf3
2021-04-03T18:02:12,140|[DEBUG] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@151cbba4
2021-04-03T18:02:12,141|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@151cbba4
2021-04-03T18:02:12,141|[DEBUG] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@927e34d
2021-04-03T18:02:12,141|[DEBUG] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@643ba7ba
2021-04-03T18:02:12,141|[DEBUG] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4a6f9ca5
2021-04-03T18:02:12,141|[DEBUG] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@9c44b
2021-04-03T18:02:12,141|[DEBUG] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3602728c
2021-04-03T18:02:12,141|[DEBUG] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@fbd0581
2021-04-03T18:02:12,141|[DEBUG] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@39012a67
2021-04-03T18:02:12,141|[DEBUG] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@77648a90
]]></system-out>
  </testcase>
  <testcase name="testExtractDataAsList" classname="logic.AccountLogicTest" time="0.042">
    <error type="org.hibernate.service.spi.ServiceException"><![CDATA[org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
	at logic.AccountLogicTest.setUp(AccountLogicTest.java:56)
Caused by: org.hibernate.engine.jndi.JndiException: Unable to lookup JNDI name [java:comp/env/jdbc/SimpleBloodBank]
	at logic.AccountLogicTest.setUp(AccountLogicTest.java:56)
Caused by: javax.naming.NameNotFoundException: Name [comp/env/jdbc/SimpleBloodBank] is not bound in this Context. Unable to find [comp].
	at logic.AccountLogicTest.setUp(AccountLogicTest.java:56)
]]></error>
    <system-out><![CDATA[2021-04-03T18:02:12,165|[DEBUG] EMFactory - getting EntityManagerFactory
2021-04-03T18:02:12,165|[DEBUG] EMFactory - initializeing EntityManagerFactory
2021-04-03T18:02:12,165|[DEBUG] EMFactory - creating EntityManagerFactory
2021-04-03T18:02:12,170|[INFO ] LogHelper - HHH000204: Processing PersistenceUnitInfo [name: simplebloodbank-PU-test]
2021-04-03T18:02:12,174|[DEBUG] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@630f24a5
2021-04-03T18:02:12,174|[DEBUG] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@630f24a5
2021-04-03T18:02:12,176|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@630f24a5
2021-04-03T18:02:12,176|[DEBUG] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@34ceabf1
2021-04-03T18:02:12,176|[DEBUG] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@47861e3c
2021-04-03T18:02:12,176|[DEBUG] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@3f2fd933
2021-04-03T18:02:12,176|[DEBUG] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@546f0369
2021-04-03T18:02:12,176|[DEBUG] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@546f0369
2021-04-03T18:02:12,176|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@546f0369
2021-04-03T18:02:12,177|[DEBUG] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@6e32eea5
2021-04-03T18:02:12,177|[DEBUG] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@6e32eea5
2021-04-03T18:02:12,177|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6e32eea5
2021-04-03T18:02:12,177|[DEBUG] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2d45db20
2021-04-03T18:02:12,177|[DEBUG] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2d45db20
2021-04-03T18:02:12,177|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2d45db20
2021-04-03T18:02:12,177|[DEBUG] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@52bf434b
2021-04-03T18:02:12,177|[DEBUG] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@52bf434b
2021-04-03T18:02:12,177|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@52bf434b
2021-04-03T18:02:12,177|[DEBUG] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@563b9462
2021-04-03T18:02:12,177|[DEBUG] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@563b9462
2021-04-03T18:02:12,177|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@563b9462
2021-04-03T18:02:12,177|[DEBUG] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6ad51d91
2021-04-03T18:02:12,177|[DEBUG] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6ad51d91
2021-04-03T18:02:12,178|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6ad51d91
2021-04-03T18:02:12,178|[DEBUG] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@288c16a5
2021-04-03T18:02:12,178|[DEBUG] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@288c16a5
2021-04-03T18:02:12,178|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@288c16a5
2021-04-03T18:02:12,178|[DEBUG] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7540aa55
2021-04-03T18:02:12,178|[DEBUG] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7540aa55
2021-04-03T18:02:12,178|[DEBUG] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6815e19c
2021-04-03T18:02:12,178|[DEBUG] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6815e19c
2021-04-03T18:02:12,178|[DEBUG] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@2d66a5d3
2021-04-03T18:02:12,178|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@2d66a5d3
2021-04-03T18:02:12,178|[DEBUG] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@687fa4d0
2021-04-03T18:02:12,178|[DEBUG] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5bfa2801
2021-04-03T18:02:12,178|[DEBUG] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@25428bab
2021-04-03T18:02:12,178|[DEBUG] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@25428bab
2021-04-03T18:02:12,178|[DEBUG] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@1cfb035c
2021-04-03T18:02:12,178|[DEBUG] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@1cfb035c
2021-04-03T18:02:12,179|[DEBUG] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@1c8ab147
2021-04-03T18:02:12,179|[DEBUG] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@1c8ab147
2021-04-03T18:02:12,179|[DEBUG] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@157f284b
2021-04-03T18:02:12,179|[DEBUG] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@157f284b
2021-04-03T18:02:12,179|[DEBUG] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@639f7054
2021-04-03T18:02:12,179|[DEBUG] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@639f7054
2021-04-03T18:02:12,179|[DEBUG] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@13e59265
2021-04-03T18:02:12,179|[DEBUG] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@13e59265
2021-04-03T18:02:12,179|[DEBUG] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3d7c21b7
2021-04-03T18:02:12,179|[DEBUG] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3d7c21b7
2021-04-03T18:02:12,179|[DEBUG] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@58da1b27
2021-04-03T18:02:12,179|[DEBUG] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@58da1b27
2021-04-03T18:02:12,180|[DEBUG] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@129bc797
2021-04-03T18:02:12,180|[DEBUG] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@129bc797
2021-04-03T18:02:12,180|[DEBUG] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@38b65eb9
2021-04-03T18:02:12,180|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@38b65eb9
2021-04-03T18:02:12,180|[DEBUG] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@723493f2
2021-04-03T18:02:12,180|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@723493f2
2021-04-03T18:02:12,180|[DEBUG] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@2be33ac
2021-04-03T18:02:12,180|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2be33ac
2021-04-03T18:02:12,180|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2be33ac
2021-04-03T18:02:12,180|[DEBUG] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7892d7a7
2021-04-03T18:02:12,180|[DEBUG] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@704a0f9
2021-04-03T18:02:12,180|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@704a0f9
2021-04-03T18:02:12,180|[DEBUG] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@704a0f9
2021-04-03T18:02:12,180|[DEBUG] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@15cf663c
2021-04-03T18:02:12,180|[DEBUG] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@68317dc0
2021-04-03T18:02:12,181|[DEBUG] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@2c9e3083
2021-04-03T18:02:12,181|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2c9e3083
2021-04-03T18:02:12,181|[DEBUG] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@179eb386
2021-04-03T18:02:12,181|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@179eb386
2021-04-03T18:02:12,181|[DEBUG] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@70915da3
2021-04-03T18:02:12,181|[DEBUG] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@70915da3
2021-04-03T18:02:12,181|[DEBUG] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@3e5b32ca
2021-04-03T18:02:12,181|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3e5b32ca
2021-04-03T18:02:12,181|[DEBUG] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5d6d21e2
2021-04-03T18:02:12,181|[DEBUG] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5d6d21e2
2021-04-03T18:02:12,181|[DEBUG] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@39e67fbc
2021-04-03T18:02:12,181|[DEBUG] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@33260ecd
2021-04-03T18:02:12,181|[DEBUG] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@33260ecd
2021-04-03T18:02:12,181|[DEBUG] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@33260ecd
2021-04-03T18:02:12,181|[DEBUG] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@671f70bc
2021-04-03T18:02:12,181|[DEBUG] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@671f70bc
2021-04-03T18:02:12,181|[DEBUG] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@671f70bc
2021-04-03T18:02:12,182|[DEBUG] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@3e0d722f
2021-04-03T18:02:12,182|[DEBUG] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@7fab8e9a
2021-04-03T18:02:12,182|[DEBUG] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@251d3913
2021-04-03T18:02:12,182|[DEBUG] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@251d3913
2021-04-03T18:02:12,182|[DEBUG] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@251d3913
2021-04-03T18:02:12,182|[DEBUG] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@18211894
2021-04-03T18:02:12,182|[DEBUG] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@18211894
2021-04-03T18:02:12,182|[DEBUG] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@18211894
2021-04-03T18:02:12,182|[DEBUG] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@76cb6d16
2021-04-03T18:02:12,182|[DEBUG] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@3bd6ce4e
2021-04-03T18:02:12,182|[DEBUG] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@4f2a0651
2021-04-03T18:02:12,182|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4f2a0651
2021-04-03T18:02:12,182|[DEBUG] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@79f6e671
2021-04-03T18:02:12,182|[DEBUG] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@4c49471c
2021-04-03T18:02:12,182|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4c49471c
2021-04-03T18:02:12,182|[DEBUG] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@559ac87f
2021-04-03T18:02:12,183|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@559ac87f
2021-04-03T18:02:12,183|[DEBUG] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@10683f87
2021-04-03T18:02:12,183|[DEBUG] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2c3f9229
2021-04-03T18:02:12,183|[DEBUG] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@6d68cbf3
2021-04-03T18:02:12,183|[DEBUG] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@151cbba4
2021-04-03T18:02:12,183|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@151cbba4
2021-04-03T18:02:12,183|[DEBUG] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@23d3c1d1
2021-04-03T18:02:12,183|[DEBUG] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4f0ee1eb
2021-04-03T18:02:12,183|[DEBUG] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5e3d2cfc
2021-04-03T18:02:12,183|[DEBUG] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1c0c5835
2021-04-03T18:02:12,183|[DEBUG] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@216ccf2c
2021-04-03T18:02:12,183|[DEBUG] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@19556353
2021-04-03T18:02:12,184|[DEBUG] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2eb8e649
2021-04-03T18:02:12,184|[DEBUG] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@500bde5b
]]></system-out>
  </testcase>
  <testcase name="testGetAccountWIthUser" classname="logic.AccountLogicTest" time="0.04">
    <error type="org.hibernate.service.spi.ServiceException"><![CDATA[org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
	at logic.AccountLogicTest.setUp(AccountLogicTest.java:56)
Caused by: org.hibernate.engine.jndi.JndiException: Unable to lookup JNDI name [java:comp/env/jdbc/SimpleBloodBank]
	at logic.AccountLogicTest.setUp(AccountLogicTest.java:56)
Caused by: javax.naming.NameNotFoundException: Name [comp/env/jdbc/SimpleBloodBank] is not bound in this Context. Unable to find [comp].
	at logic.AccountLogicTest.setUp(AccountLogicTest.java:56)
]]></error>
    <system-out><![CDATA[2021-04-03T18:02:12,209|[DEBUG] EMFactory - getting EntityManagerFactory
2021-04-03T18:02:12,209|[DEBUG] EMFactory - initializeing EntityManagerFactory
2021-04-03T18:02:12,209|[DEBUG] EMFactory - creating EntityManagerFactory
2021-04-03T18:02:12,216|[INFO ] LogHelper - HHH000204: Processing PersistenceUnitInfo [name: simplebloodbank-PU-test]
2021-04-03T18:02:12,221|[DEBUG] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@630f24a5
2021-04-03T18:02:12,221|[DEBUG] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@630f24a5
2021-04-03T18:02:12,221|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@630f24a5
2021-04-03T18:02:12,221|[DEBUG] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@34ceabf1
2021-04-03T18:02:12,221|[DEBUG] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@47861e3c
2021-04-03T18:02:12,221|[DEBUG] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@3f2fd933
2021-04-03T18:02:12,221|[DEBUG] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@546f0369
2021-04-03T18:02:12,221|[DEBUG] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@546f0369
2021-04-03T18:02:12,222|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@546f0369
2021-04-03T18:02:12,222|[DEBUG] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@6e32eea5
2021-04-03T18:02:12,222|[DEBUG] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@6e32eea5
2021-04-03T18:02:12,222|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6e32eea5
2021-04-03T18:02:12,222|[DEBUG] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2d45db20
2021-04-03T18:02:12,222|[DEBUG] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2d45db20
2021-04-03T18:02:12,222|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2d45db20
2021-04-03T18:02:12,222|[DEBUG] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@52bf434b
2021-04-03T18:02:12,222|[DEBUG] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@52bf434b
2021-04-03T18:02:12,222|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@52bf434b
2021-04-03T18:02:12,222|[DEBUG] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@563b9462
2021-04-03T18:02:12,222|[DEBUG] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@563b9462
2021-04-03T18:02:12,222|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@563b9462
2021-04-03T18:02:12,222|[DEBUG] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6ad51d91
2021-04-03T18:02:12,223|[DEBUG] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6ad51d91
2021-04-03T18:02:12,223|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6ad51d91
2021-04-03T18:02:12,223|[DEBUG] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@288c16a5
2021-04-03T18:02:12,223|[DEBUG] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@288c16a5
2021-04-03T18:02:12,223|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@288c16a5
2021-04-03T18:02:12,223|[DEBUG] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7540aa55
2021-04-03T18:02:12,223|[DEBUG] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7540aa55
2021-04-03T18:02:12,223|[DEBUG] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6815e19c
2021-04-03T18:02:12,223|[DEBUG] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6815e19c
2021-04-03T18:02:12,223|[DEBUG] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@2d66a5d3
2021-04-03T18:02:12,223|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@2d66a5d3
2021-04-03T18:02:12,224|[DEBUG] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@687fa4d0
2021-04-03T18:02:12,224|[DEBUG] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5bfa2801
2021-04-03T18:02:12,224|[DEBUG] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@25428bab
2021-04-03T18:02:12,224|[DEBUG] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@25428bab
2021-04-03T18:02:12,224|[DEBUG] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@1cfb035c
2021-04-03T18:02:12,224|[DEBUG] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@1cfb035c
2021-04-03T18:02:12,224|[DEBUG] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@1c8ab147
2021-04-03T18:02:12,224|[DEBUG] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@1c8ab147
2021-04-03T18:02:12,224|[DEBUG] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@157f284b
2021-04-03T18:02:12,224|[DEBUG] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@157f284b
2021-04-03T18:02:12,224|[DEBUG] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@639f7054
2021-04-03T18:02:12,225|[DEBUG] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@639f7054
2021-04-03T18:02:12,225|[DEBUG] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@13e59265
2021-04-03T18:02:12,225|[DEBUG] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@13e59265
2021-04-03T18:02:12,225|[DEBUG] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3d7c21b7
2021-04-03T18:02:12,225|[DEBUG] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3d7c21b7
2021-04-03T18:02:12,225|[DEBUG] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@58da1b27
2021-04-03T18:02:12,225|[DEBUG] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@58da1b27
2021-04-03T18:02:12,225|[DEBUG] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@129bc797
2021-04-03T18:02:12,225|[DEBUG] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@129bc797
2021-04-03T18:02:12,225|[DEBUG] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@38b65eb9
2021-04-03T18:02:12,225|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@38b65eb9
2021-04-03T18:02:12,225|[DEBUG] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@723493f2
2021-04-03T18:02:12,225|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@723493f2
2021-04-03T18:02:12,225|[DEBUG] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@2be33ac
2021-04-03T18:02:12,225|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2be33ac
2021-04-03T18:02:12,225|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2be33ac
2021-04-03T18:02:12,226|[DEBUG] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7892d7a7
2021-04-03T18:02:12,226|[DEBUG] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@704a0f9
2021-04-03T18:02:12,226|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@704a0f9
2021-04-03T18:02:12,226|[DEBUG] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@704a0f9
2021-04-03T18:02:12,226|[DEBUG] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@15cf663c
2021-04-03T18:02:12,226|[DEBUG] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@68317dc0
2021-04-03T18:02:12,226|[DEBUG] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@2c9e3083
2021-04-03T18:02:12,226|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2c9e3083
2021-04-03T18:02:12,226|[DEBUG] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@179eb386
2021-04-03T18:02:12,226|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@179eb386
2021-04-03T18:02:12,226|[DEBUG] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@70915da3
2021-04-03T18:02:12,226|[DEBUG] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@70915da3
2021-04-03T18:02:12,226|[DEBUG] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@3e5b32ca
2021-04-03T18:02:12,226|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3e5b32ca
2021-04-03T18:02:12,227|[DEBUG] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5d6d21e2
2021-04-03T18:02:12,227|[DEBUG] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5d6d21e2
2021-04-03T18:02:12,227|[DEBUG] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@39e67fbc
2021-04-03T18:02:12,227|[DEBUG] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@33260ecd
2021-04-03T18:02:12,227|[DEBUG] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@33260ecd
2021-04-03T18:02:12,227|[DEBUG] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@33260ecd
2021-04-03T18:02:12,227|[DEBUG] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@671f70bc
2021-04-03T18:02:12,227|[DEBUG] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@671f70bc
2021-04-03T18:02:12,227|[DEBUG] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@671f70bc
2021-04-03T18:02:12,227|[DEBUG] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@3e0d722f
2021-04-03T18:02:12,227|[DEBUG] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@7fab8e9a
2021-04-03T18:02:12,227|[DEBUG] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@251d3913
2021-04-03T18:02:12,227|[DEBUG] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@251d3913
2021-04-03T18:02:12,227|[DEBUG] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@251d3913
2021-04-03T18:02:12,228|[DEBUG] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@18211894
2021-04-03T18:02:12,228|[DEBUG] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@18211894
2021-04-03T18:02:12,228|[DEBUG] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@18211894
2021-04-03T18:02:12,228|[DEBUG] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@76cb6d16
2021-04-03T18:02:12,228|[DEBUG] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@3bd6ce4e
2021-04-03T18:02:12,228|[DEBUG] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@4f2a0651
2021-04-03T18:02:12,228|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4f2a0651
2021-04-03T18:02:12,228|[DEBUG] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@79f6e671
2021-04-03T18:02:12,228|[DEBUG] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@4c49471c
2021-04-03T18:02:12,228|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4c49471c
2021-04-03T18:02:12,228|[DEBUG] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@559ac87f
2021-04-03T18:02:12,228|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@559ac87f
2021-04-03T18:02:12,228|[DEBUG] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@10683f87
2021-04-03T18:02:12,228|[DEBUG] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2c3f9229
2021-04-03T18:02:12,228|[DEBUG] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@6d68cbf3
2021-04-03T18:02:12,228|[DEBUG] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@151cbba4
2021-04-03T18:02:12,228|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@151cbba4
2021-04-03T18:02:12,228|[DEBUG] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6477d129
2021-04-03T18:02:12,228|[DEBUG] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@ab3cd69
2021-04-03T18:02:12,228|[DEBUG] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@459dad43
2021-04-03T18:02:12,228|[DEBUG] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5b9d3d48
2021-04-03T18:02:12,229|[DEBUG] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1b9418b
2021-04-03T18:02:12,229|[DEBUG] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@15f51c50
2021-04-03T18:02:12,229|[DEBUG] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3d2a4c18
2021-04-03T18:02:12,229|[DEBUG] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@f6f5188
]]></system-out>
  </testcase>
  <testcase name="testGetAccountsWithPassword" classname="logic.AccountLogicTest" time="0.036">
    <error type="org.hibernate.service.spi.ServiceException"><![CDATA[org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
	at logic.AccountLogicTest.setUp(AccountLogicTest.java:56)
Caused by: org.hibernate.engine.jndi.JndiException: Unable to lookup JNDI name [java:comp/env/jdbc/SimpleBloodBank]
	at logic.AccountLogicTest.setUp(AccountLogicTest.java:56)
Caused by: javax.naming.NameNotFoundException: Name [comp/env/jdbc/SimpleBloodBank] is not bound in this Context. Unable to find [comp].
	at logic.AccountLogicTest.setUp(AccountLogicTest.java:56)
]]></error>
    <system-out><![CDATA[2021-04-03T18:02:12,250|[DEBUG] EMFactory - getting EntityManagerFactory
2021-04-03T18:02:12,250|[DEBUG] EMFactory - initializeing EntityManagerFactory
2021-04-03T18:02:12,250|[DEBUG] EMFactory - creating EntityManagerFactory
2021-04-03T18:02:12,256|[INFO ] LogHelper - HHH000204: Processing PersistenceUnitInfo [name: simplebloodbank-PU-test]
2021-04-03T18:02:12,259|[DEBUG] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@630f24a5
2021-04-03T18:02:12,260|[DEBUG] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@630f24a5
2021-04-03T18:02:12,260|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@630f24a5
2021-04-03T18:02:12,260|[DEBUG] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@34ceabf1
2021-04-03T18:02:12,260|[DEBUG] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@47861e3c
2021-04-03T18:02:12,260|[DEBUG] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@3f2fd933
2021-04-03T18:02:12,260|[DEBUG] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@546f0369
2021-04-03T18:02:12,260|[DEBUG] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@546f0369
2021-04-03T18:02:12,260|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@546f0369
2021-04-03T18:02:12,260|[DEBUG] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@6e32eea5
2021-04-03T18:02:12,260|[DEBUG] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@6e32eea5
2021-04-03T18:02:12,260|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6e32eea5
2021-04-03T18:02:12,260|[DEBUG] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2d45db20
2021-04-03T18:02:12,260|[DEBUG] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2d45db20
2021-04-03T18:02:12,260|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2d45db20
2021-04-03T18:02:12,260|[DEBUG] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@52bf434b
2021-04-03T18:02:12,260|[DEBUG] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@52bf434b
2021-04-03T18:02:12,260|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@52bf434b
2021-04-03T18:02:12,260|[DEBUG] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@563b9462
2021-04-03T18:02:12,260|[DEBUG] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@563b9462
2021-04-03T18:02:12,261|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@563b9462
2021-04-03T18:02:12,261|[DEBUG] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6ad51d91
2021-04-03T18:02:12,261|[DEBUG] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6ad51d91
2021-04-03T18:02:12,261|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6ad51d91
2021-04-03T18:02:12,261|[DEBUG] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@288c16a5
2021-04-03T18:02:12,261|[DEBUG] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@288c16a5
2021-04-03T18:02:12,261|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@288c16a5
2021-04-03T18:02:12,261|[DEBUG] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7540aa55
2021-04-03T18:02:12,261|[DEBUG] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7540aa55
2021-04-03T18:02:12,261|[DEBUG] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6815e19c
2021-04-03T18:02:12,261|[DEBUG] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6815e19c
2021-04-03T18:02:12,261|[DEBUG] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@2d66a5d3
2021-04-03T18:02:12,261|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@2d66a5d3
2021-04-03T18:02:12,261|[DEBUG] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@687fa4d0
2021-04-03T18:02:12,261|[DEBUG] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5bfa2801
2021-04-03T18:02:12,261|[DEBUG] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@25428bab
2021-04-03T18:02:12,261|[DEBUG] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@25428bab
2021-04-03T18:02:12,261|[DEBUG] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@1cfb035c
2021-04-03T18:02:12,261|[DEBUG] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@1cfb035c
2021-04-03T18:02:12,261|[DEBUG] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@1c8ab147
2021-04-03T18:02:12,261|[DEBUG] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@1c8ab147
2021-04-03T18:02:12,261|[DEBUG] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@157f284b
2021-04-03T18:02:12,261|[DEBUG] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@157f284b
2021-04-03T18:02:12,261|[DEBUG] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@639f7054
2021-04-03T18:02:12,261|[DEBUG] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@639f7054
2021-04-03T18:02:12,262|[DEBUG] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@13e59265
2021-04-03T18:02:12,262|[DEBUG] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@13e59265
2021-04-03T18:02:12,262|[DEBUG] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3d7c21b7
2021-04-03T18:02:12,262|[DEBUG] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3d7c21b7
2021-04-03T18:02:12,262|[DEBUG] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@58da1b27
2021-04-03T18:02:12,262|[DEBUG] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@58da1b27
2021-04-03T18:02:12,262|[DEBUG] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@129bc797
2021-04-03T18:02:12,262|[DEBUG] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@129bc797
2021-04-03T18:02:12,262|[DEBUG] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@38b65eb9
2021-04-03T18:02:12,262|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@38b65eb9
2021-04-03T18:02:12,262|[DEBUG] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@723493f2
2021-04-03T18:02:12,262|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@723493f2
2021-04-03T18:02:12,262|[DEBUG] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@2be33ac
2021-04-03T18:02:12,262|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2be33ac
2021-04-03T18:02:12,262|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2be33ac
2021-04-03T18:02:12,262|[DEBUG] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7892d7a7
2021-04-03T18:02:12,262|[DEBUG] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@704a0f9
2021-04-03T18:02:12,262|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@704a0f9
2021-04-03T18:02:12,262|[DEBUG] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@704a0f9
2021-04-03T18:02:12,262|[DEBUG] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@15cf663c
2021-04-03T18:02:12,262|[DEBUG] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@68317dc0
2021-04-03T18:02:12,262|[DEBUG] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@2c9e3083
2021-04-03T18:02:12,262|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2c9e3083
2021-04-03T18:02:12,263|[DEBUG] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@179eb386
2021-04-03T18:02:12,263|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@179eb386
2021-04-03T18:02:12,263|[DEBUG] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@70915da3
2021-04-03T18:02:12,263|[DEBUG] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@70915da3
2021-04-03T18:02:12,263|[DEBUG] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@3e5b32ca
2021-04-03T18:02:12,263|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3e5b32ca
2021-04-03T18:02:12,263|[DEBUG] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5d6d21e2
2021-04-03T18:02:12,263|[DEBUG] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5d6d21e2
2021-04-03T18:02:12,263|[DEBUG] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@39e67fbc
2021-04-03T18:02:12,263|[DEBUG] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@33260ecd
2021-04-03T18:02:12,263|[DEBUG] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@33260ecd
2021-04-03T18:02:12,263|[DEBUG] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@33260ecd
2021-04-03T18:02:12,263|[DEBUG] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@671f70bc
2021-04-03T18:02:12,263|[DEBUG] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@671f70bc
2021-04-03T18:02:12,263|[DEBUG] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@671f70bc
2021-04-03T18:02:12,263|[DEBUG] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@3e0d722f
2021-04-03T18:02:12,263|[DEBUG] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@7fab8e9a
2021-04-03T18:02:12,263|[DEBUG] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@251d3913
2021-04-03T18:02:12,263|[DEBUG] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@251d3913
2021-04-03T18:02:12,263|[DEBUG] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@251d3913
2021-04-03T18:02:12,263|[DEBUG] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@18211894
2021-04-03T18:02:12,263|[DEBUG] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@18211894
2021-04-03T18:02:12,263|[DEBUG] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@18211894
2021-04-03T18:02:12,263|[DEBUG] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@76cb6d16
2021-04-03T18:02:12,263|[DEBUG] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@3bd6ce4e
2021-04-03T18:02:12,263|[DEBUG] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@4f2a0651
2021-04-03T18:02:12,264|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4f2a0651
2021-04-03T18:02:12,264|[DEBUG] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@79f6e671
2021-04-03T18:02:12,264|[DEBUG] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@4c49471c
2021-04-03T18:02:12,264|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4c49471c
2021-04-03T18:02:12,264|[DEBUG] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@559ac87f
2021-04-03T18:02:12,264|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@559ac87f
2021-04-03T18:02:12,264|[DEBUG] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@10683f87
2021-04-03T18:02:12,264|[DEBUG] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2c3f9229
2021-04-03T18:02:12,264|[DEBUG] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@6d68cbf3
2021-04-03T18:02:12,264|[DEBUG] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@151cbba4
2021-04-03T18:02:12,264|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@151cbba4
2021-04-03T18:02:12,264|[DEBUG] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@77f3ac1e
2021-04-03T18:02:12,264|[DEBUG] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@68852b5
2021-04-03T18:02:12,264|[DEBUG] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@46bd2d4b
2021-04-03T18:02:12,264|[DEBUG] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6e1b56ad
2021-04-03T18:02:12,264|[DEBUG] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4e2842c
2021-04-03T18:02:12,264|[DEBUG] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@40bb73ff
2021-04-03T18:02:12,264|[DEBUG] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6fc3c9d6
2021-04-03T18:02:12,264|[DEBUG] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5b5954bd
]]></system-out>
  </testcase>
  <testcase name="testCreateEntityAndAdd" classname="logic.AccountLogicTest" time="0.026">
    <error type="org.hibernate.service.spi.ServiceException"><![CDATA[org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
	at logic.AccountLogicTest.setUp(AccountLogicTest.java:56)
Caused by: org.hibernate.engine.jndi.JndiException: Unable to lookup JNDI name [java:comp/env/jdbc/SimpleBloodBank]
	at logic.AccountLogicTest.setUp(AccountLogicTest.java:56)
Caused by: javax.naming.NameNotFoundException: Name [comp/env/jdbc/SimpleBloodBank] is not bound in this Context. Unable to find [comp].
	at logic.AccountLogicTest.setUp(AccountLogicTest.java:56)
]]></error>
    <system-out><![CDATA[2021-04-03T18:02:12,287|[DEBUG] EMFactory - getting EntityManagerFactory
2021-04-03T18:02:12,287|[DEBUG] EMFactory - initializeing EntityManagerFactory
2021-04-03T18:02:12,288|[DEBUG] EMFactory - creating EntityManagerFactory
2021-04-03T18:02:12,292|[INFO ] LogHelper - HHH000204: Processing PersistenceUnitInfo [name: simplebloodbank-PU-test]
2021-04-03T18:02:12,294|[DEBUG] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@630f24a5
2021-04-03T18:02:12,294|[DEBUG] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@630f24a5
2021-04-03T18:02:12,294|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@630f24a5
2021-04-03T18:02:12,294|[DEBUG] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@34ceabf1
2021-04-03T18:02:12,294|[DEBUG] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@47861e3c
2021-04-03T18:02:12,294|[DEBUG] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@3f2fd933
2021-04-03T18:02:12,294|[DEBUG] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@546f0369
2021-04-03T18:02:12,294|[DEBUG] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@546f0369
2021-04-03T18:02:12,294|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@546f0369
2021-04-03T18:02:12,294|[DEBUG] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@6e32eea5
2021-04-03T18:02:12,294|[DEBUG] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@6e32eea5
2021-04-03T18:02:12,294|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6e32eea5
2021-04-03T18:02:12,295|[DEBUG] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2d45db20
2021-04-03T18:02:12,295|[DEBUG] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2d45db20
2021-04-03T18:02:12,295|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2d45db20
2021-04-03T18:02:12,295|[DEBUG] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@52bf434b
2021-04-03T18:02:12,295|[DEBUG] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@52bf434b
2021-04-03T18:02:12,295|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@52bf434b
2021-04-03T18:02:12,295|[DEBUG] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@563b9462
2021-04-03T18:02:12,295|[DEBUG] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@563b9462
2021-04-03T18:02:12,295|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@563b9462
2021-04-03T18:02:12,295|[DEBUG] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6ad51d91
2021-04-03T18:02:12,295|[DEBUG] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6ad51d91
2021-04-03T18:02:12,295|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6ad51d91
2021-04-03T18:02:12,295|[DEBUG] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@288c16a5
2021-04-03T18:02:12,295|[DEBUG] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@288c16a5
2021-04-03T18:02:12,295|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@288c16a5
2021-04-03T18:02:12,295|[DEBUG] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7540aa55
2021-04-03T18:02:12,295|[DEBUG] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7540aa55
2021-04-03T18:02:12,295|[DEBUG] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6815e19c
2021-04-03T18:02:12,295|[DEBUG] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6815e19c
2021-04-03T18:02:12,295|[DEBUG] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@2d66a5d3
2021-04-03T18:02:12,295|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@2d66a5d3
2021-04-03T18:02:12,295|[DEBUG] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@687fa4d0
2021-04-03T18:02:12,295|[DEBUG] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5bfa2801
2021-04-03T18:02:12,295|[DEBUG] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@25428bab
2021-04-03T18:02:12,295|[DEBUG] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@25428bab
2021-04-03T18:02:12,295|[DEBUG] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@1cfb035c
2021-04-03T18:02:12,295|[DEBUG] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@1cfb035c
2021-04-03T18:02:12,295|[DEBUG] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@1c8ab147
2021-04-03T18:02:12,295|[DEBUG] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@1c8ab147
2021-04-03T18:02:12,295|[DEBUG] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@157f284b
2021-04-03T18:02:12,295|[DEBUG] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@157f284b
2021-04-03T18:02:12,295|[DEBUG] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@639f7054
2021-04-03T18:02:12,295|[DEBUG] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@639f7054
2021-04-03T18:02:12,295|[DEBUG] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@13e59265
2021-04-03T18:02:12,295|[DEBUG] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@13e59265
2021-04-03T18:02:12,295|[DEBUG] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3d7c21b7
2021-04-03T18:02:12,295|[DEBUG] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3d7c21b7
2021-04-03T18:02:12,295|[DEBUG] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@58da1b27
2021-04-03T18:02:12,295|[DEBUG] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@58da1b27
2021-04-03T18:02:12,295|[DEBUG] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@129bc797
2021-04-03T18:02:12,295|[DEBUG] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@129bc797
2021-04-03T18:02:12,295|[DEBUG] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@38b65eb9
2021-04-03T18:02:12,295|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@38b65eb9
2021-04-03T18:02:12,296|[DEBUG] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@723493f2
2021-04-03T18:02:12,296|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@723493f2
2021-04-03T18:02:12,296|[DEBUG] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@2be33ac
2021-04-03T18:02:12,296|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2be33ac
2021-04-03T18:02:12,296|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2be33ac
2021-04-03T18:02:12,296|[DEBUG] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7892d7a7
2021-04-03T18:02:12,296|[DEBUG] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@704a0f9
2021-04-03T18:02:12,296|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@704a0f9
2021-04-03T18:02:12,296|[DEBUG] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@704a0f9
2021-04-03T18:02:12,296|[DEBUG] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@15cf663c
2021-04-03T18:02:12,296|[DEBUG] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@68317dc0
2021-04-03T18:02:12,296|[DEBUG] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@2c9e3083
2021-04-03T18:02:12,296|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2c9e3083
2021-04-03T18:02:12,296|[DEBUG] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@179eb386
2021-04-03T18:02:12,296|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@179eb386
2021-04-03T18:02:12,296|[DEBUG] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@70915da3
2021-04-03T18:02:12,296|[DEBUG] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@70915da3
2021-04-03T18:02:12,296|[DEBUG] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@3e5b32ca
2021-04-03T18:02:12,296|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3e5b32ca
2021-04-03T18:02:12,296|[DEBUG] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5d6d21e2
2021-04-03T18:02:12,296|[DEBUG] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5d6d21e2
2021-04-03T18:02:12,296|[DEBUG] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@39e67fbc
2021-04-03T18:02:12,296|[DEBUG] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@33260ecd
2021-04-03T18:02:12,296|[DEBUG] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@33260ecd
2021-04-03T18:02:12,296|[DEBUG] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@33260ecd
2021-04-03T18:02:12,296|[DEBUG] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@671f70bc
2021-04-03T18:02:12,296|[DEBUG] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@671f70bc
2021-04-03T18:02:12,296|[DEBUG] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@671f70bc
2021-04-03T18:02:12,296|[DEBUG] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@3e0d722f
2021-04-03T18:02:12,296|[DEBUG] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@7fab8e9a
2021-04-03T18:02:12,296|[DEBUG] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@251d3913
2021-04-03T18:02:12,297|[DEBUG] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@251d3913
2021-04-03T18:02:12,297|[DEBUG] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@251d3913
2021-04-03T18:02:12,297|[DEBUG] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@18211894
2021-04-03T18:02:12,297|[DEBUG] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@18211894
2021-04-03T18:02:12,297|[DEBUG] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@18211894
2021-04-03T18:02:12,297|[DEBUG] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@76cb6d16
2021-04-03T18:02:12,297|[DEBUG] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@3bd6ce4e
2021-04-03T18:02:12,297|[DEBUG] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@4f2a0651
2021-04-03T18:02:12,297|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4f2a0651
2021-04-03T18:02:12,297|[DEBUG] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@79f6e671
2021-04-03T18:02:12,297|[DEBUG] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@4c49471c
2021-04-03T18:02:12,297|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4c49471c
2021-04-03T18:02:12,297|[DEBUG] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@559ac87f
2021-04-03T18:02:12,297|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@559ac87f
2021-04-03T18:02:12,297|[DEBUG] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@10683f87
2021-04-03T18:02:12,297|[DEBUG] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2c3f9229
2021-04-03T18:02:12,297|[DEBUG] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@6d68cbf3
2021-04-03T18:02:12,297|[DEBUG] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@151cbba4
2021-04-03T18:02:12,297|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@151cbba4
2021-04-03T18:02:12,297|[DEBUG] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3caed20a
2021-04-03T18:02:12,297|[DEBUG] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6c40a104
2021-04-03T18:02:12,297|[DEBUG] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3c9b9e92
2021-04-03T18:02:12,297|[DEBUG] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@62e2fc61
2021-04-03T18:02:12,297|[DEBUG] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@28964cb5
2021-04-03T18:02:12,297|[DEBUG] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@41b78022
2021-04-03T18:02:12,297|[DEBUG] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@21b8e988
2021-04-03T18:02:12,297|[DEBUG] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@54cc182a
]]></system-out>
  </testcase>
  <testcase name="testAccountValidation" classname="logic.AccountLogicTest" time="0.034">
    <error type="org.hibernate.service.spi.ServiceException"><![CDATA[org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
	at logic.AccountLogicTest.setUp(AccountLogicTest.java:56)
Caused by: org.hibernate.engine.jndi.JndiException: Unable to lookup JNDI name [java:comp/env/jdbc/SimpleBloodBank]
	at logic.AccountLogicTest.setUp(AccountLogicTest.java:56)
Caused by: javax.naming.NameNotFoundException: Name [comp/env/jdbc/SimpleBloodBank] is not bound in this Context. Unable to find [comp].
	at logic.AccountLogicTest.setUp(AccountLogicTest.java:56)
]]></error>
    <system-out><![CDATA[2021-04-03T18:02:12,314|[DEBUG] EMFactory - getting EntityManagerFactory
2021-04-03T18:02:12,314|[DEBUG] EMFactory - initializeing EntityManagerFactory
2021-04-03T18:02:12,314|[DEBUG] EMFactory - creating EntityManagerFactory
2021-04-03T18:02:12,320|[INFO ] LogHelper - HHH000204: Processing PersistenceUnitInfo [name: simplebloodbank-PU-test]
2021-04-03T18:02:12,324|[DEBUG] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@630f24a5
2021-04-03T18:02:12,324|[DEBUG] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@630f24a5
2021-04-03T18:02:12,324|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@630f24a5
2021-04-03T18:02:12,324|[DEBUG] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@34ceabf1
2021-04-03T18:02:12,324|[DEBUG] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@47861e3c
2021-04-03T18:02:12,324|[DEBUG] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@3f2fd933
2021-04-03T18:02:12,324|[DEBUG] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@546f0369
2021-04-03T18:02:12,324|[DEBUG] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@546f0369
2021-04-03T18:02:12,324|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@546f0369
2021-04-03T18:02:12,324|[DEBUG] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@6e32eea5
2021-04-03T18:02:12,324|[DEBUG] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@6e32eea5
2021-04-03T18:02:12,324|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6e32eea5
2021-04-03T18:02:12,324|[DEBUG] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2d45db20
2021-04-03T18:02:12,324|[DEBUG] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2d45db20
2021-04-03T18:02:12,324|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2d45db20
2021-04-03T18:02:12,324|[DEBUG] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@52bf434b
2021-04-03T18:02:12,324|[DEBUG] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@52bf434b
2021-04-03T18:02:12,324|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@52bf434b
2021-04-03T18:02:12,324|[DEBUG] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@563b9462
2021-04-03T18:02:12,324|[DEBUG] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@563b9462
2021-04-03T18:02:12,324|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@563b9462
2021-04-03T18:02:12,324|[DEBUG] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6ad51d91
2021-04-03T18:02:12,324|[DEBUG] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6ad51d91
2021-04-03T18:02:12,325|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6ad51d91
2021-04-03T18:02:12,325|[DEBUG] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@288c16a5
2021-04-03T18:02:12,325|[DEBUG] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@288c16a5
2021-04-03T18:02:12,325|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@288c16a5
2021-04-03T18:02:12,325|[DEBUG] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7540aa55
2021-04-03T18:02:12,325|[DEBUG] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7540aa55
2021-04-03T18:02:12,325|[DEBUG] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6815e19c
2021-04-03T18:02:12,325|[DEBUG] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6815e19c
2021-04-03T18:02:12,325|[DEBUG] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@2d66a5d3
2021-04-03T18:02:12,325|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@2d66a5d3
2021-04-03T18:02:12,325|[DEBUG] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@687fa4d0
2021-04-03T18:02:12,325|[DEBUG] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5bfa2801
2021-04-03T18:02:12,325|[DEBUG] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@25428bab
2021-04-03T18:02:12,325|[DEBUG] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@25428bab
2021-04-03T18:02:12,325|[DEBUG] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@1cfb035c
2021-04-03T18:02:12,325|[DEBUG] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@1cfb035c
2021-04-03T18:02:12,325|[DEBUG] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@1c8ab147
2021-04-03T18:02:12,325|[DEBUG] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@1c8ab147
2021-04-03T18:02:12,325|[DEBUG] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@157f284b
2021-04-03T18:02:12,325|[DEBUG] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@157f284b
2021-04-03T18:02:12,325|[DEBUG] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@639f7054
2021-04-03T18:02:12,325|[DEBUG] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@639f7054
2021-04-03T18:02:12,325|[DEBUG] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@13e59265
2021-04-03T18:02:12,325|[DEBUG] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@13e59265
2021-04-03T18:02:12,325|[DEBUG] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3d7c21b7
2021-04-03T18:02:12,325|[DEBUG] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3d7c21b7
2021-04-03T18:02:12,325|[DEBUG] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@58da1b27
2021-04-03T18:02:12,325|[DEBUG] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@58da1b27
2021-04-03T18:02:12,325|[DEBUG] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@129bc797
2021-04-03T18:02:12,325|[DEBUG] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@129bc797
2021-04-03T18:02:12,325|[DEBUG] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@38b65eb9
2021-04-03T18:02:12,325|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@38b65eb9
2021-04-03T18:02:12,326|[DEBUG] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@723493f2
2021-04-03T18:02:12,326|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@723493f2
2021-04-03T18:02:12,326|[DEBUG] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@2be33ac
2021-04-03T18:02:12,326|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2be33ac
2021-04-03T18:02:12,326|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2be33ac
2021-04-03T18:02:12,326|[DEBUG] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7892d7a7
2021-04-03T18:02:12,326|[DEBUG] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@704a0f9
2021-04-03T18:02:12,326|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@704a0f9
2021-04-03T18:02:12,326|[DEBUG] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@704a0f9
2021-04-03T18:02:12,326|[DEBUG] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@15cf663c
2021-04-03T18:02:12,326|[DEBUG] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@68317dc0
2021-04-03T18:02:12,326|[DEBUG] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@2c9e3083
2021-04-03T18:02:12,326|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2c9e3083
2021-04-03T18:02:12,326|[DEBUG] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@179eb386
2021-04-03T18:02:12,326|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@179eb386
2021-04-03T18:02:12,326|[DEBUG] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@70915da3
2021-04-03T18:02:12,326|[DEBUG] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@70915da3
2021-04-03T18:02:12,326|[DEBUG] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@3e5b32ca
2021-04-03T18:02:12,326|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3e5b32ca
2021-04-03T18:02:12,326|[DEBUG] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5d6d21e2
2021-04-03T18:02:12,326|[DEBUG] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5d6d21e2
2021-04-03T18:02:12,326|[DEBUG] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@39e67fbc
2021-04-03T18:02:12,327|[DEBUG] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@33260ecd
2021-04-03T18:02:12,327|[DEBUG] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@33260ecd
2021-04-03T18:02:12,327|[DEBUG] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@33260ecd
2021-04-03T18:02:12,327|[DEBUG] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@671f70bc
2021-04-03T18:02:12,327|[DEBUG] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@671f70bc
2021-04-03T18:02:12,327|[DEBUG] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@671f70bc
2021-04-03T18:02:12,327|[DEBUG] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@3e0d722f
2021-04-03T18:02:12,327|[DEBUG] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@7fab8e9a
2021-04-03T18:02:12,327|[DEBUG] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@251d3913
2021-04-03T18:02:12,327|[DEBUG] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@251d3913
2021-04-03T18:02:12,327|[DEBUG] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@251d3913
2021-04-03T18:02:12,327|[DEBUG] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@18211894
2021-04-03T18:02:12,327|[DEBUG] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@18211894
2021-04-03T18:02:12,327|[DEBUG] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@18211894
2021-04-03T18:02:12,327|[DEBUG] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@76cb6d16
2021-04-03T18:02:12,327|[DEBUG] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@3bd6ce4e
2021-04-03T18:02:12,327|[DEBUG] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@4f2a0651
2021-04-03T18:02:12,327|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4f2a0651
2021-04-03T18:02:12,327|[DEBUG] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@79f6e671
2021-04-03T18:02:12,327|[DEBUG] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@4c49471c
2021-04-03T18:02:12,327|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4c49471c
2021-04-03T18:02:12,327|[DEBUG] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@559ac87f
2021-04-03T18:02:12,328|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@559ac87f
2021-04-03T18:02:12,328|[DEBUG] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@10683f87
2021-04-03T18:02:12,328|[DEBUG] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2c3f9229
2021-04-03T18:02:12,328|[DEBUG] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@6d68cbf3
2021-04-03T18:02:12,328|[DEBUG] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@151cbba4
2021-04-03T18:02:12,328|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@151cbba4
2021-04-03T18:02:12,328|[DEBUG] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@70713e9d
2021-04-03T18:02:12,328|[DEBUG] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@11f4c488
2021-04-03T18:02:12,328|[DEBUG] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3a1a736e
2021-04-03T18:02:12,328|[DEBUG] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@39314e02
2021-04-03T18:02:12,328|[DEBUG] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@404d1a6f
2021-04-03T18:02:12,328|[DEBUG] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@77aa566a
2021-04-03T18:02:12,328|[DEBUG] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1ec2caf2
2021-04-03T18:02:12,328|[DEBUG] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2d30d676
]]></system-out>
  </testcase>
  <testcase name="testCreateEntityBadLengthValues" classname="logic.AccountLogicTest" time="0.031">
    <error type="org.hibernate.service.spi.ServiceException"><![CDATA[org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
	at logic.AccountLogicTest.setUp(AccountLogicTest.java:56)
Caused by: org.hibernate.engine.jndi.JndiException: Unable to lookup JNDI name [java:comp/env/jdbc/SimpleBloodBank]
	at logic.AccountLogicTest.setUp(AccountLogicTest.java:56)
Caused by: javax.naming.NameNotFoundException: Name [comp/env/jdbc/SimpleBloodBank] is not bound in this Context. Unable to find [comp].
	at logic.AccountLogicTest.setUp(AccountLogicTest.java:56)
]]></error>
    <system-out><![CDATA[2021-04-03T18:02:12,351|[DEBUG] EMFactory - getting EntityManagerFactory
2021-04-03T18:02:12,351|[DEBUG] EMFactory - initializeing EntityManagerFactory
2021-04-03T18:02:12,351|[DEBUG] EMFactory - creating EntityManagerFactory
2021-04-03T18:02:12,357|[INFO ] LogHelper - HHH000204: Processing PersistenceUnitInfo [name: simplebloodbank-PU-test]
2021-04-03T18:02:12,360|[DEBUG] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@630f24a5
2021-04-03T18:02:12,360|[DEBUG] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@630f24a5
2021-04-03T18:02:12,360|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@630f24a5
2021-04-03T18:02:12,360|[DEBUG] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@34ceabf1
2021-04-03T18:02:12,360|[DEBUG] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@47861e3c
2021-04-03T18:02:12,360|[DEBUG] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@3f2fd933
2021-04-03T18:02:12,360|[DEBUG] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@546f0369
2021-04-03T18:02:12,360|[DEBUG] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@546f0369
2021-04-03T18:02:12,360|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@546f0369
2021-04-03T18:02:12,360|[DEBUG] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@6e32eea5
2021-04-03T18:02:12,360|[DEBUG] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@6e32eea5
2021-04-03T18:02:12,360|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6e32eea5
2021-04-03T18:02:12,361|[DEBUG] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2d45db20
2021-04-03T18:02:12,361|[DEBUG] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2d45db20
2021-04-03T18:02:12,361|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2d45db20
2021-04-03T18:02:12,361|[DEBUG] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@52bf434b
2021-04-03T18:02:12,361|[DEBUG] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@52bf434b
2021-04-03T18:02:12,361|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@52bf434b
2021-04-03T18:02:12,361|[DEBUG] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@563b9462
2021-04-03T18:02:12,361|[DEBUG] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@563b9462
2021-04-03T18:02:12,361|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@563b9462
2021-04-03T18:02:12,361|[DEBUG] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6ad51d91
2021-04-03T18:02:12,361|[DEBUG] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6ad51d91
2021-04-03T18:02:12,361|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6ad51d91
2021-04-03T18:02:12,361|[DEBUG] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@288c16a5
2021-04-03T18:02:12,361|[DEBUG] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@288c16a5
2021-04-03T18:02:12,361|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@288c16a5
2021-04-03T18:02:12,361|[DEBUG] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7540aa55
2021-04-03T18:02:12,361|[DEBUG] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7540aa55
2021-04-03T18:02:12,361|[DEBUG] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6815e19c
2021-04-03T18:02:12,361|[DEBUG] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6815e19c
2021-04-03T18:02:12,361|[DEBUG] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@2d66a5d3
2021-04-03T18:02:12,361|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@2d66a5d3
2021-04-03T18:02:12,361|[DEBUG] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@687fa4d0
2021-04-03T18:02:12,361|[DEBUG] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5bfa2801
2021-04-03T18:02:12,361|[DEBUG] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@25428bab
2021-04-03T18:02:12,361|[DEBUG] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@25428bab
2021-04-03T18:02:12,361|[DEBUG] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@1cfb035c
2021-04-03T18:02:12,361|[DEBUG] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@1cfb035c
2021-04-03T18:02:12,361|[DEBUG] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@1c8ab147
2021-04-03T18:02:12,361|[DEBUG] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@1c8ab147
2021-04-03T18:02:12,361|[DEBUG] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@157f284b
2021-04-03T18:02:12,361|[DEBUG] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@157f284b
2021-04-03T18:02:12,361|[DEBUG] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@639f7054
2021-04-03T18:02:12,361|[DEBUG] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@639f7054
2021-04-03T18:02:12,361|[DEBUG] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@13e59265
2021-04-03T18:02:12,361|[DEBUG] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@13e59265
2021-04-03T18:02:12,361|[DEBUG] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3d7c21b7
2021-04-03T18:02:12,361|[DEBUG] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3d7c21b7
2021-04-03T18:02:12,361|[DEBUG] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@58da1b27
2021-04-03T18:02:12,361|[DEBUG] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@58da1b27
2021-04-03T18:02:12,361|[DEBUG] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@129bc797
2021-04-03T18:02:12,361|[DEBUG] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@129bc797
2021-04-03T18:02:12,361|[DEBUG] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@38b65eb9
2021-04-03T18:02:12,361|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@38b65eb9
2021-04-03T18:02:12,361|[DEBUG] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@723493f2
2021-04-03T18:02:12,361|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@723493f2
2021-04-03T18:02:12,361|[DEBUG] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@2be33ac
2021-04-03T18:02:12,361|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2be33ac
2021-04-03T18:02:12,361|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2be33ac
2021-04-03T18:02:12,361|[DEBUG] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7892d7a7
2021-04-03T18:02:12,361|[DEBUG] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@704a0f9
2021-04-03T18:02:12,361|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@704a0f9
2021-04-03T18:02:12,361|[DEBUG] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@704a0f9
2021-04-03T18:02:12,361|[DEBUG] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@15cf663c
2021-04-03T18:02:12,361|[DEBUG] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@68317dc0
2021-04-03T18:02:12,361|[DEBUG] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@2c9e3083
2021-04-03T18:02:12,361|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2c9e3083
2021-04-03T18:02:12,361|[DEBUG] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@179eb386
2021-04-03T18:02:12,361|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@179eb386
2021-04-03T18:02:12,361|[DEBUG] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@70915da3
2021-04-03T18:02:12,361|[DEBUG] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@70915da3
2021-04-03T18:02:12,361|[DEBUG] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@3e5b32ca
2021-04-03T18:02:12,361|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3e5b32ca
2021-04-03T18:02:12,361|[DEBUG] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5d6d21e2
2021-04-03T18:02:12,361|[DEBUG] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5d6d21e2
2021-04-03T18:02:12,361|[DEBUG] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@39e67fbc
2021-04-03T18:02:12,361|[DEBUG] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@33260ecd
2021-04-03T18:02:12,361|[DEBUG] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@33260ecd
2021-04-03T18:02:12,362|[DEBUG] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@33260ecd
2021-04-03T18:02:12,362|[DEBUG] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@671f70bc
2021-04-03T18:02:12,362|[DEBUG] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@671f70bc
2021-04-03T18:02:12,362|[DEBUG] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@671f70bc
2021-04-03T18:02:12,362|[DEBUG] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@3e0d722f
2021-04-03T18:02:12,362|[DEBUG] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@7fab8e9a
2021-04-03T18:02:12,362|[DEBUG] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@251d3913
2021-04-03T18:02:12,362|[DEBUG] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@251d3913
2021-04-03T18:02:12,362|[DEBUG] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@251d3913
2021-04-03T18:02:12,362|[DEBUG] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@18211894
2021-04-03T18:02:12,362|[DEBUG] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@18211894
2021-04-03T18:02:12,362|[DEBUG] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@18211894
2021-04-03T18:02:12,362|[DEBUG] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@76cb6d16
2021-04-03T18:02:12,362|[DEBUG] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@3bd6ce4e
2021-04-03T18:02:12,362|[DEBUG] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@4f2a0651
2021-04-03T18:02:12,362|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4f2a0651
2021-04-03T18:02:12,362|[DEBUG] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@79f6e671
2021-04-03T18:02:12,362|[DEBUG] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@4c49471c
2021-04-03T18:02:12,362|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4c49471c
2021-04-03T18:02:12,362|[DEBUG] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@559ac87f
2021-04-03T18:02:12,362|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@559ac87f
2021-04-03T18:02:12,362|[DEBUG] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@10683f87
2021-04-03T18:02:12,362|[DEBUG] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2c3f9229
2021-04-03T18:02:12,362|[DEBUG] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@6d68cbf3
2021-04-03T18:02:12,362|[DEBUG] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@151cbba4
2021-04-03T18:02:12,362|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@151cbba4
2021-04-03T18:02:12,362|[DEBUG] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7f04ff02
2021-04-03T18:02:12,362|[DEBUG] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7f5435ab
2021-04-03T18:02:12,362|[DEBUG] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@599df260
2021-04-03T18:02:12,362|[DEBUG] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3d1414d
2021-04-03T18:02:12,362|[DEBUG] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5bf552da
2021-04-03T18:02:12,362|[DEBUG] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5d2dd62
2021-04-03T18:02:12,362|[DEBUG] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@336a214a
2021-04-03T18:02:12,362|[DEBUG] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3a38c543
]]></system-out>
  </testcase>
  <testcase name="testCreateEntityEdgeValues" classname="logic.AccountLogicTest" time="0.04">
    <error type="org.hibernate.service.spi.ServiceException"><![CDATA[org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
	at logic.AccountLogicTest.setUp(AccountLogicTest.java:56)
Caused by: org.hibernate.engine.jndi.JndiException: Unable to lookup JNDI name [java:comp/env/jdbc/SimpleBloodBank]
	at logic.AccountLogicTest.setUp(AccountLogicTest.java:56)
Caused by: javax.naming.NameNotFoundException: Name [comp/env/jdbc/SimpleBloodBank] is not bound in this Context. Unable to find [comp].
	at logic.AccountLogicTest.setUp(AccountLogicTest.java:56)
]]></error>
    <system-out><![CDATA[2021-04-03T18:02:12,382|[DEBUG] EMFactory - getting EntityManagerFactory
2021-04-03T18:02:12,382|[DEBUG] EMFactory - initializeing EntityManagerFactory
2021-04-03T18:02:12,382|[DEBUG] EMFactory - creating EntityManagerFactory
2021-04-03T18:02:12,389|[INFO ] LogHelper - HHH000204: Processing PersistenceUnitInfo [name: simplebloodbank-PU-test]
2021-04-03T18:02:12,394|[DEBUG] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@630f24a5
2021-04-03T18:02:12,394|[DEBUG] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@630f24a5
2021-04-03T18:02:12,394|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@630f24a5
2021-04-03T18:02:12,394|[DEBUG] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@34ceabf1
2021-04-03T18:02:12,394|[DEBUG] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@47861e3c
2021-04-03T18:02:12,394|[DEBUG] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@3f2fd933
2021-04-03T18:02:12,394|[DEBUG] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@546f0369
2021-04-03T18:02:12,394|[DEBUG] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@546f0369
2021-04-03T18:02:12,394|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@546f0369
2021-04-03T18:02:12,394|[DEBUG] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@6e32eea5
2021-04-03T18:02:12,394|[DEBUG] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@6e32eea5
2021-04-03T18:02:12,394|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6e32eea5
2021-04-03T18:02:12,394|[DEBUG] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2d45db20
2021-04-03T18:02:12,394|[DEBUG] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2d45db20
2021-04-03T18:02:12,394|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2d45db20
2021-04-03T18:02:12,394|[DEBUG] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@52bf434b
2021-04-03T18:02:12,394|[DEBUG] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@52bf434b
2021-04-03T18:02:12,394|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@52bf434b
2021-04-03T18:02:12,394|[DEBUG] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@563b9462
2021-04-03T18:02:12,394|[DEBUG] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@563b9462
2021-04-03T18:02:12,394|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@563b9462
2021-04-03T18:02:12,394|[DEBUG] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6ad51d91
2021-04-03T18:02:12,394|[DEBUG] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6ad51d91
2021-04-03T18:02:12,394|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6ad51d91
2021-04-03T18:02:12,394|[DEBUG] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@288c16a5
2021-04-03T18:02:12,394|[DEBUG] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@288c16a5
2021-04-03T18:02:12,395|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@288c16a5
2021-04-03T18:02:12,395|[DEBUG] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7540aa55
2021-04-03T18:02:12,395|[DEBUG] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7540aa55
2021-04-03T18:02:12,395|[DEBUG] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6815e19c
2021-04-03T18:02:12,395|[DEBUG] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6815e19c
2021-04-03T18:02:12,395|[DEBUG] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@2d66a5d3
2021-04-03T18:02:12,395|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@2d66a5d3
2021-04-03T18:02:12,395|[DEBUG] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@687fa4d0
2021-04-03T18:02:12,395|[DEBUG] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5bfa2801
2021-04-03T18:02:12,395|[DEBUG] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@25428bab
2021-04-03T18:02:12,395|[DEBUG] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@25428bab
2021-04-03T18:02:12,395|[DEBUG] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@1cfb035c
2021-04-03T18:02:12,395|[DEBUG] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@1cfb035c
2021-04-03T18:02:12,395|[DEBUG] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@1c8ab147
2021-04-03T18:02:12,395|[DEBUG] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@1c8ab147
2021-04-03T18:02:12,395|[DEBUG] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@157f284b
2021-04-03T18:02:12,395|[DEBUG] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@157f284b
2021-04-03T18:02:12,395|[DEBUG] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@639f7054
2021-04-03T18:02:12,396|[DEBUG] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@639f7054
2021-04-03T18:02:12,396|[DEBUG] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@13e59265
2021-04-03T18:02:12,396|[DEBUG] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@13e59265
2021-04-03T18:02:12,396|[DEBUG] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3d7c21b7
2021-04-03T18:02:12,396|[DEBUG] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3d7c21b7
2021-04-03T18:02:12,396|[DEBUG] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@58da1b27
2021-04-03T18:02:12,396|[DEBUG] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@58da1b27
2021-04-03T18:02:12,396|[DEBUG] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@129bc797
2021-04-03T18:02:12,396|[DEBUG] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@129bc797
2021-04-03T18:02:12,396|[DEBUG] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@38b65eb9
2021-04-03T18:02:12,396|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@38b65eb9
2021-04-03T18:02:12,396|[DEBUG] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@723493f2
2021-04-03T18:02:12,396|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@723493f2
2021-04-03T18:02:12,396|[DEBUG] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@2be33ac
2021-04-03T18:02:12,396|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2be33ac
2021-04-03T18:02:12,396|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2be33ac
2021-04-03T18:02:12,396|[DEBUG] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7892d7a7
2021-04-03T18:02:12,396|[DEBUG] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@704a0f9
2021-04-03T18:02:12,396|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@704a0f9
2021-04-03T18:02:12,396|[DEBUG] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@704a0f9
2021-04-03T18:02:12,396|[DEBUG] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@15cf663c
2021-04-03T18:02:12,396|[DEBUG] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@68317dc0
2021-04-03T18:02:12,396|[DEBUG] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@2c9e3083
2021-04-03T18:02:12,397|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2c9e3083
2021-04-03T18:02:12,397|[DEBUG] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@179eb386
2021-04-03T18:02:12,397|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@179eb386
2021-04-03T18:02:12,397|[DEBUG] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@70915da3
2021-04-03T18:02:12,397|[DEBUG] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@70915da3
2021-04-03T18:02:12,397|[DEBUG] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@3e5b32ca
2021-04-03T18:02:12,397|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3e5b32ca
2021-04-03T18:02:12,397|[DEBUG] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5d6d21e2
2021-04-03T18:02:12,397|[DEBUG] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5d6d21e2
2021-04-03T18:02:12,397|[DEBUG] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@39e67fbc
2021-04-03T18:02:12,397|[DEBUG] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@33260ecd
2021-04-03T18:02:12,397|[DEBUG] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@33260ecd
2021-04-03T18:02:12,397|[DEBUG] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@33260ecd
2021-04-03T18:02:12,397|[DEBUG] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@671f70bc
2021-04-03T18:02:12,397|[DEBUG] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@671f70bc
2021-04-03T18:02:12,397|[DEBUG] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@671f70bc
2021-04-03T18:02:12,397|[DEBUG] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@3e0d722f
2021-04-03T18:02:12,397|[DEBUG] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@7fab8e9a
2021-04-03T18:02:12,397|[DEBUG] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@251d3913
2021-04-03T18:02:12,397|[DEBUG] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@251d3913
2021-04-03T18:02:12,397|[DEBUG] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@251d3913
2021-04-03T18:02:12,397|[DEBUG] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@18211894
2021-04-03T18:02:12,397|[DEBUG] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@18211894
2021-04-03T18:02:12,397|[DEBUG] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@18211894
2021-04-03T18:02:12,397|[DEBUG] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@76cb6d16
2021-04-03T18:02:12,397|[DEBUG] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@3bd6ce4e
2021-04-03T18:02:12,397|[DEBUG] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@4f2a0651
2021-04-03T18:02:12,397|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4f2a0651
2021-04-03T18:02:12,397|[DEBUG] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@79f6e671
2021-04-03T18:02:12,397|[DEBUG] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@4c49471c
2021-04-03T18:02:12,397|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4c49471c
2021-04-03T18:02:12,397|[DEBUG] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@559ac87f
2021-04-03T18:02:12,397|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@559ac87f
2021-04-03T18:02:12,397|[DEBUG] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@10683f87
2021-04-03T18:02:12,397|[DEBUG] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2c3f9229
2021-04-03T18:02:12,398|[DEBUG] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@6d68cbf3
2021-04-03T18:02:12,398|[DEBUG] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@151cbba4
2021-04-03T18:02:12,398|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@151cbba4
2021-04-03T18:02:12,398|[DEBUG] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5437039a
2021-04-03T18:02:12,398|[DEBUG] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6ed68a2e
2021-04-03T18:02:12,398|[DEBUG] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@336bb88c
2021-04-03T18:02:12,398|[DEBUG] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1cedabb0
2021-04-03T18:02:12,398|[DEBUG] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@702a4064
2021-04-03T18:02:12,398|[DEBUG] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2af733b5
2021-04-03T18:02:12,398|[DEBUG] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@443641bf
2021-04-03T18:02:12,398|[DEBUG] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3577d2a2
]]></system-out>
  </testcase>
  <testcase name="testGetAll" classname="logic.AccountLogicTest" time="0.04">
    <error type="org.hibernate.service.spi.ServiceException"><![CDATA[org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
	at logic.AccountLogicTest.setUp(AccountLogicTest.java:56)
Caused by: org.hibernate.engine.jndi.JndiException: Unable to lookup JNDI name [java:comp/env/jdbc/SimpleBloodBank]
	at logic.AccountLogicTest.setUp(AccountLogicTest.java:56)
Caused by: javax.naming.NameNotFoundException: Name [comp/env/jdbc/SimpleBloodBank] is not bound in this Context. Unable to find [comp].
	at logic.AccountLogicTest.setUp(AccountLogicTest.java:56)
]]></error>
    <system-out><![CDATA[2021-04-03T18:02:12,423|[DEBUG] EMFactory - getting EntityManagerFactory
2021-04-03T18:02:12,423|[DEBUG] EMFactory - initializeing EntityManagerFactory
2021-04-03T18:02:12,423|[DEBUG] EMFactory - creating EntityManagerFactory
2021-04-03T18:02:12,430|[INFO ] LogHelper - HHH000204: Processing PersistenceUnitInfo [name: simplebloodbank-PU-test]
2021-04-03T18:02:12,435|[DEBUG] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@630f24a5
2021-04-03T18:02:12,435|[DEBUG] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@630f24a5
2021-04-03T18:02:12,435|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@630f24a5
2021-04-03T18:02:12,435|[DEBUG] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@34ceabf1
2021-04-03T18:02:12,435|[DEBUG] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@47861e3c
2021-04-03T18:02:12,435|[DEBUG] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@3f2fd933
2021-04-03T18:02:12,435|[DEBUG] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@546f0369
2021-04-03T18:02:12,435|[DEBUG] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@546f0369
2021-04-03T18:02:12,435|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@546f0369
2021-04-03T18:02:12,435|[DEBUG] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@6e32eea5
2021-04-03T18:02:12,435|[DEBUG] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@6e32eea5
2021-04-03T18:02:12,435|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6e32eea5
2021-04-03T18:02:12,435|[DEBUG] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2d45db20
2021-04-03T18:02:12,435|[DEBUG] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2d45db20
2021-04-03T18:02:12,435|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2d45db20
2021-04-03T18:02:12,436|[DEBUG] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@52bf434b
2021-04-03T18:02:12,436|[DEBUG] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@52bf434b
2021-04-03T18:02:12,436|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@52bf434b
2021-04-03T18:02:12,436|[DEBUG] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@563b9462
2021-04-03T18:02:12,436|[DEBUG] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@563b9462
2021-04-03T18:02:12,436|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@563b9462
2021-04-03T18:02:12,436|[DEBUG] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6ad51d91
2021-04-03T18:02:12,436|[DEBUG] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6ad51d91
2021-04-03T18:02:12,436|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6ad51d91
2021-04-03T18:02:12,436|[DEBUG] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@288c16a5
2021-04-03T18:02:12,436|[DEBUG] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@288c16a5
2021-04-03T18:02:12,436|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@288c16a5
2021-04-03T18:02:12,436|[DEBUG] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7540aa55
2021-04-03T18:02:12,436|[DEBUG] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7540aa55
2021-04-03T18:02:12,436|[DEBUG] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6815e19c
2021-04-03T18:02:12,436|[DEBUG] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6815e19c
2021-04-03T18:02:12,436|[DEBUG] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@2d66a5d3
2021-04-03T18:02:12,436|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@2d66a5d3
2021-04-03T18:02:12,436|[DEBUG] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@687fa4d0
2021-04-03T18:02:12,436|[DEBUG] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5bfa2801
2021-04-03T18:02:12,436|[DEBUG] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@25428bab
2021-04-03T18:02:12,436|[DEBUG] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@25428bab
2021-04-03T18:02:12,436|[DEBUG] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@1cfb035c
2021-04-03T18:02:12,436|[DEBUG] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@1cfb035c
2021-04-03T18:02:12,436|[DEBUG] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@1c8ab147
2021-04-03T18:02:12,436|[DEBUG] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@1c8ab147
2021-04-03T18:02:12,436|[DEBUG] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@157f284b
2021-04-03T18:02:12,436|[DEBUG] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@157f284b
2021-04-03T18:02:12,436|[DEBUG] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@639f7054
2021-04-03T18:02:12,436|[DEBUG] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@639f7054
2021-04-03T18:02:12,436|[DEBUG] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@13e59265
2021-04-03T18:02:12,436|[DEBUG] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@13e59265
2021-04-03T18:02:12,436|[DEBUG] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3d7c21b7
2021-04-03T18:02:12,436|[DEBUG] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3d7c21b7
2021-04-03T18:02:12,437|[DEBUG] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@58da1b27
2021-04-03T18:02:12,437|[DEBUG] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@58da1b27
2021-04-03T18:02:12,437|[DEBUG] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@129bc797
2021-04-03T18:02:12,437|[DEBUG] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@129bc797
2021-04-03T18:02:12,437|[DEBUG] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@38b65eb9
2021-04-03T18:02:12,437|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@38b65eb9
2021-04-03T18:02:12,437|[DEBUG] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@723493f2
2021-04-03T18:02:12,437|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@723493f2
2021-04-03T18:02:12,437|[DEBUG] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@2be33ac
2021-04-03T18:02:12,437|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2be33ac
2021-04-03T18:02:12,437|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2be33ac
2021-04-03T18:02:12,437|[DEBUG] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7892d7a7
2021-04-03T18:02:12,437|[DEBUG] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@704a0f9
2021-04-03T18:02:12,437|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@704a0f9
2021-04-03T18:02:12,437|[DEBUG] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@704a0f9
2021-04-03T18:02:12,437|[DEBUG] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@15cf663c
2021-04-03T18:02:12,437|[DEBUG] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@68317dc0
2021-04-03T18:02:12,437|[DEBUG] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@2c9e3083
2021-04-03T18:02:12,437|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2c9e3083
2021-04-03T18:02:12,437|[DEBUG] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@179eb386
2021-04-03T18:02:12,437|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@179eb386
2021-04-03T18:02:12,437|[DEBUG] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@70915da3
2021-04-03T18:02:12,437|[DEBUG] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@70915da3
2021-04-03T18:02:12,437|[DEBUG] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@3e5b32ca
2021-04-03T18:02:12,437|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3e5b32ca
2021-04-03T18:02:12,437|[DEBUG] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5d6d21e2
2021-04-03T18:02:12,437|[DEBUG] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5d6d21e2
2021-04-03T18:02:12,437|[DEBUG] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@39e67fbc
2021-04-03T18:02:12,437|[DEBUG] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@33260ecd
2021-04-03T18:02:12,437|[DEBUG] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@33260ecd
2021-04-03T18:02:12,437|[DEBUG] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@33260ecd
2021-04-03T18:02:12,438|[DEBUG] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@671f70bc
2021-04-03T18:02:12,438|[DEBUG] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@671f70bc
2021-04-03T18:02:12,438|[DEBUG] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@671f70bc
2021-04-03T18:02:12,438|[DEBUG] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@3e0d722f
2021-04-03T18:02:12,438|[DEBUG] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@7fab8e9a
2021-04-03T18:02:12,438|[DEBUG] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@251d3913
2021-04-03T18:02:12,438|[DEBUG] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@251d3913
2021-04-03T18:02:12,438|[DEBUG] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@251d3913
2021-04-03T18:02:12,438|[DEBUG] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@18211894
2021-04-03T18:02:12,438|[DEBUG] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@18211894
2021-04-03T18:02:12,438|[DEBUG] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@18211894
2021-04-03T18:02:12,438|[DEBUG] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@76cb6d16
2021-04-03T18:02:12,438|[DEBUG] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@3bd6ce4e
2021-04-03T18:02:12,438|[DEBUG] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@4f2a0651
2021-04-03T18:02:12,438|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4f2a0651
2021-04-03T18:02:12,438|[DEBUG] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@79f6e671
2021-04-03T18:02:12,438|[DEBUG] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@4c49471c
2021-04-03T18:02:12,438|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4c49471c
2021-04-03T18:02:12,438|[DEBUG] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@559ac87f
2021-04-03T18:02:12,438|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@559ac87f
2021-04-03T18:02:12,438|[DEBUG] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@10683f87
2021-04-03T18:02:12,438|[DEBUG] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2c3f9229
2021-04-03T18:02:12,438|[DEBUG] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@6d68cbf3
2021-04-03T18:02:12,438|[DEBUG] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@151cbba4
2021-04-03T18:02:12,438|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@151cbba4
2021-04-03T18:02:12,439|[DEBUG] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@e93f8b4
2021-04-03T18:02:12,439|[DEBUG] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6617fa99
2021-04-03T18:02:12,439|[DEBUG] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3199d939
2021-04-03T18:02:12,439|[DEBUG] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@371ea5d7
2021-04-03T18:02:12,439|[DEBUG] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2659add8
2021-04-03T18:02:12,439|[DEBUG] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7f4358b8
2021-04-03T18:02:12,439|[DEBUG] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@ec0678
2021-04-03T18:02:12,439|[DEBUG] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@421e2baf
]]></system-out>
  </testcase>
  <testcase name="testGetColumnCodes" classname="logic.AccountLogicTest" time="0.042">
    <error type="org.hibernate.service.spi.ServiceException"><![CDATA[org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
	at logic.AccountLogicTest.setUp(AccountLogicTest.java:56)
Caused by: org.hibernate.engine.jndi.JndiException: Unable to lookup JNDI name [java:comp/env/jdbc/SimpleBloodBank]
	at logic.AccountLogicTest.setUp(AccountLogicTest.java:56)
Caused by: javax.naming.NameNotFoundException: Name [comp/env/jdbc/SimpleBloodBank] is not bound in this Context. Unable to find [comp].
	at logic.AccountLogicTest.setUp(AccountLogicTest.java:56)
]]></error>
    <system-out><![CDATA[2021-04-03T18:02:12,464|[DEBUG] EMFactory - getting EntityManagerFactory
2021-04-03T18:02:12,464|[DEBUG] EMFactory - initializeing EntityManagerFactory
2021-04-03T18:02:12,464|[DEBUG] EMFactory - creating EntityManagerFactory
2021-04-03T18:02:12,470|[INFO ] LogHelper - HHH000204: Processing PersistenceUnitInfo [name: simplebloodbank-PU-test]
2021-04-03T18:02:12,476|[DEBUG] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@630f24a5
2021-04-03T18:02:12,476|[DEBUG] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@630f24a5
2021-04-03T18:02:12,476|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@630f24a5
2021-04-03T18:02:12,476|[DEBUG] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@34ceabf1
2021-04-03T18:02:12,477|[DEBUG] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@47861e3c
2021-04-03T18:02:12,477|[DEBUG] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@3f2fd933
2021-04-03T18:02:12,477|[DEBUG] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@546f0369
2021-04-03T18:02:12,477|[DEBUG] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@546f0369
2021-04-03T18:02:12,477|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@546f0369
2021-04-03T18:02:12,477|[DEBUG] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@6e32eea5
2021-04-03T18:02:12,477|[DEBUG] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@6e32eea5
2021-04-03T18:02:12,477|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6e32eea5
2021-04-03T18:02:12,477|[DEBUG] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2d45db20
2021-04-03T18:02:12,477|[DEBUG] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2d45db20
2021-04-03T18:02:12,477|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2d45db20
2021-04-03T18:02:12,477|[DEBUG] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@52bf434b
2021-04-03T18:02:12,477|[DEBUG] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@52bf434b
2021-04-03T18:02:12,477|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@52bf434b
2021-04-03T18:02:12,477|[DEBUG] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@563b9462
2021-04-03T18:02:12,477|[DEBUG] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@563b9462
2021-04-03T18:02:12,477|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@563b9462
2021-04-03T18:02:12,477|[DEBUG] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6ad51d91
2021-04-03T18:02:12,477|[DEBUG] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6ad51d91
2021-04-03T18:02:12,477|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6ad51d91
2021-04-03T18:02:12,477|[DEBUG] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@288c16a5
2021-04-03T18:02:12,477|[DEBUG] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@288c16a5
2021-04-03T18:02:12,477|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@288c16a5
2021-04-03T18:02:12,477|[DEBUG] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7540aa55
2021-04-03T18:02:12,477|[DEBUG] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7540aa55
2021-04-03T18:02:12,477|[DEBUG] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6815e19c
2021-04-03T18:02:12,477|[DEBUG] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6815e19c
2021-04-03T18:02:12,478|[DEBUG] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@2d66a5d3
2021-04-03T18:02:12,478|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@2d66a5d3
2021-04-03T18:02:12,478|[DEBUG] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@687fa4d0
2021-04-03T18:02:12,478|[DEBUG] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5bfa2801
2021-04-03T18:02:12,478|[DEBUG] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@25428bab
2021-04-03T18:02:12,478|[DEBUG] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@25428bab
2021-04-03T18:02:12,478|[DEBUG] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@1cfb035c
2021-04-03T18:02:12,478|[DEBUG] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@1cfb035c
2021-04-03T18:02:12,478|[DEBUG] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@1c8ab147
2021-04-03T18:02:12,478|[DEBUG] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@1c8ab147
2021-04-03T18:02:12,478|[DEBUG] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@157f284b
2021-04-03T18:02:12,478|[DEBUG] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@157f284b
2021-04-03T18:02:12,478|[DEBUG] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@639f7054
2021-04-03T18:02:12,478|[DEBUG] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@639f7054
2021-04-03T18:02:12,478|[DEBUG] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@13e59265
2021-04-03T18:02:12,478|[DEBUG] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@13e59265
2021-04-03T18:02:12,478|[DEBUG] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3d7c21b7
2021-04-03T18:02:12,478|[DEBUG] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3d7c21b7
2021-04-03T18:02:12,478|[DEBUG] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@58da1b27
2021-04-03T18:02:12,478|[DEBUG] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@58da1b27
2021-04-03T18:02:12,478|[DEBUG] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@129bc797
2021-04-03T18:02:12,478|[DEBUG] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@129bc797
2021-04-03T18:02:12,478|[DEBUG] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@38b65eb9
2021-04-03T18:02:12,478|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@38b65eb9
2021-04-03T18:02:12,478|[DEBUG] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@723493f2
2021-04-03T18:02:12,479|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@723493f2
2021-04-03T18:02:12,479|[DEBUG] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@2be33ac
2021-04-03T18:02:12,479|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2be33ac
2021-04-03T18:02:12,479|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2be33ac
2021-04-03T18:02:12,479|[DEBUG] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7892d7a7
2021-04-03T18:02:12,479|[DEBUG] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@704a0f9
2021-04-03T18:02:12,479|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@704a0f9
2021-04-03T18:02:12,479|[DEBUG] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@704a0f9
2021-04-03T18:02:12,479|[DEBUG] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@15cf663c
2021-04-03T18:02:12,479|[DEBUG] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@68317dc0
2021-04-03T18:02:12,479|[DEBUG] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@2c9e3083
2021-04-03T18:02:12,479|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2c9e3083
2021-04-03T18:02:12,479|[DEBUG] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@179eb386
2021-04-03T18:02:12,479|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@179eb386
2021-04-03T18:02:12,479|[DEBUG] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@70915da3
2021-04-03T18:02:12,479|[DEBUG] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@70915da3
2021-04-03T18:02:12,479|[DEBUG] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@3e5b32ca
2021-04-03T18:02:12,479|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3e5b32ca
2021-04-03T18:02:12,479|[DEBUG] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5d6d21e2
2021-04-03T18:02:12,479|[DEBUG] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5d6d21e2
2021-04-03T18:02:12,479|[DEBUG] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@39e67fbc
2021-04-03T18:02:12,479|[DEBUG] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@33260ecd
2021-04-03T18:02:12,479|[DEBUG] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@33260ecd
2021-04-03T18:02:12,479|[DEBUG] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@33260ecd
2021-04-03T18:02:12,479|[DEBUG] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@671f70bc
2021-04-03T18:02:12,479|[DEBUG] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@671f70bc
2021-04-03T18:02:12,479|[DEBUG] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@671f70bc
2021-04-03T18:02:12,479|[DEBUG] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@3e0d722f
2021-04-03T18:02:12,479|[DEBUG] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@7fab8e9a
2021-04-03T18:02:12,479|[DEBUG] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@251d3913
2021-04-03T18:02:12,479|[DEBUG] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@251d3913
2021-04-03T18:02:12,479|[DEBUG] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@251d3913
2021-04-03T18:02:12,479|[DEBUG] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@18211894
2021-04-03T18:02:12,479|[DEBUG] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@18211894
2021-04-03T18:02:12,479|[DEBUG] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@18211894
2021-04-03T18:02:12,479|[DEBUG] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@76cb6d16
2021-04-03T18:02:12,479|[DEBUG] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@3bd6ce4e
2021-04-03T18:02:12,479|[DEBUG] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@4f2a0651
2021-04-03T18:02:12,479|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4f2a0651
2021-04-03T18:02:12,479|[DEBUG] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@79f6e671
2021-04-03T18:02:12,479|[DEBUG] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@4c49471c
2021-04-03T18:02:12,479|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4c49471c
2021-04-03T18:02:12,479|[DEBUG] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@559ac87f
2021-04-03T18:02:12,479|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@559ac87f
2021-04-03T18:02:12,480|[DEBUG] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@10683f87
2021-04-03T18:02:12,480|[DEBUG] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2c3f9229
2021-04-03T18:02:12,480|[DEBUG] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@6d68cbf3
2021-04-03T18:02:12,480|[DEBUG] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@151cbba4
2021-04-03T18:02:12,480|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@151cbba4
2021-04-03T18:02:12,480|[DEBUG] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@80b741
2021-04-03T18:02:12,480|[DEBUG] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@66a3ca04
2021-04-03T18:02:12,480|[DEBUG] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@21ec5672
2021-04-03T18:02:12,480|[DEBUG] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@59362a47
2021-04-03T18:02:12,480|[DEBUG] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5c09b49f
2021-04-03T18:02:12,480|[DEBUG] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2482b6f0
2021-04-03T18:02:12,480|[DEBUG] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@671e3bd4
2021-04-03T18:02:12,480|[DEBUG] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@f124162
]]></system-out>
  </testcase>
  <testcase name="testGetColumnNames" classname="logic.AccountLogicTest" time="0.059">
    <error type="org.hibernate.service.spi.ServiceException"><![CDATA[org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
	at logic.AccountLogicTest.setUp(AccountLogicTest.java:56)
Caused by: org.hibernate.engine.jndi.JndiException: Unable to lookup JNDI name [java:comp/env/jdbc/SimpleBloodBank]
	at logic.AccountLogicTest.setUp(AccountLogicTest.java:56)
Caused by: javax.naming.NameNotFoundException: Name [comp/env/jdbc/SimpleBloodBank] is not bound in this Context. Unable to find [comp].
	at logic.AccountLogicTest.setUp(AccountLogicTest.java:56)
]]></error>
    <system-out><![CDATA[2021-04-03T18:02:12,507|[DEBUG] EMFactory - getting EntityManagerFactory
2021-04-03T18:02:12,507|[DEBUG] EMFactory - initializeing EntityManagerFactory
2021-04-03T18:02:12,507|[DEBUG] EMFactory - creating EntityManagerFactory
2021-04-03T18:02:12,513|[INFO ] LogHelper - HHH000204: Processing PersistenceUnitInfo [name: simplebloodbank-PU-test]
2021-04-03T18:02:12,518|[DEBUG] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@630f24a5
2021-04-03T18:02:12,518|[DEBUG] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@630f24a5
2021-04-03T18:02:12,518|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@630f24a5
2021-04-03T18:02:12,518|[DEBUG] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@34ceabf1
2021-04-03T18:02:12,518|[DEBUG] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@47861e3c
2021-04-03T18:02:12,518|[DEBUG] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@3f2fd933
2021-04-03T18:02:12,518|[DEBUG] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@546f0369
2021-04-03T18:02:12,518|[DEBUG] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@546f0369
2021-04-03T18:02:12,518|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@546f0369
2021-04-03T18:02:12,518|[DEBUG] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@6e32eea5
2021-04-03T18:02:12,518|[DEBUG] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@6e32eea5
2021-04-03T18:02:12,518|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6e32eea5
2021-04-03T18:02:12,518|[DEBUG] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2d45db20
2021-04-03T18:02:12,518|[DEBUG] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2d45db20
2021-04-03T18:02:12,518|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2d45db20
2021-04-03T18:02:12,518|[DEBUG] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@52bf434b
2021-04-03T18:02:12,518|[DEBUG] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@52bf434b
2021-04-03T18:02:12,518|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@52bf434b
2021-04-03T18:02:12,518|[DEBUG] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@563b9462
2021-04-03T18:02:12,518|[DEBUG] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@563b9462
2021-04-03T18:02:12,518|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@563b9462
2021-04-03T18:02:12,518|[DEBUG] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6ad51d91
2021-04-03T18:02:12,518|[DEBUG] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6ad51d91
2021-04-03T18:02:12,518|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6ad51d91
2021-04-03T18:02:12,518|[DEBUG] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@288c16a5
2021-04-03T18:02:12,518|[DEBUG] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@288c16a5
2021-04-03T18:02:12,518|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@288c16a5
2021-04-03T18:02:12,518|[DEBUG] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7540aa55
2021-04-03T18:02:12,518|[DEBUG] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7540aa55
2021-04-03T18:02:12,518|[DEBUG] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6815e19c
2021-04-03T18:02:12,519|[DEBUG] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6815e19c
2021-04-03T18:02:12,519|[DEBUG] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@2d66a5d3
2021-04-03T18:02:12,519|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@2d66a5d3
2021-04-03T18:02:12,519|[DEBUG] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@687fa4d0
2021-04-03T18:02:12,519|[DEBUG] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5bfa2801
2021-04-03T18:02:12,519|[DEBUG] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@25428bab
2021-04-03T18:02:12,519|[DEBUG] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@25428bab
2021-04-03T18:02:12,519|[DEBUG] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@1cfb035c
2021-04-03T18:02:12,519|[DEBUG] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@1cfb035c
2021-04-03T18:02:12,519|[DEBUG] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@1c8ab147
2021-04-03T18:02:12,519|[DEBUG] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@1c8ab147
2021-04-03T18:02:12,519|[DEBUG] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@157f284b
2021-04-03T18:02:12,519|[DEBUG] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@157f284b
2021-04-03T18:02:12,519|[DEBUG] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@639f7054
2021-04-03T18:02:12,519|[DEBUG] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@639f7054
2021-04-03T18:02:12,519|[DEBUG] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@13e59265
2021-04-03T18:02:12,519|[DEBUG] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@13e59265
2021-04-03T18:02:12,519|[DEBUG] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3d7c21b7
2021-04-03T18:02:12,519|[DEBUG] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3d7c21b7
2021-04-03T18:02:12,519|[DEBUG] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@58da1b27
2021-04-03T18:02:12,535|[DEBUG] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@58da1b27
2021-04-03T18:02:12,542|[DEBUG] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@129bc797
2021-04-03T18:02:12,542|[DEBUG] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@129bc797
2021-04-03T18:02:12,543|[DEBUG] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@38b65eb9
2021-04-03T18:02:12,543|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@38b65eb9
2021-04-03T18:02:12,543|[DEBUG] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@723493f2
2021-04-03T18:02:12,543|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@723493f2
2021-04-03T18:02:12,543|[DEBUG] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@2be33ac
2021-04-03T18:02:12,543|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2be33ac
2021-04-03T18:02:12,543|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2be33ac
2021-04-03T18:02:12,543|[DEBUG] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7892d7a7
2021-04-03T18:02:12,543|[DEBUG] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@704a0f9
2021-04-03T18:02:12,543|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@704a0f9
2021-04-03T18:02:12,543|[DEBUG] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@704a0f9
2021-04-03T18:02:12,543|[DEBUG] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@15cf663c
2021-04-03T18:02:12,543|[DEBUG] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@68317dc0
2021-04-03T18:02:12,543|[DEBUG] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@2c9e3083
2021-04-03T18:02:12,543|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2c9e3083
2021-04-03T18:02:12,543|[DEBUG] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@179eb386
2021-04-03T18:02:12,543|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@179eb386
2021-04-03T18:02:12,543|[DEBUG] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@70915da3
2021-04-03T18:02:12,543|[DEBUG] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@70915da3
2021-04-03T18:02:12,543|[DEBUG] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@3e5b32ca
2021-04-03T18:02:12,543|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3e5b32ca
2021-04-03T18:02:12,543|[DEBUG] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5d6d21e2
2021-04-03T18:02:12,543|[DEBUG] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5d6d21e2
2021-04-03T18:02:12,543|[DEBUG] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@39e67fbc
2021-04-03T18:02:12,543|[DEBUG] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@33260ecd
2021-04-03T18:02:12,543|[DEBUG] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@33260ecd
2021-04-03T18:02:12,543|[DEBUG] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@33260ecd
2021-04-03T18:02:12,543|[DEBUG] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@671f70bc
2021-04-03T18:02:12,543|[DEBUG] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@671f70bc
2021-04-03T18:02:12,543|[DEBUG] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@671f70bc
2021-04-03T18:02:12,543|[DEBUG] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@3e0d722f
2021-04-03T18:02:12,543|[DEBUG] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@7fab8e9a
2021-04-03T18:02:12,543|[DEBUG] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@251d3913
2021-04-03T18:02:12,543|[DEBUG] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@251d3913
2021-04-03T18:02:12,543|[DEBUG] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@251d3913
2021-04-03T18:02:12,543|[DEBUG] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@18211894
2021-04-03T18:02:12,543|[DEBUG] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@18211894
2021-04-03T18:02:12,543|[DEBUG] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@18211894
2021-04-03T18:02:12,544|[DEBUG] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@76cb6d16
2021-04-03T18:02:12,544|[DEBUG] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@3bd6ce4e
2021-04-03T18:02:12,544|[DEBUG] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@4f2a0651
2021-04-03T18:02:12,544|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4f2a0651
2021-04-03T18:02:12,544|[DEBUG] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@79f6e671
2021-04-03T18:02:12,544|[DEBUG] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@4c49471c
2021-04-03T18:02:12,544|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4c49471c
2021-04-03T18:02:12,544|[DEBUG] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@559ac87f
2021-04-03T18:02:12,544|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@559ac87f
2021-04-03T18:02:12,544|[DEBUG] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@10683f87
2021-04-03T18:02:12,544|[DEBUG] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2c3f9229
2021-04-03T18:02:12,544|[DEBUG] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@6d68cbf3
2021-04-03T18:02:12,544|[DEBUG] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@151cbba4
2021-04-03T18:02:12,544|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@151cbba4
2021-04-03T18:02:12,544|[DEBUG] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@51989892
2021-04-03T18:02:12,544|[DEBUG] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@db05f0e
2021-04-03T18:02:12,544|[DEBUG] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4e97e564
2021-04-03T18:02:12,544|[DEBUG] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@31b1a4e0
2021-04-03T18:02:12,544|[DEBUG] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2478f64c
2021-04-03T18:02:12,544|[DEBUG] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2bbf85e2
2021-04-03T18:02:12,544|[DEBUG] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5af2f934
2021-04-03T18:02:12,544|[DEBUG] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@66d8d02e
]]></system-out>
  </testcase>
  <testcase name="testGetWithId" classname="logic.AccountLogicTest" time="0.039">
    <error type="org.hibernate.service.spi.ServiceException"><![CDATA[org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
	at logic.AccountLogicTest.setUp(AccountLogicTest.java:56)
Caused by: org.hibernate.engine.jndi.JndiException: Unable to lookup JNDI name [java:comp/env/jdbc/SimpleBloodBank]
	at logic.AccountLogicTest.setUp(AccountLogicTest.java:56)
Caused by: javax.naming.NameNotFoundException: Name [comp/env/jdbc/SimpleBloodBank] is not bound in this Context. Unable to find [comp].
	at logic.AccountLogicTest.setUp(AccountLogicTest.java:56)
]]></error>
    <system-out><![CDATA[2021-04-03T18:02:12,567|[DEBUG] EMFactory - getting EntityManagerFactory
2021-04-03T18:02:12,567|[DEBUG] EMFactory - initializeing EntityManagerFactory
2021-04-03T18:02:12,567|[DEBUG] EMFactory - creating EntityManagerFactory
2021-04-03T18:02:12,573|[INFO ] LogHelper - HHH000204: Processing PersistenceUnitInfo [name: simplebloodbank-PU-test]
2021-04-03T18:02:12,576|[DEBUG] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@630f24a5
2021-04-03T18:02:12,576|[DEBUG] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@630f24a5
2021-04-03T18:02:12,576|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@630f24a5
2021-04-03T18:02:12,576|[DEBUG] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@34ceabf1
2021-04-03T18:02:12,576|[DEBUG] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@47861e3c
2021-04-03T18:02:12,577|[DEBUG] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@3f2fd933
2021-04-03T18:02:12,577|[DEBUG] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@546f0369
2021-04-03T18:02:12,577|[DEBUG] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@546f0369
2021-04-03T18:02:12,577|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@546f0369
2021-04-03T18:02:12,577|[DEBUG] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@6e32eea5
2021-04-03T18:02:12,577|[DEBUG] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@6e32eea5
2021-04-03T18:02:12,577|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6e32eea5
2021-04-03T18:02:12,577|[DEBUG] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2d45db20
2021-04-03T18:02:12,577|[DEBUG] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2d45db20
2021-04-03T18:02:12,577|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2d45db20
2021-04-03T18:02:12,577|[DEBUG] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@52bf434b
2021-04-03T18:02:12,577|[DEBUG] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@52bf434b
2021-04-03T18:02:12,577|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@52bf434b
2021-04-03T18:02:12,577|[DEBUG] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@563b9462
2021-04-03T18:02:12,577|[DEBUG] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@563b9462
2021-04-03T18:02:12,577|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@563b9462
2021-04-03T18:02:12,577|[DEBUG] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6ad51d91
2021-04-03T18:02:12,577|[DEBUG] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6ad51d91
2021-04-03T18:02:12,577|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6ad51d91
2021-04-03T18:02:12,577|[DEBUG] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@288c16a5
2021-04-03T18:02:12,577|[DEBUG] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@288c16a5
2021-04-03T18:02:12,577|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@288c16a5
2021-04-03T18:02:12,577|[DEBUG] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7540aa55
2021-04-03T18:02:12,577|[DEBUG] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7540aa55
2021-04-03T18:02:12,577|[DEBUG] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6815e19c
2021-04-03T18:02:12,577|[DEBUG] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6815e19c
2021-04-03T18:02:12,577|[DEBUG] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@2d66a5d3
2021-04-03T18:02:12,577|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@2d66a5d3
2021-04-03T18:02:12,577|[DEBUG] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@687fa4d0
2021-04-03T18:02:12,577|[DEBUG] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5bfa2801
2021-04-03T18:02:12,578|[DEBUG] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@25428bab
2021-04-03T18:02:12,578|[DEBUG] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@25428bab
2021-04-03T18:02:12,578|[DEBUG] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@1cfb035c
2021-04-03T18:02:12,578|[DEBUG] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@1cfb035c
2021-04-03T18:02:12,578|[DEBUG] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@1c8ab147
2021-04-03T18:02:12,578|[DEBUG] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@1c8ab147
2021-04-03T18:02:12,578|[DEBUG] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@157f284b
2021-04-03T18:02:12,578|[DEBUG] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@157f284b
2021-04-03T18:02:12,578|[DEBUG] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@639f7054
2021-04-03T18:02:12,578|[DEBUG] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@639f7054
2021-04-03T18:02:12,578|[DEBUG] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@13e59265
2021-04-03T18:02:12,578|[DEBUG] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@13e59265
2021-04-03T18:02:12,578|[DEBUG] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3d7c21b7
2021-04-03T18:02:12,578|[DEBUG] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3d7c21b7
2021-04-03T18:02:12,578|[DEBUG] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@58da1b27
2021-04-03T18:02:12,578|[DEBUG] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@58da1b27
2021-04-03T18:02:12,578|[DEBUG] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@129bc797
2021-04-03T18:02:12,578|[DEBUG] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@129bc797
2021-04-03T18:02:12,578|[DEBUG] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@38b65eb9
2021-04-03T18:02:12,578|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@38b65eb9
2021-04-03T18:02:12,578|[DEBUG] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@723493f2
2021-04-03T18:02:12,578|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@723493f2
2021-04-03T18:02:12,578|[DEBUG] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@2be33ac
2021-04-03T18:02:12,578|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2be33ac
2021-04-03T18:02:12,578|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2be33ac
2021-04-03T18:02:12,578|[DEBUG] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7892d7a7
2021-04-03T18:02:12,578|[DEBUG] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@704a0f9
2021-04-03T18:02:12,578|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@704a0f9
2021-04-03T18:02:12,578|[DEBUG] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@704a0f9
2021-04-03T18:02:12,578|[DEBUG] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@15cf663c
2021-04-03T18:02:12,578|[DEBUG] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@68317dc0
2021-04-03T18:02:12,578|[DEBUG] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@2c9e3083
2021-04-03T18:02:12,578|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2c9e3083
2021-04-03T18:02:12,578|[DEBUG] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@179eb386
2021-04-03T18:02:12,578|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@179eb386
2021-04-03T18:02:12,578|[DEBUG] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@70915da3
2021-04-03T18:02:12,578|[DEBUG] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@70915da3
2021-04-03T18:02:12,578|[DEBUG] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@3e5b32ca
2021-04-03T18:02:12,578|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3e5b32ca
2021-04-03T18:02:12,579|[DEBUG] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5d6d21e2
2021-04-03T18:02:12,579|[DEBUG] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5d6d21e2
2021-04-03T18:02:12,579|[DEBUG] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@39e67fbc
2021-04-03T18:02:12,579|[DEBUG] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@33260ecd
2021-04-03T18:02:12,579|[DEBUG] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@33260ecd
2021-04-03T18:02:12,579|[DEBUG] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@33260ecd
2021-04-03T18:02:12,579|[DEBUG] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@671f70bc
2021-04-03T18:02:12,579|[DEBUG] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@671f70bc
2021-04-03T18:02:12,579|[DEBUG] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@671f70bc
2021-04-03T18:02:12,579|[DEBUG] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@3e0d722f
2021-04-03T18:02:12,579|[DEBUG] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@7fab8e9a
2021-04-03T18:02:12,579|[DEBUG] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@251d3913
2021-04-03T18:02:12,579|[DEBUG] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@251d3913
2021-04-03T18:02:12,579|[DEBUG] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@251d3913
2021-04-03T18:02:12,579|[DEBUG] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@18211894
2021-04-03T18:02:12,579|[DEBUG] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@18211894
2021-04-03T18:02:12,579|[DEBUG] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@18211894
2021-04-03T18:02:12,579|[DEBUG] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@76cb6d16
2021-04-03T18:02:12,579|[DEBUG] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@3bd6ce4e
2021-04-03T18:02:12,579|[DEBUG] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@4f2a0651
2021-04-03T18:02:12,579|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4f2a0651
2021-04-03T18:02:12,579|[DEBUG] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@79f6e671
2021-04-03T18:02:12,579|[DEBUG] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@4c49471c
2021-04-03T18:02:12,579|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4c49471c
2021-04-03T18:02:12,579|[DEBUG] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@559ac87f
2021-04-03T18:02:12,579|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@559ac87f
2021-04-03T18:02:12,579|[DEBUG] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@10683f87
2021-04-03T18:02:12,579|[DEBUG] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2c3f9229
2021-04-03T18:02:12,579|[DEBUG] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@6d68cbf3
2021-04-03T18:02:12,579|[DEBUG] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@151cbba4
2021-04-03T18:02:12,579|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@151cbba4
2021-04-03T18:02:12,579|[DEBUG] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@25ee509f
2021-04-03T18:02:12,579|[DEBUG] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@76d74efe
2021-04-03T18:02:12,579|[DEBUG] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@62956310
2021-04-03T18:02:12,579|[DEBUG] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@612e1ba2
2021-04-03T18:02:12,580|[DEBUG] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3693c5b0
2021-04-03T18:02:12,580|[DEBUG] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7a7fdd22
2021-04-03T18:02:12,580|[DEBUG] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@33bbbc9e
2021-04-03T18:02:12,580|[DEBUG] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@22d94240
]]></system-out>
  </testcase>
  <testcase name="testSearch" classname="logic.AccountLogicTest" time="0.033">
    <error type="org.hibernate.service.spi.ServiceException"><![CDATA[org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
	at logic.AccountLogicTest.setUp(AccountLogicTest.java:56)
Caused by: org.hibernate.engine.jndi.JndiException: Unable to lookup JNDI name [java:comp/env/jdbc/SimpleBloodBank]
	at logic.AccountLogicTest.setUp(AccountLogicTest.java:56)
Caused by: javax.naming.NameNotFoundException: Name [comp/env/jdbc/SimpleBloodBank] is not bound in this Context. Unable to find [comp].
	at logic.AccountLogicTest.setUp(AccountLogicTest.java:56)
]]></error>
    <system-out><![CDATA[2021-04-03T18:02:12,607|[DEBUG] EMFactory - getting EntityManagerFactory
2021-04-03T18:02:12,607|[DEBUG] EMFactory - initializeing EntityManagerFactory
2021-04-03T18:02:12,607|[DEBUG] EMFactory - creating EntityManagerFactory
2021-04-03T18:02:12,613|[INFO ] LogHelper - HHH000204: Processing PersistenceUnitInfo [name: simplebloodbank-PU-test]
2021-04-03T18:02:12,618|[DEBUG] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@630f24a5
2021-04-03T18:02:12,618|[DEBUG] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@630f24a5
2021-04-03T18:02:12,618|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@630f24a5
2021-04-03T18:02:12,618|[DEBUG] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@34ceabf1
2021-04-03T18:02:12,618|[DEBUG] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@47861e3c
2021-04-03T18:02:12,618|[DEBUG] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@3f2fd933
2021-04-03T18:02:12,618|[DEBUG] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@546f0369
2021-04-03T18:02:12,618|[DEBUG] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@546f0369
2021-04-03T18:02:12,618|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@546f0369
2021-04-03T18:02:12,618|[DEBUG] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@6e32eea5
2021-04-03T18:02:12,618|[DEBUG] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@6e32eea5
2021-04-03T18:02:12,618|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6e32eea5
2021-04-03T18:02:12,618|[DEBUG] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2d45db20
2021-04-03T18:02:12,618|[DEBUG] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2d45db20
2021-04-03T18:02:12,618|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2d45db20
2021-04-03T18:02:12,618|[DEBUG] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@52bf434b
2021-04-03T18:02:12,618|[DEBUG] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@52bf434b
2021-04-03T18:02:12,618|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@52bf434b
2021-04-03T18:02:12,618|[DEBUG] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@563b9462
2021-04-03T18:02:12,618|[DEBUG] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@563b9462
2021-04-03T18:02:12,618|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@563b9462
2021-04-03T18:02:12,618|[DEBUG] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6ad51d91
2021-04-03T18:02:12,618|[DEBUG] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6ad51d91
2021-04-03T18:02:12,618|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6ad51d91
2021-04-03T18:02:12,618|[DEBUG] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@288c16a5
2021-04-03T18:02:12,618|[DEBUG] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@288c16a5
2021-04-03T18:02:12,618|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@288c16a5
2021-04-03T18:02:12,618|[DEBUG] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7540aa55
2021-04-03T18:02:12,618|[DEBUG] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7540aa55
2021-04-03T18:02:12,618|[DEBUG] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6815e19c
2021-04-03T18:02:12,618|[DEBUG] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6815e19c
2021-04-03T18:02:12,618|[DEBUG] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@2d66a5d3
2021-04-03T18:02:12,618|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@2d66a5d3
2021-04-03T18:02:12,618|[DEBUG] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@687fa4d0
2021-04-03T18:02:12,618|[DEBUG] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5bfa2801
2021-04-03T18:02:12,618|[DEBUG] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@25428bab
2021-04-03T18:02:12,618|[DEBUG] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@25428bab
2021-04-03T18:02:12,618|[DEBUG] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@1cfb035c
2021-04-03T18:02:12,618|[DEBUG] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@1cfb035c
2021-04-03T18:02:12,618|[DEBUG] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@1c8ab147
2021-04-03T18:02:12,619|[DEBUG] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@1c8ab147
2021-04-03T18:02:12,619|[DEBUG] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@157f284b
2021-04-03T18:02:12,619|[DEBUG] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@157f284b
2021-04-03T18:02:12,619|[DEBUG] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@639f7054
2021-04-03T18:02:12,619|[DEBUG] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@639f7054
2021-04-03T18:02:12,619|[DEBUG] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@13e59265
2021-04-03T18:02:12,619|[DEBUG] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@13e59265
2021-04-03T18:02:12,619|[DEBUG] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3d7c21b7
2021-04-03T18:02:12,619|[DEBUG] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3d7c21b7
2021-04-03T18:02:12,619|[DEBUG] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@58da1b27
2021-04-03T18:02:12,619|[DEBUG] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@58da1b27
2021-04-03T18:02:12,619|[DEBUG] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@129bc797
2021-04-03T18:02:12,619|[DEBUG] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@129bc797
2021-04-03T18:02:12,619|[DEBUG] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@38b65eb9
2021-04-03T18:02:12,619|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@38b65eb9
2021-04-03T18:02:12,619|[DEBUG] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@723493f2
2021-04-03T18:02:12,619|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@723493f2
2021-04-03T18:02:12,619|[DEBUG] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@2be33ac
2021-04-03T18:02:12,619|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2be33ac
2021-04-03T18:02:12,619|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2be33ac
2021-04-03T18:02:12,619|[DEBUG] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7892d7a7
2021-04-03T18:02:12,619|[DEBUG] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@704a0f9
2021-04-03T18:02:12,619|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@704a0f9
2021-04-03T18:02:12,619|[DEBUG] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@704a0f9
2021-04-03T18:02:12,619|[DEBUG] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@15cf663c
2021-04-03T18:02:12,619|[DEBUG] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@68317dc0
2021-04-03T18:02:12,619|[DEBUG] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@2c9e3083
2021-04-03T18:02:12,619|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2c9e3083
2021-04-03T18:02:12,619|[DEBUG] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@179eb386
2021-04-03T18:02:12,619|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@179eb386
2021-04-03T18:02:12,619|[DEBUG] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@70915da3
2021-04-03T18:02:12,619|[DEBUG] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@70915da3
2021-04-03T18:02:12,619|[DEBUG] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@3e5b32ca
2021-04-03T18:02:12,619|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3e5b32ca
2021-04-03T18:02:12,619|[DEBUG] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5d6d21e2
2021-04-03T18:02:12,619|[DEBUG] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5d6d21e2
2021-04-03T18:02:12,619|[DEBUG] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@39e67fbc
2021-04-03T18:02:12,619|[DEBUG] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@33260ecd
2021-04-03T18:02:12,619|[DEBUG] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@33260ecd
2021-04-03T18:02:12,619|[DEBUG] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@33260ecd
2021-04-03T18:02:12,620|[DEBUG] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@671f70bc
2021-04-03T18:02:12,620|[DEBUG] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@671f70bc
2021-04-03T18:02:12,620|[DEBUG] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@671f70bc
2021-04-03T18:02:12,620|[DEBUG] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@3e0d722f
2021-04-03T18:02:12,620|[DEBUG] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@7fab8e9a
2021-04-03T18:02:12,620|[DEBUG] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@251d3913
2021-04-03T18:02:12,620|[DEBUG] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@251d3913
2021-04-03T18:02:12,620|[DEBUG] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@251d3913
2021-04-03T18:02:12,620|[DEBUG] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@18211894
2021-04-03T18:02:12,620|[DEBUG] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@18211894
2021-04-03T18:02:12,620|[DEBUG] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@18211894
2021-04-03T18:02:12,620|[DEBUG] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@76cb6d16
2021-04-03T18:02:12,620|[DEBUG] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@3bd6ce4e
2021-04-03T18:02:12,620|[DEBUG] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@4f2a0651
2021-04-03T18:02:12,620|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4f2a0651
2021-04-03T18:02:12,620|[DEBUG] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@79f6e671
2021-04-03T18:02:12,620|[DEBUG] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@4c49471c
2021-04-03T18:02:12,620|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4c49471c
2021-04-03T18:02:12,620|[DEBUG] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@559ac87f
2021-04-03T18:02:12,620|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@559ac87f
2021-04-03T18:02:12,620|[DEBUG] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@10683f87
2021-04-03T18:02:12,620|[DEBUG] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2c3f9229
2021-04-03T18:02:12,620|[DEBUG] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@6d68cbf3
2021-04-03T18:02:12,620|[DEBUG] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@151cbba4
2021-04-03T18:02:12,620|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@151cbba4
2021-04-03T18:02:12,620|[DEBUG] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1b58b5f9
2021-04-03T18:02:12,620|[DEBUG] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@183c271e
2021-04-03T18:02:12,620|[DEBUG] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3b754b1a
2021-04-03T18:02:12,620|[DEBUG] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@16ee0c8f
2021-04-03T18:02:12,621|[DEBUG] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@484794d6
2021-04-03T18:02:12,621|[DEBUG] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@31ba5e17
2021-04-03T18:02:12,621|[DEBUG] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2006eea1
2021-04-03T18:02:12,621|[DEBUG] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@466a045a
]]></system-out>
  </testcase>
  <testcase name="testGetAccountWithName" classname="logic.AccountLogicTest" time="0.032">
    <error type="org.hibernate.service.spi.ServiceException"><![CDATA[org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
	at logic.AccountLogicTest.setUp(AccountLogicTest.java:56)
Caused by: org.hibernate.engine.jndi.JndiException: Unable to lookup JNDI name [java:comp/env/jdbc/SimpleBloodBank]
	at logic.AccountLogicTest.setUp(AccountLogicTest.java:56)
Caused by: javax.naming.NameNotFoundException: Name [comp/env/jdbc/SimpleBloodBank] is not bound in this Context. Unable to find [comp].
	at logic.AccountLogicTest.setUp(AccountLogicTest.java:56)
]]></error>
    <system-out><![CDATA[2021-04-03T18:02:12,643|[DEBUG] EMFactory - getting EntityManagerFactory
2021-04-03T18:02:12,643|[DEBUG] EMFactory - initializeing EntityManagerFactory
2021-04-03T18:02:12,643|[DEBUG] EMFactory - creating EntityManagerFactory
2021-04-03T18:02:12,648|[INFO ] LogHelper - HHH000204: Processing PersistenceUnitInfo [name: simplebloodbank-PU-test]
2021-04-03T18:02:12,652|[DEBUG] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@630f24a5
2021-04-03T18:02:12,652|[DEBUG] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@630f24a5
2021-04-03T18:02:12,652|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@630f24a5
2021-04-03T18:02:12,652|[DEBUG] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@34ceabf1
2021-04-03T18:02:12,652|[DEBUG] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@47861e3c
2021-04-03T18:02:12,652|[DEBUG] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@3f2fd933
2021-04-03T18:02:12,652|[DEBUG] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@546f0369
2021-04-03T18:02:12,652|[DEBUG] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@546f0369
2021-04-03T18:02:12,652|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@546f0369
2021-04-03T18:02:12,652|[DEBUG] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@6e32eea5
2021-04-03T18:02:12,652|[DEBUG] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@6e32eea5
2021-04-03T18:02:12,652|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6e32eea5
2021-04-03T18:02:12,652|[DEBUG] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2d45db20
2021-04-03T18:02:12,652|[DEBUG] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@2d45db20
2021-04-03T18:02:12,652|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2d45db20
2021-04-03T18:02:12,653|[DEBUG] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@52bf434b
2021-04-03T18:02:12,653|[DEBUG] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@52bf434b
2021-04-03T18:02:12,653|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@52bf434b
2021-04-03T18:02:12,653|[DEBUG] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@563b9462
2021-04-03T18:02:12,653|[DEBUG] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@563b9462
2021-04-03T18:02:12,653|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@563b9462
2021-04-03T18:02:12,653|[DEBUG] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6ad51d91
2021-04-03T18:02:12,653|[DEBUG] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6ad51d91
2021-04-03T18:02:12,653|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6ad51d91
2021-04-03T18:02:12,653|[DEBUG] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@288c16a5
2021-04-03T18:02:12,653|[DEBUG] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@288c16a5
2021-04-03T18:02:12,653|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@288c16a5
2021-04-03T18:02:12,653|[DEBUG] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7540aa55
2021-04-03T18:02:12,653|[DEBUG] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7540aa55
2021-04-03T18:02:12,653|[DEBUG] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6815e19c
2021-04-03T18:02:12,653|[DEBUG] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6815e19c
2021-04-03T18:02:12,653|[DEBUG] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@2d66a5d3
2021-04-03T18:02:12,653|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@2d66a5d3
2021-04-03T18:02:12,653|[DEBUG] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@687fa4d0
2021-04-03T18:02:12,653|[DEBUG] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5bfa2801
2021-04-03T18:02:12,653|[DEBUG] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@25428bab
2021-04-03T18:02:12,653|[DEBUG] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@25428bab
2021-04-03T18:02:12,653|[DEBUG] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@1cfb035c
2021-04-03T18:02:12,653|[DEBUG] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@1cfb035c
2021-04-03T18:02:12,653|[DEBUG] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@1c8ab147
2021-04-03T18:02:12,653|[DEBUG] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@1c8ab147
2021-04-03T18:02:12,654|[DEBUG] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@157f284b
2021-04-03T18:02:12,654|[DEBUG] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@157f284b
2021-04-03T18:02:12,654|[DEBUG] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@639f7054
2021-04-03T18:02:12,654|[DEBUG] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@639f7054
2021-04-03T18:02:12,654|[DEBUG] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@13e59265
2021-04-03T18:02:12,654|[DEBUG] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@13e59265
2021-04-03T18:02:12,654|[DEBUG] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3d7c21b7
2021-04-03T18:02:12,654|[DEBUG] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3d7c21b7
2021-04-03T18:02:12,654|[DEBUG] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@58da1b27
2021-04-03T18:02:12,654|[DEBUG] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@58da1b27
2021-04-03T18:02:12,654|[DEBUG] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@129bc797
2021-04-03T18:02:12,654|[DEBUG] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@129bc797
2021-04-03T18:02:12,654|[DEBUG] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@38b65eb9
2021-04-03T18:02:12,654|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@38b65eb9
2021-04-03T18:02:12,654|[DEBUG] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@723493f2
2021-04-03T18:02:12,654|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@723493f2
2021-04-03T18:02:12,654|[DEBUG] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@2be33ac
2021-04-03T18:02:12,654|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2be33ac
2021-04-03T18:02:12,654|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2be33ac
2021-04-03T18:02:12,654|[DEBUG] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7892d7a7
2021-04-03T18:02:12,654|[DEBUG] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@704a0f9
2021-04-03T18:02:12,654|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@704a0f9
2021-04-03T18:02:12,654|[DEBUG] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@704a0f9
2021-04-03T18:02:12,654|[DEBUG] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@15cf663c
2021-04-03T18:02:12,654|[DEBUG] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@68317dc0
2021-04-03T18:02:12,654|[DEBUG] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@2c9e3083
2021-04-03T18:02:12,654|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2c9e3083
2021-04-03T18:02:12,654|[DEBUG] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@179eb386
2021-04-03T18:02:12,654|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@179eb386
2021-04-03T18:02:12,654|[DEBUG] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@70915da3
2021-04-03T18:02:12,654|[DEBUG] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@70915da3
2021-04-03T18:02:12,654|[DEBUG] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@3e5b32ca
2021-04-03T18:02:12,655|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3e5b32ca
2021-04-03T18:02:12,655|[DEBUG] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5d6d21e2
2021-04-03T18:02:12,655|[DEBUG] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5d6d21e2
2021-04-03T18:02:12,655|[DEBUG] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@39e67fbc
2021-04-03T18:02:12,655|[DEBUG] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@33260ecd
2021-04-03T18:02:12,655|[DEBUG] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@33260ecd
2021-04-03T18:02:12,655|[DEBUG] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@33260ecd
2021-04-03T18:02:12,655|[DEBUG] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@671f70bc
2021-04-03T18:02:12,655|[DEBUG] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@671f70bc
2021-04-03T18:02:12,655|[DEBUG] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@671f70bc
2021-04-03T18:02:12,655|[DEBUG] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@3e0d722f
2021-04-03T18:02:12,655|[DEBUG] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@7fab8e9a
2021-04-03T18:02:12,655|[DEBUG] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@251d3913
2021-04-03T18:02:12,655|[DEBUG] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@251d3913
2021-04-03T18:02:12,655|[DEBUG] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@251d3913
2021-04-03T18:02:12,655|[DEBUG] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@18211894
2021-04-03T18:02:12,655|[DEBUG] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@18211894
2021-04-03T18:02:12,655|[DEBUG] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@18211894
2021-04-03T18:02:12,655|[DEBUG] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@76cb6d16
2021-04-03T18:02:12,655|[DEBUG] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@3bd6ce4e
2021-04-03T18:02:12,655|[DEBUG] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@4f2a0651
2021-04-03T18:02:12,655|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4f2a0651
2021-04-03T18:02:12,655|[DEBUG] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@79f6e671
2021-04-03T18:02:12,655|[DEBUG] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@4c49471c
2021-04-03T18:02:12,655|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4c49471c
2021-04-03T18:02:12,655|[DEBUG] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@559ac87f
2021-04-03T18:02:12,655|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@559ac87f
2021-04-03T18:02:12,655|[DEBUG] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@10683f87
2021-04-03T18:02:12,655|[DEBUG] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2c3f9229
2021-04-03T18:02:12,655|[DEBUG] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@6d68cbf3
2021-04-03T18:02:12,655|[DEBUG] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@151cbba4
2021-04-03T18:02:12,655|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@151cbba4
2021-04-03T18:02:12,655|[DEBUG] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@47afb11c
2021-04-03T18:02:12,655|[DEBUG] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3191ba8b
2021-04-03T18:02:12,656|[DEBUG] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@48505cf2
2021-04-03T18:02:12,656|[DEBUG] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5b8bc51b
2021-04-03T18:02:12,656|[DEBUG] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6196a827
2021-04-03T18:02:12,656|[DEBUG] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5def137c
2021-04-03T18:02:12,656|[DEBUG] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@179273ff
2021-04-03T18:02:12,656|[DEBUG] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@12b4cf0b
]]></system-out>
  </testcase>
</testsuite>