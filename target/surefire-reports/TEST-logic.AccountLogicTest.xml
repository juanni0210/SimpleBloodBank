<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report-3.0.xsd" version="3.0" name="logic.AccountLogicTest" time="6.575" tests="16" errors="16" skipped="0" failures="0">
  <properties>
    <property name="sun.desktop" value="windows"/>
    <property name="awt.toolkit" value="sun.awt.windows.WToolkit"/>
    <property name="netbeans.deploy" value="true"/>
    <property name="java.specification.version" value="11"/>
    <property name="sun.cpu.isalist" value="amd64"/>
    <property name="sun.jnu.encoding" value="Cp1252"/>
    <property name="java.class.path" value="D:\OneDrive - Algonquin College\Computer Programming\dev\Level 3\SimpleBloodBank-Skeleton\target\test-classes;D:\OneDrive - Algonquin College\Computer Programming\dev\Level 3\SimpleBloodBank-Skeleton\target\classes;C:\Users\shado\.m2\repository\org\junit\jupiter\junit-jupiter\5.7.0\junit-jupiter-5.7.0.jar;C:\Users\shado\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.7.0\junit-jupiter-api-5.7.0.jar;C:\Users\shado\.m2\repository\org\apiguardian\apiguardian-api\1.1.0\apiguardian-api-1.1.0.jar;C:\Users\shado\.m2\repository\org\opentest4j\opentest4j\1.2.0\opentest4j-1.2.0.jar;C:\Users\shado\.m2\repository\org\junit\platform\junit-platform-commons\1.7.0\junit-platform-commons-1.7.0.jar;C:\Users\shado\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.7.0\junit-jupiter-params-5.7.0.jar;C:\Users\shado\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.7.0\junit-jupiter-engine-5.7.0.jar;C:\Users\shado\.m2\repository\org\junit\platform\junit-platform-engine\1.7.0\junit-platform-engine-1.7.0.jar;C:\Users\shado\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\shado\.m2\repository\org\hamcrest\hamcrest-library\2.2\hamcrest-library-2.2.jar;C:\Users\shado\.m2\repository\org\hamcrest\hamcrest-core\2.2\hamcrest-core-2.2.jar;C:\Users\shado\.m2\repository\org\apache\logging\log4j\log4j-api\2.14.0\log4j-api-2.14.0.jar;C:\Users\shado\.m2\repository\org\apache\logging\log4j\log4j-core\2.14.0\log4j-core-2.14.0.jar;C:\Users\shado\.m2\repository\org\hibernate\hibernate-core\5.4.27.Final\hibernate-core-5.4.27.Final.jar;C:\Users\shado\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\shado\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\shado\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\shado\.m2\repository\net\bytebuddy\byte-buddy\1.10.17\byte-buddy-1.10.17.jar;C:\Users\shado\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\shado\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\shado\.m2\repository\org\jboss\jandex\2.1.3.Final\jandex-2.1.3.Final.jar;C:\Users\shado\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\shado\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\shado\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\shado\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\shado\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\shado\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\shado\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\shado\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\shado\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\shado\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\shado\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\9.0.44\tomcat-embed-core-9.0.44.jar;C:\Users\shado\.m2\repository\org\apache\tomcat\tomcat-annotations-api\9.0.44\tomcat-annotations-api-9.0.44.jar;C:\Users\shado\.m2\repository\org\apache\tomcat\embed\tomcat-embed-jasper\9.0.44\tomcat-embed-jasper-9.0.44.jar;C:\Users\shado\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\9.0.44\tomcat-embed-el-9.0.44.jar;C:\Users\shado\.m2\repository\org\eclipse\jdt\ecj\3.18.0\ecj-3.18.0.jar;C:\Users\shado\.m2\repository\org\apache\tomcat\tomcat-jdbc\9.0.44\tomcat-jdbc-9.0.44.jar;C:\Users\shado\.m2\repository\org\apache\tomcat\tomcat-juli\9.0.44\tomcat-juli-9.0.44.jar;C:\Users\shado\.m2\repository\jakarta\platform\jakarta.jakartaee-api\8.0.0\jakarta.jakartaee-api-8.0.0.jar;C:\Users\shado\.m2\repository\org\glassfish\web\jakarta.servlet.jsp.jstl\1.2.6\jakarta.servlet.jsp.jstl-1.2.6.jar;C:\Users\shado\.m2\repository\jakarta\servlet\jsp\jstl\jakarta.servlet.jsp.jstl-api\1.2.4\jakarta.servlet.jsp.jstl-api-1.2.4.jar;C:\Users\shado\.m2\repository\jakarta\servlet\jakarta.servlet-api\4.0.2\jakarta.servlet-api-4.0.2.jar;C:\Users\shado\.m2\repository\jakarta\el\jakarta.el-api\3.0.2\jakarta.el-api-3.0.2.jar;C:\Users\shado\.m2\repository\mysql\mysql-connector-java\8.0.23\mysql-connector-java-8.0.23.jar;C:\Users\shado\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;"/>
    <property name="java.vm.vendor" value="AdoptOpenJDK"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="user.variant" value=""/>
    <property name="catalina.useNaming" value="true"/>
    <property name="java.vendor.url" value="https://adoptopenjdk.net/"/>
    <property name="user.timezone" value="America/New_York"/>
    <property name="java.vm.specification.version" value="11"/>
    <property name="os.name" value="Windows 10"/>
    <property name="user.country" value="US"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="sun.boot.library.path" value="C:\Program Files\AdoptOpenJDK\jdk-11.0.9.101-hotspot\bin"/>
    <property name="sun.java.command" value="C:\Users\shado\AppData\Local\Temp\surefire2634648372586207332\surefirebooter8030794184479936025.jar C:\Users\shado\AppData\Local\Temp\surefire2634648372586207332 2021-03-15T11-04-15_481-jvmRun1 surefire11226172530123377279tmp surefire_01744618871584167749tmp"/>
    <property name="jdk.debug" value="release"/>
    <property name="surefire.test.class.path" value="D:\OneDrive - Algonquin College\Computer Programming\dev\Level 3\SimpleBloodBank-Skeleton\target\test-classes;D:\OneDrive - Algonquin College\Computer Programming\dev\Level 3\SimpleBloodBank-Skeleton\target\classes;C:\Users\shado\.m2\repository\org\junit\jupiter\junit-jupiter\5.7.0\junit-jupiter-5.7.0.jar;C:\Users\shado\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.7.0\junit-jupiter-api-5.7.0.jar;C:\Users\shado\.m2\repository\org\apiguardian\apiguardian-api\1.1.0\apiguardian-api-1.1.0.jar;C:\Users\shado\.m2\repository\org\opentest4j\opentest4j\1.2.0\opentest4j-1.2.0.jar;C:\Users\shado\.m2\repository\org\junit\platform\junit-platform-commons\1.7.0\junit-platform-commons-1.7.0.jar;C:\Users\shado\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.7.0\junit-jupiter-params-5.7.0.jar;C:\Users\shado\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.7.0\junit-jupiter-engine-5.7.0.jar;C:\Users\shado\.m2\repository\org\junit\platform\junit-platform-engine\1.7.0\junit-platform-engine-1.7.0.jar;C:\Users\shado\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\shado\.m2\repository\org\hamcrest\hamcrest-library\2.2\hamcrest-library-2.2.jar;C:\Users\shado\.m2\repository\org\hamcrest\hamcrest-core\2.2\hamcrest-core-2.2.jar;C:\Users\shado\.m2\repository\org\apache\logging\log4j\log4j-api\2.14.0\log4j-api-2.14.0.jar;C:\Users\shado\.m2\repository\org\apache\logging\log4j\log4j-core\2.14.0\log4j-core-2.14.0.jar;C:\Users\shado\.m2\repository\org\hibernate\hibernate-core\5.4.27.Final\hibernate-core-5.4.27.Final.jar;C:\Users\shado\.m2\repository\org\jboss\logging\jboss-logging\3.4.1.Final\jboss-logging-3.4.1.Final.jar;C:\Users\shado\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\shado\.m2\repository\org\javassist\javassist\3.27.0-GA\javassist-3.27.0-GA.jar;C:\Users\shado\.m2\repository\net\bytebuddy\byte-buddy\1.10.17\byte-buddy-1.10.17.jar;C:\Users\shado\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\shado\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\shado\.m2\repository\org\jboss\jandex\2.1.3.Final\jandex-2.1.3.Final.jar;C:\Users\shado\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\shado\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\shado\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\shado\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\shado\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\shado\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\shado\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\shado\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\shado\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\shado\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\shado\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\9.0.44\tomcat-embed-core-9.0.44.jar;C:\Users\shado\.m2\repository\org\apache\tomcat\tomcat-annotations-api\9.0.44\tomcat-annotations-api-9.0.44.jar;C:\Users\shado\.m2\repository\org\apache\tomcat\embed\tomcat-embed-jasper\9.0.44\tomcat-embed-jasper-9.0.44.jar;C:\Users\shado\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\9.0.44\tomcat-embed-el-9.0.44.jar;C:\Users\shado\.m2\repository\org\eclipse\jdt\ecj\3.18.0\ecj-3.18.0.jar;C:\Users\shado\.m2\repository\org\apache\tomcat\tomcat-jdbc\9.0.44\tomcat-jdbc-9.0.44.jar;C:\Users\shado\.m2\repository\org\apache\tomcat\tomcat-juli\9.0.44\tomcat-juli-9.0.44.jar;C:\Users\shado\.m2\repository\jakarta\platform\jakarta.jakartaee-api\8.0.0\jakarta.jakartaee-api-8.0.0.jar;C:\Users\shado\.m2\repository\org\glassfish\web\jakarta.servlet.jsp.jstl\1.2.6\jakarta.servlet.jsp.jstl-1.2.6.jar;C:\Users\shado\.m2\repository\jakarta\servlet\jsp\jstl\jakarta.servlet.jsp.jstl-api\1.2.4\jakarta.servlet.jsp.jstl-api-1.2.4.jar;C:\Users\shado\.m2\repository\jakarta\servlet\jakarta.servlet-api\4.0.2\jakarta.servlet-api-4.0.2.jar;C:\Users\shado\.m2\repository\jakarta\el\jakarta.el-api\3.0.2\jakarta.el-api-3.0.2.jar;C:\Users\shado\.m2\repository\mysql\mysql-connector-java\8.0.23\mysql-connector-java-8.0.23.jar;C:\Users\shado\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="C:\Users\shado"/>
    <property name="user.language" value="en"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.naming.factory.url.pkgs" value="org.apache.naming"/>
    <property name="java.version.date" value="2020-11-04"/>
    <property name="java.home" value="C:\Program Files\AdoptOpenJDK\jdk-11.0.9.101-hotspot"/>
    <property name="file.separator" value="\"/>
    <property name="basedir" value="D:\OneDrive - Algonquin College\Computer Programming\dev\Level 3\SimpleBloodBank-Skeleton"/>
    <property name="java.vm.compressedOopsMode" value="32-bit"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.awt.graphicsenv" value="sun.awt.Win32GraphicsEnvironment"/>
    <property name="surefire.real.class.path" value="C:\Users\shado\AppData\Local\Temp\surefire2634648372586207332\surefirebooter8030794184479936025.jar"/>
    <property name="user.script" value=""/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="java.runtime.version" value="11.0.9.1+1"/>
    <property name="java.naming.factory.initial" value="org.apache.naming.java.javaURLContextFactory"/>
    <property name="user.name" value="shado"/>
    <property name="path.separator" value=";"/>
    <property name="os.version" value="10.0"/>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="java.vendor.version" value="AdoptOpenJDK"/>
    <property name="maven.ext.class.path" value="C:\Program Files\NetBeans-12.0\netbeans\java\maven-nblib\netbeans-eventspy.jar"/>
    <property name="localRepository" value="C:\Users\shado\.m2\repository"/>
    <property name="java.vendor.url.bug" value="https://github.com/AdoptOpenJDK/openjdk-support/issues"/>
    <property name="java.io.tmpdir" value="C:\Users\shado\AppData\Local\Temp\"/>
    <property name="catalina.home" value="D:\OneDrive - Algonquin College\Computer Programming\dev\Level 3\SimpleBloodBank-Skeleton\tomcat.8080"/>
    <property name="java.version" value="11.0.9.1"/>
    <property name="user.dir" value="D:\OneDrive - Algonquin College\Computer Programming\dev\Level 3\SimpleBloodBank-Skeleton"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="java.awt.printerjob" value="sun.awt.windows.WPrinterJob"/>
    <property name="sun.os.patch.level" value=""/>
    <property name="catalina.base" value="D:\OneDrive - Algonquin College\Computer Programming\dev\Level 3\SimpleBloodBank-Skeleton\tomcat.8080"/>
    <property name="java.library.path" value="C:\Program Files\AdoptOpenJDK\jdk-11.0.9.101-hotspot\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\Java\javafx-sdk-11.0.2\bin;C:\oraclexe\app\oracle\product\11.2.0\server\bin;C:\Program Files\AdoptOpenJDK\jdk-11.0.9.101-hotspot\\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Microsoft VS Code\bin;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files (x86)\dotnet\;D:\Program Files\pgmodeler;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;D:\Program Files (x86)\Brackets\command;C:\Program Files\Git\cmd;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\DTS\Binn\;C:\Users\shado\AppData\Local\Microsoft\WindowsApps;;."/>
    <property name="java.vm.info" value="mixed mode"/>
    <property name="java.vendor" value="AdoptOpenJDK"/>
    <property name="java.vm.version" value="11.0.9.1+1"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="java.class.version" value="55.0"/>
  </properties>
  <testcase name="testCreateEntity" classname="logic.AccountLogicTest" time="0.092">
    <error type="org.hibernate.service.spi.ServiceException"><![CDATA[org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
	at logic.AccountLogicTest.setUp(AccountLogicTest.java:56)
Caused by: org.hibernate.engine.jndi.JndiException: Unable to lookup JNDI name [java:comp/env/jdbc/SimpleBloodBank]
	at logic.AccountLogicTest.setUp(AccountLogicTest.java:56)
Caused by: javax.naming.NameNotFoundException: Name [comp/env/jdbc/SimpleBloodBank] is not bound in this Context. Unable to find [comp].
	at logic.AccountLogicTest.setUp(AccountLogicTest.java:56)
]]></error>
    <system-out><![CDATA[2021-03-15T11:04:21,701|[DEBUG] ServletListener - Initializing EMF
2021-03-15T11:04:21,713|[DEBUG] EMFactory - initializeing EntityManagerFactory
2021-03-15T11:04:21,713|[DEBUG] EMFactory - creating EntityManagerFactory
2021-03-15T11:04:21,746|[DEBUG] logging - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2021-03-15T11:04:21,931|[INFO ] LogHelper - HHH000204: Processing PersistenceUnitInfo [name: simplebloodbank-PU-test]
2021-03-15T11:04:22,076|[INFO ] Version - HHH000412: Hibernate ORM core version 5.4.27.Final
2021-03-15T11:04:22,375|[INFO ] Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2021-03-15T11:04:22,430|[DEBUG] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@59c4921f
2021-03-15T11:04:22,431|[DEBUG] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@59c4921f
2021-03-15T11:04:22,431|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@59c4921f
2021-03-15T11:04:22,432|[DEBUG] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7f2e2ae6
2021-03-15T11:04:22,433|[DEBUG] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@3860542a
2021-03-15T11:04:22,434|[DEBUG] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@6fb07db6
2021-03-15T11:04:22,436|[DEBUG] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@6cd76b55
2021-03-15T11:04:22,437|[DEBUG] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@6cd76b55
2021-03-15T11:04:22,437|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6cd76b55
2021-03-15T11:04:22,439|[DEBUG] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@1124fd8
2021-03-15T11:04:22,439|[DEBUG] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@1124fd8
2021-03-15T11:04:22,439|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1124fd8
2021-03-15T11:04:22,441|[DEBUG] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@283730de
2021-03-15T11:04:22,441|[DEBUG] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@283730de
2021-03-15T11:04:22,442|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@283730de
2021-03-15T11:04:22,443|[DEBUG] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@57212116
2021-03-15T11:04:22,443|[DEBUG] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@57212116
2021-03-15T11:04:22,443|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@57212116
2021-03-15T11:04:22,444|[DEBUG] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@17b17fa8
2021-03-15T11:04:22,445|[DEBUG] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@17b17fa8
2021-03-15T11:04:22,445|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@17b17fa8
2021-03-15T11:04:22,446|[DEBUG] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@463b865b
2021-03-15T11:04:22,446|[DEBUG] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@463b865b
2021-03-15T11:04:22,446|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@463b865b
2021-03-15T11:04:22,448|[DEBUG] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@4fc2e703
2021-03-15T11:04:22,448|[DEBUG] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@4fc2e703
2021-03-15T11:04:22,449|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4fc2e703
2021-03-15T11:04:22,451|[DEBUG] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4ca3923
2021-03-15T11:04:22,451|[DEBUG] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4ca3923
2021-03-15T11:04:22,452|[DEBUG] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6d88a3f4
2021-03-15T11:04:22,452|[DEBUG] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6d88a3f4
2021-03-15T11:04:22,453|[DEBUG] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@5882ff51
2021-03-15T11:04:22,453|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@5882ff51
2021-03-15T11:04:22,454|[DEBUG] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4c5afa2d
2021-03-15T11:04:22,454|[DEBUG] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3177221b
2021-03-15T11:04:22,456|[DEBUG] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@654b9f0
2021-03-15T11:04:22,456|[DEBUG] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@654b9f0
2021-03-15T11:04:22,457|[DEBUG] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@533c62d0
2021-03-15T11:04:22,458|[DEBUG] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@533c62d0
2021-03-15T11:04:22,464|[DEBUG] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@7c654cfc
2021-03-15T11:04:22,464|[DEBUG] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@7c654cfc
2021-03-15T11:04:22,466|[DEBUG] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@74d41fcf
2021-03-15T11:04:22,466|[DEBUG] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@74d41fcf
2021-03-15T11:04:22,467|[DEBUG] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@10d28ee2
2021-03-15T11:04:22,467|[DEBUG] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@10d28ee2
2021-03-15T11:04:22,468|[DEBUG] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1355d2a0
2021-03-15T11:04:22,469|[DEBUG] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1355d2a0
2021-03-15T11:04:22,470|[DEBUG] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7773d139
2021-03-15T11:04:22,470|[DEBUG] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7773d139
2021-03-15T11:04:22,472|[DEBUG] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1f0b2ffb
2021-03-15T11:04:22,472|[DEBUG] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1f0b2ffb
2021-03-15T11:04:22,474|[DEBUG] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3f2fd933
2021-03-15T11:04:22,474|[DEBUG] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3f2fd933
2021-03-15T11:04:22,478|[DEBUG] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@77d5a3ee
2021-03-15T11:04:22,478|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@77d5a3ee
2021-03-15T11:04:22,480|[DEBUG] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@5095f89a
2021-03-15T11:04:22,480|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5095f89a
2021-03-15T11:04:22,482|[DEBUG] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@15c8bb25
2021-03-15T11:04:22,482|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@15c8bb25
2021-03-15T11:04:22,482|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@15c8bb25
2021-03-15T11:04:22,484|[DEBUG] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@34b4f6c3
2021-03-15T11:04:22,488|[DEBUG] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@2a04a440
2021-03-15T11:04:22,488|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2a04a440
2021-03-15T11:04:22,488|[DEBUG] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2a04a440
2021-03-15T11:04:22,489|[DEBUG] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7f3964b0
2021-03-15T11:04:22,491|[DEBUG] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@dc46916
2021-03-15T11:04:22,492|[DEBUG] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@faa592b
2021-03-15T11:04:22,492|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@faa592b
2021-03-15T11:04:22,494|[DEBUG] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@7df468f6
2021-03-15T11:04:22,495|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7df468f6
2021-03-15T11:04:22,497|[DEBUG] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@35f9c37c
2021-03-15T11:04:22,498|[DEBUG] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@35f9c37c
2021-03-15T11:04:22,499|[DEBUG] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@5bfa2801
2021-03-15T11:04:22,499|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5bfa2801
2021-03-15T11:04:22,500|[DEBUG] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@25428bab
2021-03-15T11:04:22,500|[DEBUG] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@25428bab
2021-03-15T11:04:22,500|[DEBUG] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@418e1cd6
2021-03-15T11:04:22,502|[DEBUG] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@5ef99f75
2021-03-15T11:04:22,502|[DEBUG] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@5ef99f75
2021-03-15T11:04:22,502|[DEBUG] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@5ef99f75
2021-03-15T11:04:22,505|[DEBUG] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1b438ec
2021-03-15T11:04:22,505|[DEBUG] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1b438ec
2021-03-15T11:04:22,505|[DEBUG] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1b438ec
2021-03-15T11:04:22,506|[DEBUG] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@4f241437
2021-03-15T11:04:22,507|[DEBUG] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@58e48d9
2021-03-15T11:04:22,509|[DEBUG] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@27c243a3
2021-03-15T11:04:22,509|[DEBUG] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@27c243a3
2021-03-15T11:04:22,509|[DEBUG] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@27c243a3
2021-03-15T11:04:22,511|[DEBUG] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@da87122
2021-03-15T11:04:22,511|[DEBUG] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@da87122
2021-03-15T11:04:22,511|[DEBUG] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@da87122
2021-03-15T11:04:22,512|[DEBUG] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@2e47ec5e
2021-03-15T11:04:22,512|[DEBUG] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@d3e9b94
2021-03-15T11:04:22,514|[DEBUG] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@4c3133a1
2021-03-15T11:04:22,514|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4c3133a1
2021-03-15T11:04:22,514|[DEBUG] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@26f6fbbd
2021-03-15T11:04:22,517|[DEBUG] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@3fa27158
2021-03-15T11:04:22,517|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3fa27158
2021-03-15T11:04:22,519|[DEBUG] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@58da1b27
2021-03-15T11:04:22,519|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@58da1b27
2021-03-15T11:04:22,520|[DEBUG] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@29862f60
2021-03-15T11:04:22,520|[DEBUG] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@644acaff
2021-03-15T11:04:22,523|[DEBUG] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@771047b4
2021-03-15T11:04:22,526|[DEBUG] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@677f1963
2021-03-15T11:04:22,527|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@677f1963
2021-03-15T11:04:22,527|[DEBUG] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2be33ac
2021-03-15T11:04:22,527|[DEBUG] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@73d8f219
2021-03-15T11:04:22,527|[DEBUG] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3a4dea70
2021-03-15T11:04:22,527|[DEBUG] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@b42a630
2021-03-15T11:04:22,527|[DEBUG] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7892d7a7
2021-03-15T11:04:22,527|[DEBUG] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4ceeba96
2021-03-15T11:04:22,527|[DEBUG] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@19a5d711
2021-03-15T11:04:22,527|[DEBUG] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7c89133
2021-03-15T11:04:23,224|[DEBUG] ServletListener - Destroying EMF
2021-03-15T11:04:23,224|[DEBUG] EMFactory - closing EntityManagerFactory
2021-03-15T11:04:23,224|[DEBUG] ServletListener - EMF Destroyed
2021-03-15T11:04:23,263|[DEBUG] EMFactory - getting EntityManagerFactory
2021-03-15T11:04:23,263|[DEBUG] EMFactory - initializeing EntityManagerFactory
2021-03-15T11:04:23,263|[DEBUG] EMFactory - creating EntityManagerFactory
2021-03-15T11:04:23,275|[INFO ] LogHelper - HHH000204: Processing PersistenceUnitInfo [name: simplebloodbank-PU-test]
2021-03-15T11:04:23,281|[DEBUG] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@59c4921f
2021-03-15T11:04:23,282|[DEBUG] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@59c4921f
2021-03-15T11:04:23,282|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@59c4921f
2021-03-15T11:04:23,282|[DEBUG] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7f2e2ae6
2021-03-15T11:04:23,282|[DEBUG] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@3860542a
2021-03-15T11:04:23,283|[DEBUG] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@6fb07db6
2021-03-15T11:04:23,283|[DEBUG] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@6cd76b55
2021-03-15T11:04:23,283|[DEBUG] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@6cd76b55
2021-03-15T11:04:23,283|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6cd76b55
2021-03-15T11:04:23,283|[DEBUG] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@1124fd8
2021-03-15T11:04:23,283|[DEBUG] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@1124fd8
2021-03-15T11:04:23,283|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1124fd8
2021-03-15T11:04:23,283|[DEBUG] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@283730de
2021-03-15T11:04:23,284|[DEBUG] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@283730de
2021-03-15T11:04:23,284|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@283730de
2021-03-15T11:04:23,284|[DEBUG] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@57212116
2021-03-15T11:04:23,284|[DEBUG] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@57212116
2021-03-15T11:04:23,284|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@57212116
2021-03-15T11:04:23,284|[DEBUG] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@17b17fa8
2021-03-15T11:04:23,284|[DEBUG] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@17b17fa8
2021-03-15T11:04:23,284|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@17b17fa8
2021-03-15T11:04:23,284|[DEBUG] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@463b865b
2021-03-15T11:04:23,285|[DEBUG] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@463b865b
2021-03-15T11:04:23,285|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@463b865b
2021-03-15T11:04:23,285|[DEBUG] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@4fc2e703
2021-03-15T11:04:23,285|[DEBUG] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@4fc2e703
2021-03-15T11:04:23,285|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4fc2e703
2021-03-15T11:04:23,285|[DEBUG] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4ca3923
2021-03-15T11:04:23,285|[DEBUG] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4ca3923
2021-03-15T11:04:23,285|[DEBUG] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6d88a3f4
2021-03-15T11:04:23,285|[DEBUG] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6d88a3f4
2021-03-15T11:04:23,286|[DEBUG] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@5882ff51
2021-03-15T11:04:23,286|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@5882ff51
2021-03-15T11:04:23,286|[DEBUG] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4c5afa2d
2021-03-15T11:04:23,286|[DEBUG] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3177221b
2021-03-15T11:04:23,286|[DEBUG] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@654b9f0
2021-03-15T11:04:23,286|[DEBUG] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@654b9f0
2021-03-15T11:04:23,287|[DEBUG] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@533c62d0
2021-03-15T11:04:23,287|[DEBUG] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@533c62d0
2021-03-15T11:04:23,287|[DEBUG] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@7c654cfc
2021-03-15T11:04:23,287|[DEBUG] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@7c654cfc
2021-03-15T11:04:23,287|[DEBUG] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@74d41fcf
2021-03-15T11:04:23,288|[DEBUG] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@74d41fcf
2021-03-15T11:04:23,288|[DEBUG] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@10d28ee2
2021-03-15T11:04:23,288|[DEBUG] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@10d28ee2
2021-03-15T11:04:23,288|[DEBUG] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1355d2a0
2021-03-15T11:04:23,288|[DEBUG] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1355d2a0
2021-03-15T11:04:23,288|[DEBUG] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7773d139
2021-03-15T11:04:23,288|[DEBUG] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7773d139
2021-03-15T11:04:23,288|[DEBUG] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1f0b2ffb
2021-03-15T11:04:23,288|[DEBUG] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1f0b2ffb
2021-03-15T11:04:23,289|[DEBUG] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3f2fd933
2021-03-15T11:04:23,289|[DEBUG] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3f2fd933
2021-03-15T11:04:23,289|[DEBUG] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@77d5a3ee
2021-03-15T11:04:23,289|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@77d5a3ee
2021-03-15T11:04:23,289|[DEBUG] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@5095f89a
2021-03-15T11:04:23,289|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5095f89a
2021-03-15T11:04:23,289|[DEBUG] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@15c8bb25
2021-03-15T11:04:23,290|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@15c8bb25
2021-03-15T11:04:23,290|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@15c8bb25
2021-03-15T11:04:23,290|[DEBUG] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@34b4f6c3
2021-03-15T11:04:23,290|[DEBUG] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@2a04a440
2021-03-15T11:04:23,290|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2a04a440
2021-03-15T11:04:23,290|[DEBUG] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2a04a440
2021-03-15T11:04:23,290|[DEBUG] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7f3964b0
2021-03-15T11:04:23,290|[DEBUG] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@dc46916
2021-03-15T11:04:23,290|[DEBUG] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@faa592b
2021-03-15T11:04:23,291|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@faa592b
2021-03-15T11:04:23,291|[DEBUG] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@7df468f6
2021-03-15T11:04:23,291|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7df468f6
2021-03-15T11:04:23,291|[DEBUG] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@35f9c37c
2021-03-15T11:04:23,291|[DEBUG] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@35f9c37c
2021-03-15T11:04:23,291|[DEBUG] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@5bfa2801
2021-03-15T11:04:23,291|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5bfa2801
2021-03-15T11:04:23,291|[DEBUG] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@25428bab
2021-03-15T11:04:23,292|[DEBUG] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@25428bab
2021-03-15T11:04:23,292|[DEBUG] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@418e1cd6
2021-03-15T11:04:23,292|[DEBUG] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@5ef99f75
2021-03-15T11:04:23,292|[DEBUG] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@5ef99f75
2021-03-15T11:04:23,292|[DEBUG] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@5ef99f75
2021-03-15T11:04:23,292|[DEBUG] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1b438ec
2021-03-15T11:04:23,292|[DEBUG] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1b438ec
2021-03-15T11:04:23,292|[DEBUG] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1b438ec
2021-03-15T11:04:23,292|[DEBUG] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@4f241437
2021-03-15T11:04:23,292|[DEBUG] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@58e48d9
2021-03-15T11:04:23,292|[DEBUG] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@27c243a3
2021-03-15T11:04:23,292|[DEBUG] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@27c243a3
2021-03-15T11:04:23,293|[DEBUG] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@27c243a3
2021-03-15T11:04:23,293|[DEBUG] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@da87122
2021-03-15T11:04:23,293|[DEBUG] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@da87122
2021-03-15T11:04:23,293|[DEBUG] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@da87122
2021-03-15T11:04:23,293|[DEBUG] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@2e47ec5e
2021-03-15T11:04:23,293|[DEBUG] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@d3e9b94
2021-03-15T11:04:23,293|[DEBUG] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@4c3133a1
2021-03-15T11:04:23,293|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4c3133a1
2021-03-15T11:04:23,293|[DEBUG] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@26f6fbbd
2021-03-15T11:04:23,293|[DEBUG] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@3fa27158
2021-03-15T11:04:23,293|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3fa27158
2021-03-15T11:04:23,293|[DEBUG] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@58da1b27
2021-03-15T11:04:23,293|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@58da1b27
2021-03-15T11:04:23,293|[DEBUG] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@29862f60
2021-03-15T11:04:23,294|[DEBUG] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@644acaff
2021-03-15T11:04:23,294|[DEBUG] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@771047b4
2021-03-15T11:04:23,294|[DEBUG] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@677f1963
2021-03-15T11:04:23,294|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@677f1963
2021-03-15T11:04:23,294|[DEBUG] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6f677c34
2021-03-15T11:04:23,294|[DEBUG] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@a54ab55
2021-03-15T11:04:23,294|[DEBUG] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@66d17af8
2021-03-15T11:04:23,294|[DEBUG] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@27d0703e
2021-03-15T11:04:23,294|[DEBUG] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@73023e2c
2021-03-15T11:04:23,294|[DEBUG] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5ca32d1a
2021-03-15T11:04:23,294|[DEBUG] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@31489acc
2021-03-15T11:04:23,294|[DEBUG] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@153d5d5b
]]></system-out>
    <system-err><![CDATA[Mar 15, 2021 11:04:18 AM org.apache.catalina.core.StandardService startInternal
INFO: Starting service [Tomcat]
Mar 15, 2021 11:04:18 AM org.apache.catalina.core.StandardEngine startInternal
INFO: Starting Servlet engine: [Apache Tomcat/9.0.44]
Mar 15, 2021 11:04:18 AM org.apache.catalina.startup.ContextConfig getDefaultWebXmlFragment
INFO: No global web.xml found
Mar 15, 2021 11:04:19 AM org.apache.tomcat.util.scan.StandardJarScanner processURLs
WARNING: Failed to scan [file:/C:/Users/shado/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-api-2.3.1.jar] from classloader hierarchy
java.io.IOException: java.lang.reflect.InvocationTargetException
	at org.apache.tomcat.util.compat.Jre9Compat.jarFileNewInstance(Jre9Compat.java:209)
	at org.apache.tomcat.util.scan.JarFileUrlJar.<init>(JarFileUrlJar.java:65)
	at org.apache.tomcat.util.scan.JarFactory.newInstance(JarFactory.java:49)
	at org.apache.tomcat.util.scan.StandardJarScanner.process(StandardJarScanner.java:383)
	at org.apache.tomcat.util.scan.StandardJarScanner.processURLs(StandardJarScanner.java:318)
	at org.apache.tomcat.util.scan.StandardJarScanner.doScanClassPath(StandardJarScanner.java:282)
	at org.apache.tomcat.util.scan.StandardJarScanner.scan(StandardJarScanner.java:233)
	at org.apache.catalina.startup.ContextConfig.processJarsForWebFragments(ContextConfig.java:2135)
	at org.apache.catalina.startup.ContextConfig.webConfig(ContextConfig.java:1289)
	at org.apache.catalina.startup.ContextConfig.configureStart(ContextConfig.java:986)
	at org.apache.catalina.startup.ContextConfig.lifecycleEvent(ContextConfig.java:303)
	at org.apache.catalina.util.LifecycleBase.fireLifecycleEvent(LifecycleBase.java:123)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5082)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:843)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:434)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:930)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:486)
	at common.TomcatStartUp.createTomcat(TomcatStartUp.java:20)
	at logic.AccountLogicTest.setUpBeforeClass(AccountLogicTest.java:36)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:688)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptLifecycleMethod(TimeoutExtension.java:126)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptBeforeAllMethod(TimeoutExtension.java:68)
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeBeforeAllMethods$9(ClassBasedTestDescriptor.java:384)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeBeforeAllMethods(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.before(ClassBasedTestDescriptor.java:196)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.before(ClassBasedTestDescriptor.java:78)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:136)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:108)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:96)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:75)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:188)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:154)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:128)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.GeneratedConstructorAccessor17.newInstance(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
	at org.apache.tomcat.util.compat.Jre9Compat.jarFileNewInstance(Jre9Compat.java:206)
	... 94 more
Caused by: java.nio.file.NoSuchFileException: C:\Users\shado\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-api-2.3.1.jar
	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:85)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:108)
	at java.base/sun.nio.fs.WindowsFileAttributeViews$Basic.readAttributes(WindowsFileAttributeViews.java:53)
	at java.base/sun.nio.fs.WindowsFileAttributeViews$Basic.readAttributes(WindowsFileAttributeViews.java:38)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.readAttributes(WindowsFileSystemProvider.java:198)
	at java.base/java.nio.file.Files.readAttributes(Files.java:1763)
	at java.base/java.util.zip.ZipFile$Source.get(ZipFile.java:1225)
	at java.base/java.util.zip.ZipFile$CleanableResource.<init>(ZipFile.java:727)
	at java.base/java.util.zip.ZipFile$CleanableResource.get(ZipFile.java:844)
	at java.base/java.util.zip.ZipFile.<init>(ZipFile.java:247)
	at java.base/java.util.zip.ZipFile.<init>(ZipFile.java:177)
	at java.base/java.util.jar.JarFile.<init>(JarFile.java:348)
	... 98 more

Mar 15, 2021 11:04:19 AM org.apache.tomcat.util.scan.StandardJarScanner processURLs
WARNING: Failed to scan [file:/C:/Users/shado/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/txw2-2.3.1.jar] from classloader hierarchy
java.io.IOException: java.lang.reflect.InvocationTargetException
	at org.apache.tomcat.util.compat.Jre9Compat.jarFileNewInstance(Jre9Compat.java:209)
	at org.apache.tomcat.util.scan.JarFileUrlJar.<init>(JarFileUrlJar.java:65)
	at org.apache.tomcat.util.scan.JarFactory.newInstance(JarFactory.java:49)
	at org.apache.tomcat.util.scan.StandardJarScanner.process(StandardJarScanner.java:383)
	at org.apache.tomcat.util.scan.StandardJarScanner.processURLs(StandardJarScanner.java:318)
	at org.apache.tomcat.util.scan.StandardJarScanner.doScanClassPath(StandardJarScanner.java:282)
	at org.apache.tomcat.util.scan.StandardJarScanner.scan(StandardJarScanner.java:233)
	at org.apache.catalina.startup.ContextConfig.processJarsForWebFragments(ContextConfig.java:2135)
	at org.apache.catalina.startup.ContextConfig.webConfig(ContextConfig.java:1289)
	at org.apache.catalina.startup.ContextConfig.configureStart(ContextConfig.java:986)
	at org.apache.catalina.startup.ContextConfig.lifecycleEvent(ContextConfig.java:303)
	at org.apache.catalina.util.LifecycleBase.fireLifecycleEvent(LifecycleBase.java:123)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5082)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:843)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:434)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:930)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:486)
	at common.TomcatStartUp.createTomcat(TomcatStartUp.java:20)
	at logic.AccountLogicTest.setUpBeforeClass(AccountLogicTest.java:36)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:688)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptLifecycleMethod(TimeoutExtension.java:126)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptBeforeAllMethod(TimeoutExtension.java:68)
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeBeforeAllMethods$9(ClassBasedTestDescriptor.java:384)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeBeforeAllMethods(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.before(ClassBasedTestDescriptor.java:196)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.before(ClassBasedTestDescriptor.java:78)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:136)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:108)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:96)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:75)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:188)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:154)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:128)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.GeneratedConstructorAccessor17.newInstance(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
	at org.apache.tomcat.util.compat.Jre9Compat.jarFileNewInstance(Jre9Compat.java:206)
	... 94 more
Caused by: java.nio.file.NoSuchFileException: C:\Users\shado\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\txw2-2.3.1.jar
	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:85)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:108)
	at java.base/sun.nio.fs.WindowsFileAttributeViews$Basic.readAttributes(WindowsFileAttributeViews.java:53)
	at java.base/sun.nio.fs.WindowsFileAttributeViews$Basic.readAttributes(WindowsFileAttributeViews.java:38)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.readAttributes(WindowsFileSystemProvider.java:198)
	at java.base/java.nio.file.Files.readAttributes(Files.java:1763)
	at java.base/java.util.zip.ZipFile$Source.get(ZipFile.java:1225)
	at java.base/java.util.zip.ZipFile$CleanableResource.<init>(ZipFile.java:727)
	at java.base/java.util.zip.ZipFile$CleanableResource.get(ZipFile.java:844)
	at java.base/java.util.zip.ZipFile.<init>(ZipFile.java:247)
	at java.base/java.util.zip.ZipFile.<init>(ZipFile.java:177)
	at java.base/java.util.jar.JarFile.<init>(JarFile.java:348)
	... 98 more

Mar 15, 2021 11:04:19 AM org.apache.tomcat.util.scan.StandardJarScanner processURLs
WARNING: Failed to scan [file:/C:/Users/shado/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/istack-commons-runtime-3.0.7.jar] from classloader hierarchy
java.io.IOException: java.lang.reflect.InvocationTargetException
	at org.apache.tomcat.util.compat.Jre9Compat.jarFileNewInstance(Jre9Compat.java:209)
	at org.apache.tomcat.util.scan.JarFileUrlJar.<init>(JarFileUrlJar.java:65)
	at org.apache.tomcat.util.scan.JarFactory.newInstance(JarFactory.java:49)
	at org.apache.tomcat.util.scan.StandardJarScanner.process(StandardJarScanner.java:383)
	at org.apache.tomcat.util.scan.StandardJarScanner.processURLs(StandardJarScanner.java:318)
	at org.apache.tomcat.util.scan.StandardJarScanner.doScanClassPath(StandardJarScanner.java:282)
	at org.apache.tomcat.util.scan.StandardJarScanner.scan(StandardJarScanner.java:233)
	at org.apache.catalina.startup.ContextConfig.processJarsForWebFragments(ContextConfig.java:2135)
	at org.apache.catalina.startup.ContextConfig.webConfig(ContextConfig.java:1289)
	at org.apache.catalina.startup.ContextConfig.configureStart(ContextConfig.java:986)
	at org.apache.catalina.startup.ContextConfig.lifecycleEvent(ContextConfig.java:303)
	at org.apache.catalina.util.LifecycleBase.fireLifecycleEvent(LifecycleBase.java:123)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5082)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:843)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:434)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:930)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:486)
	at common.TomcatStartUp.createTomcat(TomcatStartUp.java:20)
	at logic.AccountLogicTest.setUpBeforeClass(AccountLogicTest.java:36)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:688)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptLifecycleMethod(TimeoutExtension.java:126)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptBeforeAllMethod(TimeoutExtension.java:68)
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeBeforeAllMethods$9(ClassBasedTestDescriptor.java:384)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeBeforeAllMethods(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.before(ClassBasedTestDescriptor.java:196)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.before(ClassBasedTestDescriptor.java:78)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:136)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:108)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:96)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:75)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:188)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:154)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:128)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.GeneratedConstructorAccessor17.newInstance(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
	at org.apache.tomcat.util.compat.Jre9Compat.jarFileNewInstance(Jre9Compat.java:206)
	... 94 more
Caused by: java.nio.file.NoSuchFileException: C:\Users\shado\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\istack-commons-runtime-3.0.7.jar
	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:85)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:108)
	at java.base/sun.nio.fs.WindowsFileAttributeViews$Basic.readAttributes(WindowsFileAttributeViews.java:53)
	at java.base/sun.nio.fs.WindowsFileAttributeViews$Basic.readAttributes(WindowsFileAttributeViews.java:38)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.readAttributes(WindowsFileSystemProvider.java:198)
	at java.base/java.nio.file.Files.readAttributes(Files.java:1763)
	at java.base/java.util.zip.ZipFile$Source.get(ZipFile.java:1225)
	at java.base/java.util.zip.ZipFile$CleanableResource.<init>(ZipFile.java:727)
	at java.base/java.util.zip.ZipFile$CleanableResource.get(ZipFile.java:844)
	at java.base/java.util.zip.ZipFile.<init>(ZipFile.java:247)
	at java.base/java.util.zip.ZipFile.<init>(ZipFile.java:177)
	at java.base/java.util.jar.JarFile.<init>(JarFile.java:348)
	... 98 more

Mar 15, 2021 11:04:19 AM org.apache.tomcat.util.scan.StandardJarScanner processURLs
WARNING: Failed to scan [file:/C:/Users/shado/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/stax-ex-1.8.jar] from classloader hierarchy
java.io.IOException: java.lang.reflect.InvocationTargetException
	at org.apache.tomcat.util.compat.Jre9Compat.jarFileNewInstance(Jre9Compat.java:209)
	at org.apache.tomcat.util.scan.JarFileUrlJar.<init>(JarFileUrlJar.java:65)
	at org.apache.tomcat.util.scan.JarFactory.newInstance(JarFactory.java:49)
	at org.apache.tomcat.util.scan.StandardJarScanner.process(StandardJarScanner.java:383)
	at org.apache.tomcat.util.scan.StandardJarScanner.processURLs(StandardJarScanner.java:318)
	at org.apache.tomcat.util.scan.StandardJarScanner.doScanClassPath(StandardJarScanner.java:282)
	at org.apache.tomcat.util.scan.StandardJarScanner.scan(StandardJarScanner.java:233)
	at org.apache.catalina.startup.ContextConfig.processJarsForWebFragments(ContextConfig.java:2135)
	at org.apache.catalina.startup.ContextConfig.webConfig(ContextConfig.java:1289)
	at org.apache.catalina.startup.ContextConfig.configureStart(ContextConfig.java:986)
	at org.apache.catalina.startup.ContextConfig.lifecycleEvent(ContextConfig.java:303)
	at org.apache.catalina.util.LifecycleBase.fireLifecycleEvent(LifecycleBase.java:123)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5082)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:843)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:434)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:930)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:486)
	at common.TomcatStartUp.createTomcat(TomcatStartUp.java:20)
	at logic.AccountLogicTest.setUpBeforeClass(AccountLogicTest.java:36)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:688)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptLifecycleMethod(TimeoutExtension.java:126)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptBeforeAllMethod(TimeoutExtension.java:68)
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeBeforeAllMethods$9(ClassBasedTestDescriptor.java:384)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeBeforeAllMethods(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.before(ClassBasedTestDescriptor.java:196)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.before(ClassBasedTestDescriptor.java:78)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:136)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:108)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:96)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:75)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:188)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:154)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:128)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.GeneratedConstructorAccessor17.newInstance(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
	at org.apache.tomcat.util.compat.Jre9Compat.jarFileNewInstance(Jre9Compat.java:206)
	... 94 more
Caused by: java.nio.file.NoSuchFileException: C:\Users\shado\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\stax-ex-1.8.jar
	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:85)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:108)
	at java.base/sun.nio.fs.WindowsFileAttributeViews$Basic.readAttributes(WindowsFileAttributeViews.java:53)
	at java.base/sun.nio.fs.WindowsFileAttributeViews$Basic.readAttributes(WindowsFileAttributeViews.java:38)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.readAttributes(WindowsFileSystemProvider.java:198)
	at java.base/java.nio.file.Files.readAttributes(Files.java:1763)
	at java.base/java.util.zip.ZipFile$Source.get(ZipFile.java:1225)
	at java.base/java.util.zip.ZipFile$CleanableResource.<init>(ZipFile.java:727)
	at java.base/java.util.zip.ZipFile$CleanableResource.get(ZipFile.java:844)
	at java.base/java.util.zip.ZipFile.<init>(ZipFile.java:247)
	at java.base/java.util.zip.ZipFile.<init>(ZipFile.java:177)
	at java.base/java.util.jar.JarFile.<init>(JarFile.java:348)
	... 98 more

Mar 15, 2021 11:04:19 AM org.apache.tomcat.util.scan.StandardJarScanner processURLs
WARNING: Failed to scan [file:/C:/Users/shado/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/FastInfoset-1.2.15.jar] from classloader hierarchy
java.io.IOException: java.lang.reflect.InvocationTargetException
	at org.apache.tomcat.util.compat.Jre9Compat.jarFileNewInstance(Jre9Compat.java:209)
	at org.apache.tomcat.util.scan.JarFileUrlJar.<init>(JarFileUrlJar.java:65)
	at org.apache.tomcat.util.scan.JarFactory.newInstance(JarFactory.java:49)
	at org.apache.tomcat.util.scan.StandardJarScanner.process(StandardJarScanner.java:383)
	at org.apache.tomcat.util.scan.StandardJarScanner.processURLs(StandardJarScanner.java:318)
	at org.apache.tomcat.util.scan.StandardJarScanner.doScanClassPath(StandardJarScanner.java:282)
	at org.apache.tomcat.util.scan.StandardJarScanner.scan(StandardJarScanner.java:233)
	at org.apache.catalina.startup.ContextConfig.processJarsForWebFragments(ContextConfig.java:2135)
	at org.apache.catalina.startup.ContextConfig.webConfig(ContextConfig.java:1289)
	at org.apache.catalina.startup.ContextConfig.configureStart(ContextConfig.java:986)
	at org.apache.catalina.startup.ContextConfig.lifecycleEvent(ContextConfig.java:303)
	at org.apache.catalina.util.LifecycleBase.fireLifecycleEvent(LifecycleBase.java:123)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5082)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:843)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:434)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:930)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:486)
	at common.TomcatStartUp.createTomcat(TomcatStartUp.java:20)
	at logic.AccountLogicTest.setUpBeforeClass(AccountLogicTest.java:36)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:688)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptLifecycleMethod(TimeoutExtension.java:126)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptBeforeAllMethod(TimeoutExtension.java:68)
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeBeforeAllMethods$9(ClassBasedTestDescriptor.java:384)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeBeforeAllMethods(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.before(ClassBasedTestDescriptor.java:196)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.before(ClassBasedTestDescriptor.java:78)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:136)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:108)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:96)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:75)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:188)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:154)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:128)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.GeneratedConstructorAccessor17.newInstance(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
	at org.apache.tomcat.util.compat.Jre9Compat.jarFileNewInstance(Jre9Compat.java:206)
	... 94 more
Caused by: java.nio.file.NoSuchFileException: C:\Users\shado\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\FastInfoset-1.2.15.jar
	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:85)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:108)
	at java.base/sun.nio.fs.WindowsFileAttributeViews$Basic.readAttributes(WindowsFileAttributeViews.java:53)
	at java.base/sun.nio.fs.WindowsFileAttributeViews$Basic.readAttributes(WindowsFileAttributeViews.java:38)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.readAttributes(WindowsFileSystemProvider.java:198)
	at java.base/java.nio.file.Files.readAttributes(Files.java:1763)
	at java.base/java.util.zip.ZipFile$Source.get(ZipFile.java:1225)
	at java.base/java.util.zip.ZipFile$CleanableResource.<init>(ZipFile.java:727)
	at java.base/java.util.zip.ZipFile$CleanableResource.get(ZipFile.java:844)
	at java.base/java.util.zip.ZipFile.<init>(ZipFile.java:247)
	at java.base/java.util.zip.ZipFile.<init>(ZipFile.java:177)
	at java.base/java.util.jar.JarFile.<init>(JarFile.java:348)
	... 98 more

Mar 15, 2021 11:04:19 AM org.apache.tomcat.util.scan.StandardJarScanner processURLs
WARNING: Failed to scan [file:/C:/Users/shado/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/javax.activation-api-1.2.0.jar] from classloader hierarchy
java.io.IOException: java.lang.reflect.InvocationTargetException
	at org.apache.tomcat.util.compat.Jre9Compat.jarFileNewInstance(Jre9Compat.java:209)
	at org.apache.tomcat.util.scan.JarFileUrlJar.<init>(JarFileUrlJar.java:65)
	at org.apache.tomcat.util.scan.JarFactory.newInstance(JarFactory.java:49)
	at org.apache.tomcat.util.scan.StandardJarScanner.process(StandardJarScanner.java:383)
	at org.apache.tomcat.util.scan.StandardJarScanner.processURLs(StandardJarScanner.java:318)
	at org.apache.tomcat.util.scan.StandardJarScanner.doScanClassPath(StandardJarScanner.java:282)
	at org.apache.tomcat.util.scan.StandardJarScanner.scan(StandardJarScanner.java:233)
	at org.apache.catalina.startup.ContextConfig.processJarsForWebFragments(ContextConfig.java:2135)
	at org.apache.catalina.startup.ContextConfig.webConfig(ContextConfig.java:1289)
	at org.apache.catalina.startup.ContextConfig.configureStart(ContextConfig.java:986)
	at org.apache.catalina.startup.ContextConfig.lifecycleEvent(ContextConfig.java:303)
	at org.apache.catalina.util.LifecycleBase.fireLifecycleEvent(LifecycleBase.java:123)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5082)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:843)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:434)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:930)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:486)
	at common.TomcatStartUp.createTomcat(TomcatStartUp.java:20)
	at logic.AccountLogicTest.setUpBeforeClass(AccountLogicTest.java:36)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:688)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptLifecycleMethod(TimeoutExtension.java:126)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptBeforeAllMethod(TimeoutExtension.java:68)
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeBeforeAllMethods$9(ClassBasedTestDescriptor.java:384)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeBeforeAllMethods(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.before(ClassBasedTestDescriptor.java:196)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.before(ClassBasedTestDescriptor.java:78)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:136)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:108)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:96)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:75)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:188)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:154)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:128)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.GeneratedConstructorAccessor17.newInstance(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
	at org.apache.tomcat.util.compat.Jre9Compat.jarFileNewInstance(Jre9Compat.java:206)
	... 94 more
Caused by: java.nio.file.NoSuchFileException: C:\Users\shado\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\javax.activation-api-1.2.0.jar
	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:85)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:108)
	at java.base/sun.nio.fs.WindowsFileAttributeViews$Basic.readAttributes(WindowsFileAttributeViews.java:53)
	at java.base/sun.nio.fs.WindowsFileAttributeViews$Basic.readAttributes(WindowsFileAttributeViews.java:38)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.readAttributes(WindowsFileSystemProvider.java:198)
	at java.base/java.nio.file.Files.readAttributes(Files.java:1763)
	at java.base/java.util.zip.ZipFile$Source.get(ZipFile.java:1225)
	at java.base/java.util.zip.ZipFile$CleanableResource.<init>(ZipFile.java:727)
	at java.base/java.util.zip.ZipFile$CleanableResource.get(ZipFile.java:844)
	at java.base/java.util.zip.ZipFile.<init>(ZipFile.java:247)
	at java.base/java.util.zip.ZipFile.<init>(ZipFile.java:177)
	at java.base/java.util.jar.JarFile.<init>(JarFile.java:348)
	... 98 more

Mar 15, 2021 11:04:21 AM org.apache.tomcat.jdbc.pool.ConnectionPool init
SEVERE: Unable to create initial connections of pool.
java.sql.SQLSyntaxErrorException: Access denied for user 'cst8288'@'localhost' to database 'simplebloodbank'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:833)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:453)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at org.apache.tomcat.jdbc.pool.PooledConnection.connectUsingDriver(PooledConnection.java:319)
	at org.apache.tomcat.jdbc.pool.PooledConnection.connect(PooledConnection.java:212)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.createConnection(ConnectionPool.java:744)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.borrowConnection(ConnectionPool.java:676)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.init(ConnectionPool.java:483)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.<init>(ConnectionPool.java:154)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.pCreatePool(DataSourceProxy.java:118)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.createPool(DataSourceProxy.java:107)
	at org.apache.tomcat.jdbc.pool.DataSourceFactory.createDataSource(DataSourceFactory.java:560)
	at org.apache.tomcat.jdbc.pool.DataSourceFactory.getObjectInstance(DataSourceFactory.java:244)
	at org.apache.naming.factory.FactoryBase.getObjectInstance(FactoryBase.java:96)
	at java.naming/javax.naming.spi.NamingManager.getObjectInstance(NamingManager.java:330)
	at org.apache.naming.NamingContext.lookup(NamingContext.java:857)
	at org.apache.naming.NamingContext.lookup(NamingContext.java:160)
	at org.apache.naming.NamingContext.lookup(NamingContext.java:843)
	at org.apache.naming.NamingContext.lookup(NamingContext.java:174)
	at org.apache.catalina.core.NamingContextListener.addResource(NamingContextListener.java:1015)
	at org.apache.catalina.core.NamingContextListener.createNamingContext(NamingContextListener.java:557)
	at org.apache.catalina.core.NamingContextListener.lifecycleEvent(NamingContextListener.java:253)
	at org.apache.catalina.util.LifecycleBase.fireLifecycleEvent(LifecycleBase.java:123)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5082)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:843)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:434)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:930)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:486)
	at common.TomcatStartUp.createTomcat(TomcatStartUp.java:20)
	at logic.AccountLogicTest.setUpBeforeClass(AccountLogicTest.java:36)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:688)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptLifecycleMethod(TimeoutExtension.java:126)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptBeforeAllMethod(TimeoutExtension.java:68)
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeBeforeAllMethods$9(ClassBasedTestDescriptor.java:384)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeBeforeAllMethods(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.before(ClassBasedTestDescriptor.java:196)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.before(ClassBasedTestDescriptor.java:78)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:136)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:108)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:96)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:75)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:188)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:154)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:128)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)

Mar 15, 2021 11:04:21 AM org.apache.naming.NamingContext lookup
WARNING: Unexpected exception resolving reference
java.sql.SQLSyntaxErrorException: Access denied for user 'cst8288'@'localhost' to database 'simplebloodbank'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:833)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:453)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at org.apache.tomcat.jdbc.pool.PooledConnection.connectUsingDriver(PooledConnection.java:319)
	at org.apache.tomcat.jdbc.pool.PooledConnection.connect(PooledConnection.java:212)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.createConnection(ConnectionPool.java:744)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.borrowConnection(ConnectionPool.java:676)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.init(ConnectionPool.java:483)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.<init>(ConnectionPool.java:154)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.pCreatePool(DataSourceProxy.java:118)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.createPool(DataSourceProxy.java:107)
	at org.apache.tomcat.jdbc.pool.DataSourceFactory.createDataSource(DataSourceFactory.java:560)
	at org.apache.tomcat.jdbc.pool.DataSourceFactory.getObjectInstance(DataSourceFactory.java:244)
	at org.apache.naming.factory.FactoryBase.getObjectInstance(FactoryBase.java:96)
	at java.naming/javax.naming.spi.NamingManager.getObjectInstance(NamingManager.java:330)
	at org.apache.naming.NamingContext.lookup(NamingContext.java:857)
	at org.apache.naming.NamingContext.lookup(NamingContext.java:160)
	at org.apache.naming.NamingContext.lookup(NamingContext.java:843)
	at org.apache.naming.NamingContext.lookup(NamingContext.java:174)
	at org.apache.catalina.core.NamingContextListener.addResource(NamingContextListener.java:1015)
	at org.apache.catalina.core.NamingContextListener.createNamingContext(NamingContextListener.java:557)
	at org.apache.catalina.core.NamingContextListener.lifecycleEvent(NamingContextListener.java:253)
	at org.apache.catalina.util.LifecycleBase.fireLifecycleEvent(LifecycleBase.java:123)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5082)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:843)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:434)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:930)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:486)
	at common.TomcatStartUp.createTomcat(TomcatStartUp.java:20)
	at logic.AccountLogicTest.setUpBeforeClass(AccountLogicTest.java:36)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:688)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptLifecycleMethod(TimeoutExtension.java:126)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptBeforeAllMethod(TimeoutExtension.java:68)
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeBeforeAllMethods$9(ClassBasedTestDescriptor.java:384)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeBeforeAllMethods(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.before(ClassBasedTestDescriptor.java:196)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.before(ClassBasedTestDescriptor.java:78)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:136)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:108)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:96)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:75)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:188)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:154)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:128)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)

Mar 15, 2021 11:04:21 AM org.apache.catalina.core.NamingContextListener addResource
WARNING: naming.jmxRegistrationFailed
Mar 15, 2021 11:04:21 AM org.apache.tomcat.util.scan.StandardJarScanner processURLs
WARNING: Failed to scan [file:/C:/Users/shado/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-api-2.3.1.jar] from classloader hierarchy
java.io.IOException: java.lang.reflect.InvocationTargetException
	at org.apache.tomcat.util.compat.Jre9Compat.jarFileNewInstance(Jre9Compat.java:209)
	at org.apache.tomcat.util.scan.JarFileUrlJar.<init>(JarFileUrlJar.java:65)
	at org.apache.tomcat.util.scan.JarFactory.newInstance(JarFactory.java:49)
	at org.apache.tomcat.util.scan.StandardJarScanner.process(StandardJarScanner.java:383)
	at org.apache.tomcat.util.scan.StandardJarScanner.processURLs(StandardJarScanner.java:318)
	at org.apache.tomcat.util.scan.StandardJarScanner.doScanClassPath(StandardJarScanner.java:282)
	at org.apache.tomcat.util.scan.StandardJarScanner.scan(StandardJarScanner.java:233)
	at org.apache.jasper.servlet.TldScanner.scanJars(TldScanner.java:262)
	at org.apache.jasper.servlet.TldScanner.scan(TldScanner.java:104)
	at org.apache.jasper.servlet.JasperInitializer.onStartup(JasperInitializer.java:83)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5166)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:843)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:434)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:930)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:486)
	at common.TomcatStartUp.createTomcat(TomcatStartUp.java:20)
	at logic.AccountLogicTest.setUpBeforeClass(AccountLogicTest.java:36)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:688)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptLifecycleMethod(TimeoutExtension.java:126)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptBeforeAllMethod(TimeoutExtension.java:68)
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeBeforeAllMethods$9(ClassBasedTestDescriptor.java:384)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeBeforeAllMethods(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.before(ClassBasedTestDescriptor.java:196)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.before(ClassBasedTestDescriptor.java:78)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:136)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:108)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:96)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:75)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:188)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:154)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:128)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.GeneratedConstructorAccessor17.newInstance(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
	at org.apache.tomcat.util.compat.Jre9Compat.jarFileNewInstance(Jre9Compat.java:206)
	... 92 more
Caused by: java.nio.file.NoSuchFileException: C:\Users\shado\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-api-2.3.1.jar
	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:85)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:108)
	at java.base/sun.nio.fs.WindowsFileAttributeViews$Basic.readAttributes(WindowsFileAttributeViews.java:53)
	at java.base/sun.nio.fs.WindowsFileAttributeViews$Basic.readAttributes(WindowsFileAttributeViews.java:38)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.readAttributes(WindowsFileSystemProvider.java:198)
	at java.base/java.nio.file.Files.readAttributes(Files.java:1763)
	at java.base/java.util.zip.ZipFile$Source.get(ZipFile.java:1225)
	at java.base/java.util.zip.ZipFile$CleanableResource.<init>(ZipFile.java:727)
	at java.base/java.util.zip.ZipFile$CleanableResource.get(ZipFile.java:844)
	at java.base/java.util.zip.ZipFile.<init>(ZipFile.java:247)
	at java.base/java.util.zip.ZipFile.<init>(ZipFile.java:177)
	at java.base/java.util.jar.JarFile.<init>(JarFile.java:348)
	... 96 more

Mar 15, 2021 11:04:21 AM org.apache.tomcat.util.scan.StandardJarScanner processURLs
WARNING: Failed to scan [file:/C:/Users/shado/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/txw2-2.3.1.jar] from classloader hierarchy
java.io.IOException: java.lang.reflect.InvocationTargetException
	at org.apache.tomcat.util.compat.Jre9Compat.jarFileNewInstance(Jre9Compat.java:209)
	at org.apache.tomcat.util.scan.JarFileUrlJar.<init>(JarFileUrlJar.java:65)
	at org.apache.tomcat.util.scan.JarFactory.newInstance(JarFactory.java:49)
	at org.apache.tomcat.util.scan.StandardJarScanner.process(StandardJarScanner.java:383)
	at org.apache.tomcat.util.scan.StandardJarScanner.processURLs(StandardJarScanner.java:318)
	at org.apache.tomcat.util.scan.StandardJarScanner.doScanClassPath(StandardJarScanner.java:282)
	at org.apache.tomcat.util.scan.StandardJarScanner.scan(StandardJarScanner.java:233)
	at org.apache.jasper.servlet.TldScanner.scanJars(TldScanner.java:262)
	at org.apache.jasper.servlet.TldScanner.scan(TldScanner.java:104)
	at org.apache.jasper.servlet.JasperInitializer.onStartup(JasperInitializer.java:83)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5166)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:843)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:434)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:930)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:486)
	at common.TomcatStartUp.createTomcat(TomcatStartUp.java:20)
	at logic.AccountLogicTest.setUpBeforeClass(AccountLogicTest.java:36)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:688)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptLifecycleMethod(TimeoutExtension.java:126)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptBeforeAllMethod(TimeoutExtension.java:68)
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeBeforeAllMethods$9(ClassBasedTestDescriptor.java:384)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeBeforeAllMethods(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.before(ClassBasedTestDescriptor.java:196)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.before(ClassBasedTestDescriptor.java:78)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:136)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:108)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:96)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:75)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:188)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:154)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:128)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.GeneratedConstructorAccessor17.newInstance(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
	at org.apache.tomcat.util.compat.Jre9Compat.jarFileNewInstance(Jre9Compat.java:206)
	... 92 more
Caused by: java.nio.file.NoSuchFileException: C:\Users\shado\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\txw2-2.3.1.jar
	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:85)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:108)
	at java.base/sun.nio.fs.WindowsFileAttributeViews$Basic.readAttributes(WindowsFileAttributeViews.java:53)
	at java.base/sun.nio.fs.WindowsFileAttributeViews$Basic.readAttributes(WindowsFileAttributeViews.java:38)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.readAttributes(WindowsFileSystemProvider.java:198)
	at java.base/java.nio.file.Files.readAttributes(Files.java:1763)
	at java.base/java.util.zip.ZipFile$Source.get(ZipFile.java:1225)
	at java.base/java.util.zip.ZipFile$CleanableResource.<init>(ZipFile.java:727)
	at java.base/java.util.zip.ZipFile$CleanableResource.get(ZipFile.java:844)
	at java.base/java.util.zip.ZipFile.<init>(ZipFile.java:247)
	at java.base/java.util.zip.ZipFile.<init>(ZipFile.java:177)
	at java.base/java.util.jar.JarFile.<init>(JarFile.java:348)
	... 96 more

Mar 15, 2021 11:04:21 AM org.apache.tomcat.util.scan.StandardJarScanner processURLs
WARNING: Failed to scan [file:/C:/Users/shado/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/istack-commons-runtime-3.0.7.jar] from classloader hierarchy
java.io.IOException: java.lang.reflect.InvocationTargetException
	at org.apache.tomcat.util.compat.Jre9Compat.jarFileNewInstance(Jre9Compat.java:209)
	at org.apache.tomcat.util.scan.JarFileUrlJar.<init>(JarFileUrlJar.java:65)
	at org.apache.tomcat.util.scan.JarFactory.newInstance(JarFactory.java:49)
	at org.apache.tomcat.util.scan.StandardJarScanner.process(StandardJarScanner.java:383)
	at org.apache.tomcat.util.scan.StandardJarScanner.processURLs(StandardJarScanner.java:318)
	at org.apache.tomcat.util.scan.StandardJarScanner.doScanClassPath(StandardJarScanner.java:282)
	at org.apache.tomcat.util.scan.StandardJarScanner.scan(StandardJarScanner.java:233)
	at org.apache.jasper.servlet.TldScanner.scanJars(TldScanner.java:262)
	at org.apache.jasper.servlet.TldScanner.scan(TldScanner.java:104)
	at org.apache.jasper.servlet.JasperInitializer.onStartup(JasperInitializer.java:83)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5166)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:843)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:434)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:930)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:486)
	at common.TomcatStartUp.createTomcat(TomcatStartUp.java:20)
	at logic.AccountLogicTest.setUpBeforeClass(AccountLogicTest.java:36)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:688)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptLifecycleMethod(TimeoutExtension.java:126)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptBeforeAllMethod(TimeoutExtension.java:68)
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeBeforeAllMethods$9(ClassBasedTestDescriptor.java:384)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeBeforeAllMethods(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.before(ClassBasedTestDescriptor.java:196)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.before(ClassBasedTestDescriptor.java:78)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:136)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:108)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:96)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:75)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:188)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:154)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:128)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.GeneratedConstructorAccessor17.newInstance(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
	at org.apache.tomcat.util.compat.Jre9Compat.jarFileNewInstance(Jre9Compat.java:206)
	... 92 more
Caused by: java.nio.file.NoSuchFileException: C:\Users\shado\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\istack-commons-runtime-3.0.7.jar
	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:85)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:108)
	at java.base/sun.nio.fs.WindowsFileAttributeViews$Basic.readAttributes(WindowsFileAttributeViews.java:53)
	at java.base/sun.nio.fs.WindowsFileAttributeViews$Basic.readAttributes(WindowsFileAttributeViews.java:38)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.readAttributes(WindowsFileSystemProvider.java:198)
	at java.base/java.nio.file.Files.readAttributes(Files.java:1763)
	at java.base/java.util.zip.ZipFile$Source.get(ZipFile.java:1225)
	at java.base/java.util.zip.ZipFile$CleanableResource.<init>(ZipFile.java:727)
	at java.base/java.util.zip.ZipFile$CleanableResource.get(ZipFile.java:844)
	at java.base/java.util.zip.ZipFile.<init>(ZipFile.java:247)
	at java.base/java.util.zip.ZipFile.<init>(ZipFile.java:177)
	at java.base/java.util.jar.JarFile.<init>(JarFile.java:348)
	... 96 more

Mar 15, 2021 11:04:21 AM org.apache.tomcat.util.scan.StandardJarScanner processURLs
WARNING: Failed to scan [file:/C:/Users/shado/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/stax-ex-1.8.jar] from classloader hierarchy
java.io.IOException: java.lang.reflect.InvocationTargetException
	at org.apache.tomcat.util.compat.Jre9Compat.jarFileNewInstance(Jre9Compat.java:209)
	at org.apache.tomcat.util.scan.JarFileUrlJar.<init>(JarFileUrlJar.java:65)
	at org.apache.tomcat.util.scan.JarFactory.newInstance(JarFactory.java:49)
	at org.apache.tomcat.util.scan.StandardJarScanner.process(StandardJarScanner.java:383)
	at org.apache.tomcat.util.scan.StandardJarScanner.processURLs(StandardJarScanner.java:318)
	at org.apache.tomcat.util.scan.StandardJarScanner.doScanClassPath(StandardJarScanner.java:282)
	at org.apache.tomcat.util.scan.StandardJarScanner.scan(StandardJarScanner.java:233)
	at org.apache.jasper.servlet.TldScanner.scanJars(TldScanner.java:262)
	at org.apache.jasper.servlet.TldScanner.scan(TldScanner.java:104)
	at org.apache.jasper.servlet.JasperInitializer.onStartup(JasperInitializer.java:83)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5166)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:843)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:434)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:930)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:486)
	at common.TomcatStartUp.createTomcat(TomcatStartUp.java:20)
	at logic.AccountLogicTest.setUpBeforeClass(AccountLogicTest.java:36)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:688)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptLifecycleMethod(TimeoutExtension.java:126)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptBeforeAllMethod(TimeoutExtension.java:68)
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeBeforeAllMethods$9(ClassBasedTestDescriptor.java:384)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeBeforeAllMethods(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.before(ClassBasedTestDescriptor.java:196)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.before(ClassBasedTestDescriptor.java:78)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:136)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:108)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:96)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:75)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:188)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:154)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:128)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.GeneratedConstructorAccessor17.newInstance(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
	at org.apache.tomcat.util.compat.Jre9Compat.jarFileNewInstance(Jre9Compat.java:206)
	... 92 more
Caused by: java.nio.file.NoSuchFileException: C:\Users\shado\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\stax-ex-1.8.jar
	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:85)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:108)
	at java.base/sun.nio.fs.WindowsFileAttributeViews$Basic.readAttributes(WindowsFileAttributeViews.java:53)
	at java.base/sun.nio.fs.WindowsFileAttributeViews$Basic.readAttributes(WindowsFileAttributeViews.java:38)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.readAttributes(WindowsFileSystemProvider.java:198)
	at java.base/java.nio.file.Files.readAttributes(Files.java:1763)
	at java.base/java.util.zip.ZipFile$Source.get(ZipFile.java:1225)
	at java.base/java.util.zip.ZipFile$CleanableResource.<init>(ZipFile.java:727)
	at java.base/java.util.zip.ZipFile$CleanableResource.get(ZipFile.java:844)
	at java.base/java.util.zip.ZipFile.<init>(ZipFile.java:247)
	at java.base/java.util.zip.ZipFile.<init>(ZipFile.java:177)
	at java.base/java.util.jar.JarFile.<init>(JarFile.java:348)
	... 96 more

Mar 15, 2021 11:04:21 AM org.apache.tomcat.util.scan.StandardJarScanner processURLs
WARNING: Failed to scan [file:/C:/Users/shado/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/FastInfoset-1.2.15.jar] from classloader hierarchy
java.io.IOException: java.lang.reflect.InvocationTargetException
	at org.apache.tomcat.util.compat.Jre9Compat.jarFileNewInstance(Jre9Compat.java:209)
	at org.apache.tomcat.util.scan.JarFileUrlJar.<init>(JarFileUrlJar.java:65)
	at org.apache.tomcat.util.scan.JarFactory.newInstance(JarFactory.java:49)
	at org.apache.tomcat.util.scan.StandardJarScanner.process(StandardJarScanner.java:383)
	at org.apache.tomcat.util.scan.StandardJarScanner.processURLs(StandardJarScanner.java:318)
	at org.apache.tomcat.util.scan.StandardJarScanner.doScanClassPath(StandardJarScanner.java:282)
	at org.apache.tomcat.util.scan.StandardJarScanner.scan(StandardJarScanner.java:233)
	at org.apache.jasper.servlet.TldScanner.scanJars(TldScanner.java:262)
	at org.apache.jasper.servlet.TldScanner.scan(TldScanner.java:104)
	at org.apache.jasper.servlet.JasperInitializer.onStartup(JasperInitializer.java:83)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5166)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:843)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:434)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:930)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:486)
	at common.TomcatStartUp.createTomcat(TomcatStartUp.java:20)
	at logic.AccountLogicTest.setUpBeforeClass(AccountLogicTest.java:36)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:688)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptLifecycleMethod(TimeoutExtension.java:126)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptBeforeAllMethod(TimeoutExtension.java:68)
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeBeforeAllMethods$9(ClassBasedTestDescriptor.java:384)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeBeforeAllMethods(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.before(ClassBasedTestDescriptor.java:196)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.before(ClassBasedTestDescriptor.java:78)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:136)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:108)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:96)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:75)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:188)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:154)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:128)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.GeneratedConstructorAccessor17.newInstance(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
	at org.apache.tomcat.util.compat.Jre9Compat.jarFileNewInstance(Jre9Compat.java:206)
	... 92 more
Caused by: java.nio.file.NoSuchFileException: C:\Users\shado\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\FastInfoset-1.2.15.jar
	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:85)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:108)
	at java.base/sun.nio.fs.WindowsFileAttributeViews$Basic.readAttributes(WindowsFileAttributeViews.java:53)
	at java.base/sun.nio.fs.WindowsFileAttributeViews$Basic.readAttributes(WindowsFileAttributeViews.java:38)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.readAttributes(WindowsFileSystemProvider.java:198)
	at java.base/java.nio.file.Files.readAttributes(Files.java:1763)
	at java.base/java.util.zip.ZipFile$Source.get(ZipFile.java:1225)
	at java.base/java.util.zip.ZipFile$CleanableResource.<init>(ZipFile.java:727)
	at java.base/java.util.zip.ZipFile$CleanableResource.get(ZipFile.java:844)
	at java.base/java.util.zip.ZipFile.<init>(ZipFile.java:247)
	at java.base/java.util.zip.ZipFile.<init>(ZipFile.java:177)
	at java.base/java.util.jar.JarFile.<init>(JarFile.java:348)
	... 96 more

Mar 15, 2021 11:04:21 AM org.apache.tomcat.util.scan.StandardJarScanner processURLs
WARNING: Failed to scan [file:/C:/Users/shado/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/javax.activation-api-1.2.0.jar] from classloader hierarchy
java.io.IOException: java.lang.reflect.InvocationTargetException
	at org.apache.tomcat.util.compat.Jre9Compat.jarFileNewInstance(Jre9Compat.java:209)
	at org.apache.tomcat.util.scan.JarFileUrlJar.<init>(JarFileUrlJar.java:65)
	at org.apache.tomcat.util.scan.JarFactory.newInstance(JarFactory.java:49)
	at org.apache.tomcat.util.scan.StandardJarScanner.process(StandardJarScanner.java:383)
	at org.apache.tomcat.util.scan.StandardJarScanner.processURLs(StandardJarScanner.java:318)
	at org.apache.tomcat.util.scan.StandardJarScanner.doScanClassPath(StandardJarScanner.java:282)
	at org.apache.tomcat.util.scan.StandardJarScanner.scan(StandardJarScanner.java:233)
	at org.apache.jasper.servlet.TldScanner.scanJars(TldScanner.java:262)
	at org.apache.jasper.servlet.TldScanner.scan(TldScanner.java:104)
	at org.apache.jasper.servlet.JasperInitializer.onStartup(JasperInitializer.java:83)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5166)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:843)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:434)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:930)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:486)
	at common.TomcatStartUp.createTomcat(TomcatStartUp.java:20)
	at logic.AccountLogicTest.setUpBeforeClass(AccountLogicTest.java:36)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:688)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptLifecycleMethod(TimeoutExtension.java:126)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptBeforeAllMethod(TimeoutExtension.java:68)
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeBeforeAllMethods$9(ClassBasedTestDescriptor.java:384)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeBeforeAllMethods(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.before(ClassBasedTestDescriptor.java:196)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.before(ClassBasedTestDescriptor.java:78)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:136)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:108)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:96)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:75)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:188)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:154)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:128)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
Caused by: java.lang.reflect.InvocationTargetException
	at java.base/jdk.internal.reflect.GeneratedConstructorAccessor17.newInstance(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
	at org.apache.tomcat.util.compat.Jre9Compat.jarFileNewInstance(Jre9Compat.java:206)
	... 92 more
Caused by: java.nio.file.NoSuchFileException: C:\Users\shado\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\javax.activation-api-1.2.0.jar
	at java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:85)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)
	at java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:108)
	at java.base/sun.nio.fs.WindowsFileAttributeViews$Basic.readAttributes(WindowsFileAttributeViews.java:53)
	at java.base/sun.nio.fs.WindowsFileAttributeViews$Basic.readAttributes(WindowsFileAttributeViews.java:38)
	at java.base/sun.nio.fs.WindowsFileSystemProvider.readAttributes(WindowsFileSystemProvider.java:198)
	at java.base/java.nio.file.Files.readAttributes(Files.java:1763)
	at java.base/java.util.zip.ZipFile$Source.get(ZipFile.java:1225)
	at java.base/java.util.zip.ZipFile$CleanableResource.<init>(ZipFile.java:727)
	at java.base/java.util.zip.ZipFile$CleanableResource.get(ZipFile.java:844)
	at java.base/java.util.zip.ZipFile.<init>(ZipFile.java:247)
	at java.base/java.util.zip.ZipFile.<init>(ZipFile.java:177)
	at java.base/java.util.jar.JarFile.<init>(JarFile.java:348)
	... 96 more

Mar 15, 2021 11:04:21 AM org.apache.jasper.servlet.TldScanner scanJars
INFO: At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
Mar 15, 2021 11:04:22 AM org.apache.tomcat.jdbc.pool.ConnectionPool init
SEVERE: Unable to create initial connections of pool.
java.sql.SQLSyntaxErrorException: Access denied for user 'cst8288'@'localhost' to database 'simplebloodbank'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:833)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:453)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at org.apache.tomcat.jdbc.pool.PooledConnection.connectUsingDriver(PooledConnection.java:319)
	at org.apache.tomcat.jdbc.pool.PooledConnection.connect(PooledConnection.java:212)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.createConnection(ConnectionPool.java:744)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.borrowConnection(ConnectionPool.java:676)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.init(ConnectionPool.java:483)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.<init>(ConnectionPool.java:154)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.pCreatePool(DataSourceProxy.java:118)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.createPool(DataSourceProxy.java:107)
	at org.apache.tomcat.jdbc.pool.DataSourceFactory.createDataSource(DataSourceFactory.java:560)
	at org.apache.tomcat.jdbc.pool.DataSourceFactory.getObjectInstance(DataSourceFactory.java:244)
	at org.apache.naming.factory.FactoryBase.getObjectInstance(FactoryBase.java:96)
	at java.naming/javax.naming.spi.NamingManager.getObjectInstance(NamingManager.java:330)
	at org.apache.naming.NamingContext.lookup(NamingContext.java:857)
	at org.apache.naming.NamingContext.lookup(NamingContext.java:160)
	at org.apache.naming.NamingContext.lookup(NamingContext.java:843)
	at org.apache.naming.NamingContext.lookup(NamingContext.java:160)
	at org.apache.naming.NamingContext.lookup(NamingContext.java:843)
	at org.apache.naming.NamingContext.lookup(NamingContext.java:160)
	at org.apache.naming.NamingContext.lookup(NamingContext.java:843)
	at org.apache.naming.NamingContext.lookup(NamingContext.java:160)
	at org.apache.naming.SelectorContext.lookup(SelectorContext.java:140)
	at java.naming/javax.naming.InitialContext.lookup(InitialContext.java:413)
	at org.hibernate.engine.jndi.internal.JndiServiceImpl.locate(JndiServiceImpl.java:97)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.configure(DatasourceConnectionProviderImpl.java:98)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:107)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:246)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.buildJdbcConnectionAccess(JdbcEnvironmentInitiator.java:145)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:66)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:152)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:176)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1224)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1255)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:56)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:79)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:54)
	at common.EMFactory.initializeEMF(EMFactory.java:33)
	at common.ServletListener.contextInitialized(ServletListener.java:36)
	at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4716)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5177)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:843)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:434)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:930)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:486)
	at common.TomcatStartUp.createTomcat(TomcatStartUp.java:20)
	at logic.AccountLogicTest.setUpBeforeClass(AccountLogicTest.java:36)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:688)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptLifecycleMethod(TimeoutExtension.java:126)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptBeforeAllMethod(TimeoutExtension.java:68)
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeBeforeAllMethods$9(ClassBasedTestDescriptor.java:384)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeBeforeAllMethods(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.before(ClassBasedTestDescriptor.java:196)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.before(ClassBasedTestDescriptor.java:78)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:136)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:108)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:96)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:75)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:188)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:154)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:128)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)

Mar 15, 2021 11:04:22 AM org.apache.naming.NamingContext lookup
WARNING: Unexpected exception resolving reference
java.sql.SQLSyntaxErrorException: Access denied for user 'cst8288'@'localhost' to database 'simplebloodbank'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:833)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:453)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at org.apache.tomcat.jdbc.pool.PooledConnection.connectUsingDriver(PooledConnection.java:319)
	at org.apache.tomcat.jdbc.pool.PooledConnection.connect(PooledConnection.java:212)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.createConnection(ConnectionPool.java:744)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.borrowConnection(ConnectionPool.java:676)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.init(ConnectionPool.java:483)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.<init>(ConnectionPool.java:154)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.pCreatePool(DataSourceProxy.java:118)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.createPool(DataSourceProxy.java:107)
	at org.apache.tomcat.jdbc.pool.DataSourceFactory.createDataSource(DataSourceFactory.java:560)
	at org.apache.tomcat.jdbc.pool.DataSourceFactory.getObjectInstance(DataSourceFactory.java:244)
	at org.apache.naming.factory.FactoryBase.getObjectInstance(FactoryBase.java:96)
	at java.naming/javax.naming.spi.NamingManager.getObjectInstance(NamingManager.java:330)
	at org.apache.naming.NamingContext.lookup(NamingContext.java:857)
	at org.apache.naming.NamingContext.lookup(NamingContext.java:160)
	at org.apache.naming.NamingContext.lookup(NamingContext.java:843)
	at org.apache.naming.NamingContext.lookup(NamingContext.java:160)
	at org.apache.naming.NamingContext.lookup(NamingContext.java:843)
	at org.apache.naming.NamingContext.lookup(NamingContext.java:160)
	at org.apache.naming.NamingContext.lookup(NamingContext.java:843)
	at org.apache.naming.NamingContext.lookup(NamingContext.java:160)
	at org.apache.naming.SelectorContext.lookup(SelectorContext.java:140)
	at java.naming/javax.naming.InitialContext.lookup(InitialContext.java:413)
	at org.hibernate.engine.jndi.internal.JndiServiceImpl.locate(JndiServiceImpl.java:97)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.configure(DatasourceConnectionProviderImpl.java:98)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:107)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:246)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.buildJdbcConnectionAccess(JdbcEnvironmentInitiator.java:145)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:66)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:152)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:176)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1224)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1255)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:56)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:79)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:54)
	at common.EMFactory.initializeEMF(EMFactory.java:33)
	at common.ServletListener.contextInitialized(ServletListener.java:36)
	at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4716)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5177)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:843)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:434)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:930)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:486)
	at common.TomcatStartUp.createTomcat(TomcatStartUp.java:20)
	at logic.AccountLogicTest.setUpBeforeClass(AccountLogicTest.java:36)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:688)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptLifecycleMethod(TimeoutExtension.java:126)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptBeforeAllMethod(TimeoutExtension.java:68)
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeBeforeAllMethods$9(ClassBasedTestDescriptor.java:384)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeBeforeAllMethods(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.before(ClassBasedTestDescriptor.java:196)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.before(ClassBasedTestDescriptor.java:78)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:136)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:108)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:96)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:75)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:188)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:154)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:128)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)

Mar 15, 2021 11:04:22 AM org.apache.catalina.core.StandardContext listenerStart
SEVERE: Exception sending context initialized event to listener instance of class [common.ServletListener]
org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:275)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:152)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:176)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1224)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1255)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:56)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:79)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:54)
	at common.EMFactory.initializeEMF(EMFactory.java:33)
	at common.ServletListener.contextInitialized(ServletListener.java:36)
	at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4716)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5177)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:843)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1384)
	at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1374)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at org.apache.tomcat.util.threads.InlineExecutorService.execute(InlineExecutorService.java:75)
	at java.base/java.util.concurrent.AbstractExecutorService.submit(AbstractExecutorService.java:140)
	at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:909)
	at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.startInternal(StandardService.java:434)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:930)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.startup.Tomcat.start(Tomcat.java:486)
	at common.TomcatStartUp.createTomcat(TomcatStartUp.java:20)
	at logic.AccountLogicTest.setUpBeforeClass(AccountLogicTest.java:36)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:688)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptLifecycleMethod(TimeoutExtension.java:126)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptBeforeAllMethod(TimeoutExtension.java:68)
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeBeforeAllMethods$9(ClassBasedTestDescriptor.java:384)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeBeforeAllMethods(ClassBasedTestDescriptor.java:382)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.before(ClassBasedTestDescriptor.java:196)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.before(ClassBasedTestDescriptor.java:78)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:136)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:108)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:96)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:75)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:188)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:154)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:128)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
Caused by: org.hibernate.engine.jndi.JndiException: Unable to lookup JNDI name [java:comp/env/jdbc/SimpleBloodBank]
	at org.hibernate.engine.jndi.internal.JndiServiceImpl.locate(JndiServiceImpl.java:100)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.configure(DatasourceConnectionProviderImpl.java:98)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:107)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:246)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.buildJdbcConnectionAccess(JdbcEnvironmentInitiator.java:145)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:66)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	... 99 more
Caused by: javax.naming.NamingException: Unexpected exception resolving reference [Root exception is java.sql.SQLSyntaxErrorException: Access denied for user 'cst8288'@'localhost' to database 'simplebloodbank']
	at org.apache.naming.NamingContext.lookup(NamingContext.java:882)
	at org.apache.naming.NamingContext.lookup(NamingContext.java:160)
	at org.apache.naming.NamingContext.lookup(NamingContext.java:843)
	at org.apache.naming.NamingContext.lookup(NamingContext.java:160)
	at org.apache.naming.NamingContext.lookup(NamingContext.java:843)
	at org.apache.naming.NamingContext.lookup(NamingContext.java:160)
	at org.apache.naming.NamingContext.lookup(NamingContext.java:843)
	at org.apache.naming.NamingContext.lookup(NamingContext.java:160)
	at org.apache.naming.SelectorContext.lookup(SelectorContext.java:140)
	at java.naming/javax.naming.InitialContext.lookup(InitialContext.java:413)
	at org.hibernate.engine.jndi.internal.JndiServiceImpl.locate(JndiServiceImpl.java:97)
	... 108 more
Caused by: java.sql.SQLSyntaxErrorException: Access denied for user 'cst8288'@'localhost' to database 'simplebloodbank'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:833)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:453)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198)
	at org.apache.tomcat.jdbc.pool.PooledConnection.connectUsingDriver(PooledConnection.java:319)
	at org.apache.tomcat.jdbc.pool.PooledConnection.connect(PooledConnection.java:212)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.createConnection(ConnectionPool.java:744)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.borrowConnection(ConnectionPool.java:676)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.init(ConnectionPool.java:483)
	at org.apache.tomcat.jdbc.pool.ConnectionPool.<init>(ConnectionPool.java:154)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.pCreatePool(DataSourceProxy.java:118)
	at org.apache.tomcat.jdbc.pool.DataSourceProxy.createPool(DataSourceProxy.java:107)
	at org.apache.tomcat.jdbc.pool.DataSourceFactory.createDataSource(DataSourceFactory.java:560)
	at org.apache.tomcat.jdbc.pool.DataSourceFactory.getObjectInstance(DataSourceFactory.java:244)
	at org.apache.naming.factory.FactoryBase.getObjectInstance(FactoryBase.java:96)
	at java.naming/javax.naming.spi.NamingManager.getObjectInstance(NamingManager.java:330)
	at org.apache.naming.NamingContext.lookup(NamingContext.java:857)
	... 118 more

Mar 15, 2021 11:04:22 AM org.apache.catalina.core.StandardContext startInternal
SEVERE: One or more listeners failed to start. Full details will be found in the appropriate container log file
Mar 15, 2021 11:04:23 AM org.apache.catalina.util.SessionIdGeneratorBase createSecureRandom
WARNING: Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [461] milliseconds.
Mar 15, 2021 11:04:23 AM org.apache.catalina.core.StandardContext startInternal
SEVERE: Context [/SimpleBloodBank] startup failed due to previous errors
]]></system-err>
  </testcase>
  <testcase name="testGetAccountWithDisplayName" classname="logic.AccountLogicTest" time="0.045">
    <error type="org.hibernate.service.spi.ServiceException"><![CDATA[org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
	at logic.AccountLogicTest.setUp(AccountLogicTest.java:56)
Caused by: org.hibernate.engine.jndi.JndiException: Unable to lookup JNDI name [java:comp/env/jdbc/SimpleBloodBank]
	at logic.AccountLogicTest.setUp(AccountLogicTest.java:56)
Caused by: javax.naming.NameNotFoundException: Name [comp/env/jdbc/SimpleBloodBank] is not bound in this Context. Unable to find [comp].
	at logic.AccountLogicTest.setUp(AccountLogicTest.java:56)
]]></error>
    <system-out><![CDATA[2021-03-15T11:04:23,354|[DEBUG] EMFactory - getting EntityManagerFactory
2021-03-15T11:04:23,355|[DEBUG] EMFactory - initializeing EntityManagerFactory
2021-03-15T11:04:23,355|[DEBUG] EMFactory - creating EntityManagerFactory
2021-03-15T11:04:23,364|[INFO ] LogHelper - HHH000204: Processing PersistenceUnitInfo [name: simplebloodbank-PU-test]
2021-03-15T11:04:23,368|[DEBUG] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@59c4921f
2021-03-15T11:04:23,369|[DEBUG] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@59c4921f
2021-03-15T11:04:23,369|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@59c4921f
2021-03-15T11:04:23,369|[DEBUG] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7f2e2ae6
2021-03-15T11:04:23,369|[DEBUG] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@3860542a
2021-03-15T11:04:23,369|[DEBUG] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@6fb07db6
2021-03-15T11:04:23,369|[DEBUG] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@6cd76b55
2021-03-15T11:04:23,369|[DEBUG] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@6cd76b55
2021-03-15T11:04:23,369|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6cd76b55
2021-03-15T11:04:23,369|[DEBUG] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@1124fd8
2021-03-15T11:04:23,369|[DEBUG] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@1124fd8
2021-03-15T11:04:23,369|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1124fd8
2021-03-15T11:04:23,369|[DEBUG] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@283730de
2021-03-15T11:04:23,370|[DEBUG] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@283730de
2021-03-15T11:04:23,370|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@283730de
2021-03-15T11:04:23,370|[DEBUG] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@57212116
2021-03-15T11:04:23,370|[DEBUG] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@57212116
2021-03-15T11:04:23,370|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@57212116
2021-03-15T11:04:23,370|[DEBUG] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@17b17fa8
2021-03-15T11:04:23,370|[DEBUG] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@17b17fa8
2021-03-15T11:04:23,370|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@17b17fa8
2021-03-15T11:04:23,370|[DEBUG] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@463b865b
2021-03-15T11:04:23,370|[DEBUG] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@463b865b
2021-03-15T11:04:23,370|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@463b865b
2021-03-15T11:04:23,370|[DEBUG] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@4fc2e703
2021-03-15T11:04:23,370|[DEBUG] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@4fc2e703
2021-03-15T11:04:23,371|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4fc2e703
2021-03-15T11:04:23,371|[DEBUG] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4ca3923
2021-03-15T11:04:23,371|[DEBUG] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4ca3923
2021-03-15T11:04:23,371|[DEBUG] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6d88a3f4
2021-03-15T11:04:23,371|[DEBUG] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6d88a3f4
2021-03-15T11:04:23,371|[DEBUG] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@5882ff51
2021-03-15T11:04:23,371|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@5882ff51
2021-03-15T11:04:23,371|[DEBUG] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4c5afa2d
2021-03-15T11:04:23,371|[DEBUG] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3177221b
2021-03-15T11:04:23,371|[DEBUG] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@654b9f0
2021-03-15T11:04:23,371|[DEBUG] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@654b9f0
2021-03-15T11:04:23,371|[DEBUG] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@533c62d0
2021-03-15T11:04:23,371|[DEBUG] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@533c62d0
2021-03-15T11:04:23,371|[DEBUG] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@7c654cfc
2021-03-15T11:04:23,371|[DEBUG] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@7c654cfc
2021-03-15T11:04:23,372|[DEBUG] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@74d41fcf
2021-03-15T11:04:23,372|[DEBUG] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@74d41fcf
2021-03-15T11:04:23,372|[DEBUG] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@10d28ee2
2021-03-15T11:04:23,372|[DEBUG] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@10d28ee2
2021-03-15T11:04:23,372|[DEBUG] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1355d2a0
2021-03-15T11:04:23,372|[DEBUG] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1355d2a0
2021-03-15T11:04:23,372|[DEBUG] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7773d139
2021-03-15T11:04:23,372|[DEBUG] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7773d139
2021-03-15T11:04:23,372|[DEBUG] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1f0b2ffb
2021-03-15T11:04:23,373|[DEBUG] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1f0b2ffb
2021-03-15T11:04:23,373|[DEBUG] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3f2fd933
2021-03-15T11:04:23,373|[DEBUG] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3f2fd933
2021-03-15T11:04:23,373|[DEBUG] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@77d5a3ee
2021-03-15T11:04:23,373|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@77d5a3ee
2021-03-15T11:04:23,373|[DEBUG] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@5095f89a
2021-03-15T11:04:23,373|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5095f89a
2021-03-15T11:04:23,373|[DEBUG] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@15c8bb25
2021-03-15T11:04:23,373|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@15c8bb25
2021-03-15T11:04:23,374|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@15c8bb25
2021-03-15T11:04:23,374|[DEBUG] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@34b4f6c3
2021-03-15T11:04:23,374|[DEBUG] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@2a04a440
2021-03-15T11:04:23,374|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2a04a440
2021-03-15T11:04:23,374|[DEBUG] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2a04a440
2021-03-15T11:04:23,374|[DEBUG] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7f3964b0
2021-03-15T11:04:23,374|[DEBUG] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@dc46916
2021-03-15T11:04:23,374|[DEBUG] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@faa592b
2021-03-15T11:04:23,375|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@faa592b
2021-03-15T11:04:23,375|[DEBUG] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@7df468f6
2021-03-15T11:04:23,375|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7df468f6
2021-03-15T11:04:23,375|[DEBUG] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@35f9c37c
2021-03-15T11:04:23,375|[DEBUG] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@35f9c37c
2021-03-15T11:04:23,375|[DEBUG] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@5bfa2801
2021-03-15T11:04:23,375|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5bfa2801
2021-03-15T11:04:23,375|[DEBUG] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@25428bab
2021-03-15T11:04:23,375|[DEBUG] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@25428bab
2021-03-15T11:04:23,375|[DEBUG] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@418e1cd6
2021-03-15T11:04:23,376|[DEBUG] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@5ef99f75
2021-03-15T11:04:23,376|[DEBUG] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@5ef99f75
2021-03-15T11:04:23,376|[DEBUG] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@5ef99f75
2021-03-15T11:04:23,376|[DEBUG] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1b438ec
2021-03-15T11:04:23,376|[DEBUG] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1b438ec
2021-03-15T11:04:23,376|[DEBUG] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1b438ec
2021-03-15T11:04:23,376|[DEBUG] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@4f241437
2021-03-15T11:04:23,376|[DEBUG] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@58e48d9
2021-03-15T11:04:23,376|[DEBUG] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@27c243a3
2021-03-15T11:04:23,376|[DEBUG] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@27c243a3
2021-03-15T11:04:23,376|[DEBUG] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@27c243a3
2021-03-15T11:04:23,376|[DEBUG] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@da87122
2021-03-15T11:04:23,377|[DEBUG] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@da87122
2021-03-15T11:04:23,377|[DEBUG] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@da87122
2021-03-15T11:04:23,377|[DEBUG] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@2e47ec5e
2021-03-15T11:04:23,377|[DEBUG] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@d3e9b94
2021-03-15T11:04:23,377|[DEBUG] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@4c3133a1
2021-03-15T11:04:23,377|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4c3133a1
2021-03-15T11:04:23,377|[DEBUG] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@26f6fbbd
2021-03-15T11:04:23,377|[DEBUG] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@3fa27158
2021-03-15T11:04:23,377|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3fa27158
2021-03-15T11:04:23,377|[DEBUG] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@58da1b27
2021-03-15T11:04:23,377|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@58da1b27
2021-03-15T11:04:23,378|[DEBUG] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@29862f60
2021-03-15T11:04:23,378|[DEBUG] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@644acaff
2021-03-15T11:04:23,378|[DEBUG] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@771047b4
2021-03-15T11:04:23,378|[DEBUG] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@677f1963
2021-03-15T11:04:23,378|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@677f1963
2021-03-15T11:04:23,378|[DEBUG] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@56926ff1
2021-03-15T11:04:23,378|[DEBUG] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6ad57ee3
2021-03-15T11:04:23,378|[DEBUG] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@49702efb
2021-03-15T11:04:23,378|[DEBUG] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2c720867
2021-03-15T11:04:23,378|[DEBUG] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@69da07ff
2021-03-15T11:04:23,378|[DEBUG] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@28394e41
2021-03-15T11:04:23,378|[DEBUG] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@60f6aa4b
2021-03-15T11:04:23,378|[DEBUG] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5c7ba702
]]></system-out>
  </testcase>
  <testcase name="testCreateEntityNullAndEmptyValues" classname="logic.AccountLogicTest" time="0.058">
    <error type="org.hibernate.service.spi.ServiceException"><![CDATA[org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
	at logic.AccountLogicTest.setUp(AccountLogicTest.java:56)
Caused by: org.hibernate.engine.jndi.JndiException: Unable to lookup JNDI name [java:comp/env/jdbc/SimpleBloodBank]
	at logic.AccountLogicTest.setUp(AccountLogicTest.java:56)
Caused by: javax.naming.NameNotFoundException: Name [comp/env/jdbc/SimpleBloodBank] is not bound in this Context. Unable to find [comp].
	at logic.AccountLogicTest.setUp(AccountLogicTest.java:56)
]]></error>
    <system-out><![CDATA[2021-03-15T11:04:23,400|[DEBUG] EMFactory - getting EntityManagerFactory
2021-03-15T11:04:23,403|[DEBUG] EMFactory - initializeing EntityManagerFactory
2021-03-15T11:04:23,403|[DEBUG] EMFactory - creating EntityManagerFactory
2021-03-15T11:04:23,416|[INFO ] LogHelper - HHH000204: Processing PersistenceUnitInfo [name: simplebloodbank-PU-test]
2021-03-15T11:04:23,421|[DEBUG] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@59c4921f
2021-03-15T11:04:23,422|[DEBUG] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@59c4921f
2021-03-15T11:04:23,422|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@59c4921f
2021-03-15T11:04:23,422|[DEBUG] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7f2e2ae6
2021-03-15T11:04:23,422|[DEBUG] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@3860542a
2021-03-15T11:04:23,422|[DEBUG] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@6fb07db6
2021-03-15T11:04:23,422|[DEBUG] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@6cd76b55
2021-03-15T11:04:23,422|[DEBUG] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@6cd76b55
2021-03-15T11:04:23,422|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6cd76b55
2021-03-15T11:04:23,422|[DEBUG] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@1124fd8
2021-03-15T11:04:23,422|[DEBUG] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@1124fd8
2021-03-15T11:04:23,423|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1124fd8
2021-03-15T11:04:23,423|[DEBUG] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@283730de
2021-03-15T11:04:23,423|[DEBUG] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@283730de
2021-03-15T11:04:23,423|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@283730de
2021-03-15T11:04:23,423|[DEBUG] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@57212116
2021-03-15T11:04:23,423|[DEBUG] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@57212116
2021-03-15T11:04:23,423|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@57212116
2021-03-15T11:04:23,423|[DEBUG] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@17b17fa8
2021-03-15T11:04:23,424|[DEBUG] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@17b17fa8
2021-03-15T11:04:23,424|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@17b17fa8
2021-03-15T11:04:23,424|[DEBUG] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@463b865b
2021-03-15T11:04:23,424|[DEBUG] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@463b865b
2021-03-15T11:04:23,424|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@463b865b
2021-03-15T11:04:23,424|[DEBUG] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@4fc2e703
2021-03-15T11:04:23,424|[DEBUG] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@4fc2e703
2021-03-15T11:04:23,424|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4fc2e703
2021-03-15T11:04:23,425|[DEBUG] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4ca3923
2021-03-15T11:04:23,425|[DEBUG] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4ca3923
2021-03-15T11:04:23,425|[DEBUG] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6d88a3f4
2021-03-15T11:04:23,425|[DEBUG] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6d88a3f4
2021-03-15T11:04:23,425|[DEBUG] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@5882ff51
2021-03-15T11:04:23,425|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@5882ff51
2021-03-15T11:04:23,425|[DEBUG] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4c5afa2d
2021-03-15T11:04:23,425|[DEBUG] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3177221b
2021-03-15T11:04:23,425|[DEBUG] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@654b9f0
2021-03-15T11:04:23,425|[DEBUG] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@654b9f0
2021-03-15T11:04:23,426|[DEBUG] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@533c62d0
2021-03-15T11:04:23,426|[DEBUG] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@533c62d0
2021-03-15T11:04:23,426|[DEBUG] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@7c654cfc
2021-03-15T11:04:23,426|[DEBUG] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@7c654cfc
2021-03-15T11:04:23,426|[DEBUG] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@74d41fcf
2021-03-15T11:04:23,426|[DEBUG] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@74d41fcf
2021-03-15T11:04:23,426|[DEBUG] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@10d28ee2
2021-03-15T11:04:23,426|[DEBUG] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@10d28ee2
2021-03-15T11:04:23,426|[DEBUG] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1355d2a0
2021-03-15T11:04:23,426|[DEBUG] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1355d2a0
2021-03-15T11:04:23,426|[DEBUG] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7773d139
2021-03-15T11:04:23,427|[DEBUG] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7773d139
2021-03-15T11:04:23,427|[DEBUG] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1f0b2ffb
2021-03-15T11:04:23,427|[DEBUG] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1f0b2ffb
2021-03-15T11:04:23,427|[DEBUG] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3f2fd933
2021-03-15T11:04:23,427|[DEBUG] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3f2fd933
2021-03-15T11:04:23,427|[DEBUG] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@77d5a3ee
2021-03-15T11:04:23,427|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@77d5a3ee
2021-03-15T11:04:23,427|[DEBUG] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@5095f89a
2021-03-15T11:04:23,428|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5095f89a
2021-03-15T11:04:23,428|[DEBUG] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@15c8bb25
2021-03-15T11:04:23,428|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@15c8bb25
2021-03-15T11:04:23,428|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@15c8bb25
2021-03-15T11:04:23,428|[DEBUG] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@34b4f6c3
2021-03-15T11:04:23,428|[DEBUG] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@2a04a440
2021-03-15T11:04:23,428|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2a04a440
2021-03-15T11:04:23,428|[DEBUG] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2a04a440
2021-03-15T11:04:23,428|[DEBUG] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7f3964b0
2021-03-15T11:04:23,428|[DEBUG] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@dc46916
2021-03-15T11:04:23,428|[DEBUG] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@faa592b
2021-03-15T11:04:23,428|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@faa592b
2021-03-15T11:04:23,429|[DEBUG] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@7df468f6
2021-03-15T11:04:23,429|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7df468f6
2021-03-15T11:04:23,429|[DEBUG] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@35f9c37c
2021-03-15T11:04:23,429|[DEBUG] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@35f9c37c
2021-03-15T11:04:23,429|[DEBUG] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@5bfa2801
2021-03-15T11:04:23,429|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5bfa2801
2021-03-15T11:04:23,429|[DEBUG] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@25428bab
2021-03-15T11:04:23,429|[DEBUG] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@25428bab
2021-03-15T11:04:23,429|[DEBUG] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@418e1cd6
2021-03-15T11:04:23,429|[DEBUG] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@5ef99f75
2021-03-15T11:04:23,429|[DEBUG] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@5ef99f75
2021-03-15T11:04:23,429|[DEBUG] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@5ef99f75
2021-03-15T11:04:23,430|[DEBUG] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1b438ec
2021-03-15T11:04:23,430|[DEBUG] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1b438ec
2021-03-15T11:04:23,430|[DEBUG] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1b438ec
2021-03-15T11:04:23,430|[DEBUG] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@4f241437
2021-03-15T11:04:23,430|[DEBUG] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@58e48d9
2021-03-15T11:04:23,430|[DEBUG] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@27c243a3
2021-03-15T11:04:23,430|[DEBUG] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@27c243a3
2021-03-15T11:04:23,430|[DEBUG] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@27c243a3
2021-03-15T11:04:23,430|[DEBUG] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@da87122
2021-03-15T11:04:23,430|[DEBUG] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@da87122
2021-03-15T11:04:23,430|[DEBUG] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@da87122
2021-03-15T11:04:23,430|[DEBUG] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@2e47ec5e
2021-03-15T11:04:23,430|[DEBUG] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@d3e9b94
2021-03-15T11:04:23,431|[DEBUG] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@4c3133a1
2021-03-15T11:04:23,431|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4c3133a1
2021-03-15T11:04:23,431|[DEBUG] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@26f6fbbd
2021-03-15T11:04:23,431|[DEBUG] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@3fa27158
2021-03-15T11:04:23,431|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3fa27158
2021-03-15T11:04:23,431|[DEBUG] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@58da1b27
2021-03-15T11:04:23,431|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@58da1b27
2021-03-15T11:04:23,431|[DEBUG] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@29862f60
2021-03-15T11:04:23,431|[DEBUG] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@644acaff
2021-03-15T11:04:23,431|[DEBUG] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@771047b4
2021-03-15T11:04:23,431|[DEBUG] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@677f1963
2021-03-15T11:04:23,431|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@677f1963
2021-03-15T11:04:23,431|[DEBUG] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3391a67f
2021-03-15T11:04:23,431|[DEBUG] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3ecf180
2021-03-15T11:04:23,431|[DEBUG] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@11326597
2021-03-15T11:04:23,432|[DEBUG] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3de6799f
2021-03-15T11:04:23,432|[DEBUG] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@37a8202
2021-03-15T11:04:23,432|[DEBUG] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@67fe131c
2021-03-15T11:04:23,432|[DEBUG] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@65e2cca9
2021-03-15T11:04:23,432|[DEBUG] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6bc67b0b
]]></system-out>
  </testcase>
  <testcase name="testExtractDataAsList" classname="logic.AccountLogicTest" time="0.056">
    <error type="org.hibernate.service.spi.ServiceException"><![CDATA[org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
	at logic.AccountLogicTest.setUp(AccountLogicTest.java:56)
Caused by: org.hibernate.engine.jndi.JndiException: Unable to lookup JNDI name [java:comp/env/jdbc/SimpleBloodBank]
	at logic.AccountLogicTest.setUp(AccountLogicTest.java:56)
Caused by: javax.naming.NameNotFoundException: Name [comp/env/jdbc/SimpleBloodBank] is not bound in this Context. Unable to find [comp].
	at logic.AccountLogicTest.setUp(AccountLogicTest.java:56)
]]></error>
    <system-out><![CDATA[2021-03-15T11:04:23,459|[DEBUG] EMFactory - getting EntityManagerFactory
2021-03-15T11:04:23,459|[DEBUG] EMFactory - initializeing EntityManagerFactory
2021-03-15T11:04:23,460|[DEBUG] EMFactory - creating EntityManagerFactory
2021-03-15T11:04:23,468|[INFO ] LogHelper - HHH000204: Processing PersistenceUnitInfo [name: simplebloodbank-PU-test]
2021-03-15T11:04:23,473|[DEBUG] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@59c4921f
2021-03-15T11:04:23,474|[DEBUG] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@59c4921f
2021-03-15T11:04:23,474|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@59c4921f
2021-03-15T11:04:23,474|[DEBUG] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7f2e2ae6
2021-03-15T11:04:23,474|[DEBUG] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@3860542a
2021-03-15T11:04:23,474|[DEBUG] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@6fb07db6
2021-03-15T11:04:23,474|[DEBUG] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@6cd76b55
2021-03-15T11:04:23,474|[DEBUG] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@6cd76b55
2021-03-15T11:04:23,474|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6cd76b55
2021-03-15T11:04:23,474|[DEBUG] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@1124fd8
2021-03-15T11:04:23,474|[DEBUG] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@1124fd8
2021-03-15T11:04:23,475|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1124fd8
2021-03-15T11:04:23,475|[DEBUG] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@283730de
2021-03-15T11:04:23,475|[DEBUG] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@283730de
2021-03-15T11:04:23,475|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@283730de
2021-03-15T11:04:23,475|[DEBUG] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@57212116
2021-03-15T11:04:23,475|[DEBUG] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@57212116
2021-03-15T11:04:23,475|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@57212116
2021-03-15T11:04:23,475|[DEBUG] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@17b17fa8
2021-03-15T11:04:23,475|[DEBUG] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@17b17fa8
2021-03-15T11:04:23,475|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@17b17fa8
2021-03-15T11:04:23,476|[DEBUG] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@463b865b
2021-03-15T11:04:23,476|[DEBUG] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@463b865b
2021-03-15T11:04:23,476|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@463b865b
2021-03-15T11:04:23,476|[DEBUG] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@4fc2e703
2021-03-15T11:04:23,476|[DEBUG] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@4fc2e703
2021-03-15T11:04:23,476|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4fc2e703
2021-03-15T11:04:23,476|[DEBUG] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4ca3923
2021-03-15T11:04:23,476|[DEBUG] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4ca3923
2021-03-15T11:04:23,476|[DEBUG] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6d88a3f4
2021-03-15T11:04:23,476|[DEBUG] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6d88a3f4
2021-03-15T11:04:23,476|[DEBUG] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@5882ff51
2021-03-15T11:04:23,476|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@5882ff51
2021-03-15T11:04:23,477|[DEBUG] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4c5afa2d
2021-03-15T11:04:23,477|[DEBUG] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3177221b
2021-03-15T11:04:23,477|[DEBUG] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@654b9f0
2021-03-15T11:04:23,477|[DEBUG] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@654b9f0
2021-03-15T11:04:23,477|[DEBUG] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@533c62d0
2021-03-15T11:04:23,478|[DEBUG] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@533c62d0
2021-03-15T11:04:23,478|[DEBUG] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@7c654cfc
2021-03-15T11:04:23,478|[DEBUG] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@7c654cfc
2021-03-15T11:04:23,478|[DEBUG] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@74d41fcf
2021-03-15T11:04:23,478|[DEBUG] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@74d41fcf
2021-03-15T11:04:23,478|[DEBUG] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@10d28ee2
2021-03-15T11:04:23,478|[DEBUG] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@10d28ee2
2021-03-15T11:04:23,478|[DEBUG] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1355d2a0
2021-03-15T11:04:23,478|[DEBUG] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1355d2a0
2021-03-15T11:04:23,479|[DEBUG] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7773d139
2021-03-15T11:04:23,479|[DEBUG] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7773d139
2021-03-15T11:04:23,479|[DEBUG] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1f0b2ffb
2021-03-15T11:04:23,479|[DEBUG] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1f0b2ffb
2021-03-15T11:04:23,479|[DEBUG] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3f2fd933
2021-03-15T11:04:23,479|[DEBUG] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3f2fd933
2021-03-15T11:04:23,479|[DEBUG] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@77d5a3ee
2021-03-15T11:04:23,479|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@77d5a3ee
2021-03-15T11:04:23,479|[DEBUG] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@5095f89a
2021-03-15T11:04:23,479|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5095f89a
2021-03-15T11:04:23,480|[DEBUG] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@15c8bb25
2021-03-15T11:04:23,480|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@15c8bb25
2021-03-15T11:04:23,480|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@15c8bb25
2021-03-15T11:04:23,480|[DEBUG] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@34b4f6c3
2021-03-15T11:04:23,480|[DEBUG] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@2a04a440
2021-03-15T11:04:23,480|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2a04a440
2021-03-15T11:04:23,480|[DEBUG] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2a04a440
2021-03-15T11:04:23,480|[DEBUG] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7f3964b0
2021-03-15T11:04:23,480|[DEBUG] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@dc46916
2021-03-15T11:04:23,480|[DEBUG] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@faa592b
2021-03-15T11:04:23,480|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@faa592b
2021-03-15T11:04:23,480|[DEBUG] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@7df468f6
2021-03-15T11:04:23,481|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7df468f6
2021-03-15T11:04:23,481|[DEBUG] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@35f9c37c
2021-03-15T11:04:23,481|[DEBUG] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@35f9c37c
2021-03-15T11:04:23,481|[DEBUG] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@5bfa2801
2021-03-15T11:04:23,481|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5bfa2801
2021-03-15T11:04:23,481|[DEBUG] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@25428bab
2021-03-15T11:04:23,481|[DEBUG] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@25428bab
2021-03-15T11:04:23,481|[DEBUG] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@418e1cd6
2021-03-15T11:04:23,481|[DEBUG] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@5ef99f75
2021-03-15T11:04:23,481|[DEBUG] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@5ef99f75
2021-03-15T11:04:23,481|[DEBUG] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@5ef99f75
2021-03-15T11:04:23,481|[DEBUG] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1b438ec
2021-03-15T11:04:23,481|[DEBUG] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1b438ec
2021-03-15T11:04:23,481|[DEBUG] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1b438ec
2021-03-15T11:04:23,482|[DEBUG] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@4f241437
2021-03-15T11:04:23,482|[DEBUG] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@58e48d9
2021-03-15T11:04:23,482|[DEBUG] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@27c243a3
2021-03-15T11:04:23,482|[DEBUG] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@27c243a3
2021-03-15T11:04:23,482|[DEBUG] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@27c243a3
2021-03-15T11:04:23,482|[DEBUG] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@da87122
2021-03-15T11:04:23,482|[DEBUG] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@da87122
2021-03-15T11:04:23,482|[DEBUG] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@da87122
2021-03-15T11:04:23,482|[DEBUG] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@2e47ec5e
2021-03-15T11:04:23,482|[DEBUG] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@d3e9b94
2021-03-15T11:04:23,482|[DEBUG] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@4c3133a1
2021-03-15T11:04:23,482|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4c3133a1
2021-03-15T11:04:23,483|[DEBUG] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@26f6fbbd
2021-03-15T11:04:23,483|[DEBUG] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@3fa27158
2021-03-15T11:04:23,483|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3fa27158
2021-03-15T11:04:23,483|[DEBUG] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@58da1b27
2021-03-15T11:04:23,483|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@58da1b27
2021-03-15T11:04:23,483|[DEBUG] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@29862f60
2021-03-15T11:04:23,483|[DEBUG] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@644acaff
2021-03-15T11:04:23,483|[DEBUG] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@771047b4
2021-03-15T11:04:23,483|[DEBUG] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@677f1963
2021-03-15T11:04:23,483|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@677f1963
2021-03-15T11:04:23,483|[DEBUG] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@740639ba
2021-03-15T11:04:23,484|[DEBUG] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3d1cb317
2021-03-15T11:04:23,484|[DEBUG] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@563d89de
2021-03-15T11:04:23,484|[DEBUG] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2775dd2e
2021-03-15T11:04:23,484|[DEBUG] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@627beb93
2021-03-15T11:04:23,484|[DEBUG] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3aa768c0
2021-03-15T11:04:23,484|[DEBUG] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@ee6533
2021-03-15T11:04:23,485|[DEBUG] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@97b54ad
]]></system-out>
  </testcase>
  <testcase name="testGetAccountWIthUser" classname="logic.AccountLogicTest" time="0.039">
    <error type="org.hibernate.service.spi.ServiceException"><![CDATA[org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
	at logic.AccountLogicTest.setUp(AccountLogicTest.java:56)
Caused by: org.hibernate.engine.jndi.JndiException: Unable to lookup JNDI name [java:comp/env/jdbc/SimpleBloodBank]
	at logic.AccountLogicTest.setUp(AccountLogicTest.java:56)
Caused by: javax.naming.NameNotFoundException: Name [comp/env/jdbc/SimpleBloodBank] is not bound in this Context. Unable to find [comp].
	at logic.AccountLogicTest.setUp(AccountLogicTest.java:56)
]]></error>
    <system-out><![CDATA[2021-03-15T11:04:23,520|[DEBUG] EMFactory - getting EntityManagerFactory
2021-03-15T11:04:23,520|[DEBUG] EMFactory - initializeing EntityManagerFactory
2021-03-15T11:04:23,520|[DEBUG] EMFactory - creating EntityManagerFactory
2021-03-15T11:04:23,525|[INFO ] LogHelper - HHH000204: Processing PersistenceUnitInfo [name: simplebloodbank-PU-test]
2021-03-15T11:04:23,530|[DEBUG] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@59c4921f
2021-03-15T11:04:23,530|[DEBUG] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@59c4921f
2021-03-15T11:04:23,530|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@59c4921f
2021-03-15T11:04:23,530|[DEBUG] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7f2e2ae6
2021-03-15T11:04:23,530|[DEBUG] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@3860542a
2021-03-15T11:04:23,530|[DEBUG] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@6fb07db6
2021-03-15T11:04:23,531|[DEBUG] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@6cd76b55
2021-03-15T11:04:23,531|[DEBUG] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@6cd76b55
2021-03-15T11:04:23,531|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6cd76b55
2021-03-15T11:04:23,531|[DEBUG] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@1124fd8
2021-03-15T11:04:23,531|[DEBUG] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@1124fd8
2021-03-15T11:04:23,531|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1124fd8
2021-03-15T11:04:23,531|[DEBUG] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@283730de
2021-03-15T11:04:23,531|[DEBUG] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@283730de
2021-03-15T11:04:23,531|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@283730de
2021-03-15T11:04:23,531|[DEBUG] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@57212116
2021-03-15T11:04:23,531|[DEBUG] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@57212116
2021-03-15T11:04:23,531|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@57212116
2021-03-15T11:04:23,531|[DEBUG] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@17b17fa8
2021-03-15T11:04:23,531|[DEBUG] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@17b17fa8
2021-03-15T11:04:23,531|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@17b17fa8
2021-03-15T11:04:23,532|[DEBUG] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@463b865b
2021-03-15T11:04:23,532|[DEBUG] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@463b865b
2021-03-15T11:04:23,532|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@463b865b
2021-03-15T11:04:23,532|[DEBUG] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@4fc2e703
2021-03-15T11:04:23,532|[DEBUG] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@4fc2e703
2021-03-15T11:04:23,532|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4fc2e703
2021-03-15T11:04:23,532|[DEBUG] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4ca3923
2021-03-15T11:04:23,532|[DEBUG] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4ca3923
2021-03-15T11:04:23,532|[DEBUG] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6d88a3f4
2021-03-15T11:04:23,532|[DEBUG] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6d88a3f4
2021-03-15T11:04:23,532|[DEBUG] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@5882ff51
2021-03-15T11:04:23,532|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@5882ff51
2021-03-15T11:04:23,532|[DEBUG] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4c5afa2d
2021-03-15T11:04:23,532|[DEBUG] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3177221b
2021-03-15T11:04:23,533|[DEBUG] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@654b9f0
2021-03-15T11:04:23,533|[DEBUG] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@654b9f0
2021-03-15T11:04:23,533|[DEBUG] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@533c62d0
2021-03-15T11:04:23,533|[DEBUG] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@533c62d0
2021-03-15T11:04:23,533|[DEBUG] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@7c654cfc
2021-03-15T11:04:23,533|[DEBUG] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@7c654cfc
2021-03-15T11:04:23,533|[DEBUG] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@74d41fcf
2021-03-15T11:04:23,533|[DEBUG] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@74d41fcf
2021-03-15T11:04:23,533|[DEBUG] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@10d28ee2
2021-03-15T11:04:23,533|[DEBUG] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@10d28ee2
2021-03-15T11:04:23,533|[DEBUG] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1355d2a0
2021-03-15T11:04:23,533|[DEBUG] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1355d2a0
2021-03-15T11:04:23,534|[DEBUG] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7773d139
2021-03-15T11:04:23,534|[DEBUG] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7773d139
2021-03-15T11:04:23,534|[DEBUG] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1f0b2ffb
2021-03-15T11:04:23,534|[DEBUG] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1f0b2ffb
2021-03-15T11:04:23,534|[DEBUG] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3f2fd933
2021-03-15T11:04:23,534|[DEBUG] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3f2fd933
2021-03-15T11:04:23,534|[DEBUG] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@77d5a3ee
2021-03-15T11:04:23,534|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@77d5a3ee
2021-03-15T11:04:23,534|[DEBUG] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@5095f89a
2021-03-15T11:04:23,534|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5095f89a
2021-03-15T11:04:23,534|[DEBUG] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@15c8bb25
2021-03-15T11:04:23,534|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@15c8bb25
2021-03-15T11:04:23,534|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@15c8bb25
2021-03-15T11:04:23,535|[DEBUG] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@34b4f6c3
2021-03-15T11:04:23,535|[DEBUG] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@2a04a440
2021-03-15T11:04:23,535|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2a04a440
2021-03-15T11:04:23,535|[DEBUG] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2a04a440
2021-03-15T11:04:23,535|[DEBUG] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7f3964b0
2021-03-15T11:04:23,535|[DEBUG] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@dc46916
2021-03-15T11:04:23,535|[DEBUG] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@faa592b
2021-03-15T11:04:23,536|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@faa592b
2021-03-15T11:04:23,536|[DEBUG] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@7df468f6
2021-03-15T11:04:23,536|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7df468f6
2021-03-15T11:04:23,536|[DEBUG] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@35f9c37c
2021-03-15T11:04:23,536|[DEBUG] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@35f9c37c
2021-03-15T11:04:23,536|[DEBUG] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@5bfa2801
2021-03-15T11:04:23,536|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5bfa2801
2021-03-15T11:04:23,536|[DEBUG] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@25428bab
2021-03-15T11:04:23,536|[DEBUG] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@25428bab
2021-03-15T11:04:23,536|[DEBUG] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@418e1cd6
2021-03-15T11:04:23,536|[DEBUG] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@5ef99f75
2021-03-15T11:04:23,536|[DEBUG] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@5ef99f75
2021-03-15T11:04:23,537|[DEBUG] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@5ef99f75
2021-03-15T11:04:23,537|[DEBUG] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1b438ec
2021-03-15T11:04:23,537|[DEBUG] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1b438ec
2021-03-15T11:04:23,537|[DEBUG] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1b438ec
2021-03-15T11:04:23,537|[DEBUG] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@4f241437
2021-03-15T11:04:23,537|[DEBUG] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@58e48d9
2021-03-15T11:04:23,537|[DEBUG] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@27c243a3
2021-03-15T11:04:23,537|[DEBUG] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@27c243a3
2021-03-15T11:04:23,537|[DEBUG] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@27c243a3
2021-03-15T11:04:23,537|[DEBUG] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@da87122
2021-03-15T11:04:23,537|[DEBUG] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@da87122
2021-03-15T11:04:23,537|[DEBUG] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@da87122
2021-03-15T11:04:23,537|[DEBUG] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@2e47ec5e
2021-03-15T11:04:23,537|[DEBUG] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@d3e9b94
2021-03-15T11:04:23,537|[DEBUG] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@4c3133a1
2021-03-15T11:04:23,537|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4c3133a1
2021-03-15T11:04:23,537|[DEBUG] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@26f6fbbd
2021-03-15T11:04:23,538|[DEBUG] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@3fa27158
2021-03-15T11:04:23,538|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3fa27158
2021-03-15T11:04:23,538|[DEBUG] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@58da1b27
2021-03-15T11:04:23,538|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@58da1b27
2021-03-15T11:04:23,538|[DEBUG] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@29862f60
2021-03-15T11:04:23,538|[DEBUG] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@644acaff
2021-03-15T11:04:23,538|[DEBUG] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@771047b4
2021-03-15T11:04:23,538|[DEBUG] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@677f1963
2021-03-15T11:04:23,538|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@677f1963
2021-03-15T11:04:23,538|[DEBUG] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@9a6c67c
2021-03-15T11:04:23,538|[DEBUG] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@657e11b0
2021-03-15T11:04:23,538|[DEBUG] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3d5d552d
2021-03-15T11:04:23,539|[DEBUG] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@9def6d
2021-03-15T11:04:23,539|[DEBUG] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3fb75c24
2021-03-15T11:04:23,539|[DEBUG] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2a5129f3
2021-03-15T11:04:23,539|[DEBUG] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@7d72f5a9
2021-03-15T11:04:23,539|[DEBUG] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@127b9bed
]]></system-out>
  </testcase>
  <testcase name="testGetAccountsWithPassword" classname="logic.AccountLogicTest" time="0.039">
    <error type="org.hibernate.service.spi.ServiceException"><![CDATA[org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
	at logic.AccountLogicTest.setUp(AccountLogicTest.java:56)
Caused by: org.hibernate.engine.jndi.JndiException: Unable to lookup JNDI name [java:comp/env/jdbc/SimpleBloodBank]
	at logic.AccountLogicTest.setUp(AccountLogicTest.java:56)
Caused by: javax.naming.NameNotFoundException: Name [comp/env/jdbc/SimpleBloodBank] is not bound in this Context. Unable to find [comp].
	at logic.AccountLogicTest.setUp(AccountLogicTest.java:56)
]]></error>
    <system-out><![CDATA[2021-03-15T11:04:23,559|[DEBUG] EMFactory - getting EntityManagerFactory
2021-03-15T11:04:23,559|[DEBUG] EMFactory - initializeing EntityManagerFactory
2021-03-15T11:04:23,559|[DEBUG] EMFactory - creating EntityManagerFactory
2021-03-15T11:04:23,564|[INFO ] LogHelper - HHH000204: Processing PersistenceUnitInfo [name: simplebloodbank-PU-test]
2021-03-15T11:04:23,570|[DEBUG] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@59c4921f
2021-03-15T11:04:23,570|[DEBUG] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@59c4921f
2021-03-15T11:04:23,570|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@59c4921f
2021-03-15T11:04:23,570|[DEBUG] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7f2e2ae6
2021-03-15T11:04:23,570|[DEBUG] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@3860542a
2021-03-15T11:04:23,570|[DEBUG] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@6fb07db6
2021-03-15T11:04:23,570|[DEBUG] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@6cd76b55
2021-03-15T11:04:23,570|[DEBUG] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@6cd76b55
2021-03-15T11:04:23,570|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6cd76b55
2021-03-15T11:04:23,570|[DEBUG] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@1124fd8
2021-03-15T11:04:23,570|[DEBUG] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@1124fd8
2021-03-15T11:04:23,570|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1124fd8
2021-03-15T11:04:23,571|[DEBUG] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@283730de
2021-03-15T11:04:23,571|[DEBUG] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@283730de
2021-03-15T11:04:23,571|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@283730de
2021-03-15T11:04:23,571|[DEBUG] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@57212116
2021-03-15T11:04:23,571|[DEBUG] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@57212116
2021-03-15T11:04:23,571|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@57212116
2021-03-15T11:04:23,571|[DEBUG] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@17b17fa8
2021-03-15T11:04:23,571|[DEBUG] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@17b17fa8
2021-03-15T11:04:23,571|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@17b17fa8
2021-03-15T11:04:23,571|[DEBUG] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@463b865b
2021-03-15T11:04:23,571|[DEBUG] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@463b865b
2021-03-15T11:04:23,571|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@463b865b
2021-03-15T11:04:23,571|[DEBUG] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@4fc2e703
2021-03-15T11:04:23,571|[DEBUG] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@4fc2e703
2021-03-15T11:04:23,571|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4fc2e703
2021-03-15T11:04:23,572|[DEBUG] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4ca3923
2021-03-15T11:04:23,572|[DEBUG] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4ca3923
2021-03-15T11:04:23,572|[DEBUG] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6d88a3f4
2021-03-15T11:04:23,572|[DEBUG] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6d88a3f4
2021-03-15T11:04:23,572|[DEBUG] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@5882ff51
2021-03-15T11:04:23,572|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@5882ff51
2021-03-15T11:04:23,572|[DEBUG] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4c5afa2d
2021-03-15T11:04:23,572|[DEBUG] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3177221b
2021-03-15T11:04:23,572|[DEBUG] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@654b9f0
2021-03-15T11:04:23,572|[DEBUG] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@654b9f0
2021-03-15T11:04:23,572|[DEBUG] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@533c62d0
2021-03-15T11:04:23,572|[DEBUG] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@533c62d0
2021-03-15T11:04:23,572|[DEBUG] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@7c654cfc
2021-03-15T11:04:23,572|[DEBUG] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@7c654cfc
2021-03-15T11:04:23,572|[DEBUG] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@74d41fcf
2021-03-15T11:04:23,573|[DEBUG] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@74d41fcf
2021-03-15T11:04:23,573|[DEBUG] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@10d28ee2
2021-03-15T11:04:23,573|[DEBUG] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@10d28ee2
2021-03-15T11:04:23,573|[DEBUG] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1355d2a0
2021-03-15T11:04:23,573|[DEBUG] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1355d2a0
2021-03-15T11:04:23,573|[DEBUG] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7773d139
2021-03-15T11:04:23,573|[DEBUG] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7773d139
2021-03-15T11:04:23,573|[DEBUG] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1f0b2ffb
2021-03-15T11:04:23,573|[DEBUG] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1f0b2ffb
2021-03-15T11:04:23,573|[DEBUG] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3f2fd933
2021-03-15T11:04:23,573|[DEBUG] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3f2fd933
2021-03-15T11:04:23,573|[DEBUG] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@77d5a3ee
2021-03-15T11:04:23,573|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@77d5a3ee
2021-03-15T11:04:23,573|[DEBUG] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@5095f89a
2021-03-15T11:04:23,574|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5095f89a
2021-03-15T11:04:23,574|[DEBUG] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@15c8bb25
2021-03-15T11:04:23,574|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@15c8bb25
2021-03-15T11:04:23,574|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@15c8bb25
2021-03-15T11:04:23,574|[DEBUG] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@34b4f6c3
2021-03-15T11:04:23,574|[DEBUG] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@2a04a440
2021-03-15T11:04:23,574|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2a04a440
2021-03-15T11:04:23,575|[DEBUG] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2a04a440
2021-03-15T11:04:23,575|[DEBUG] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7f3964b0
2021-03-15T11:04:23,575|[DEBUG] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@dc46916
2021-03-15T11:04:23,575|[DEBUG] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@faa592b
2021-03-15T11:04:23,575|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@faa592b
2021-03-15T11:04:23,575|[DEBUG] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@7df468f6
2021-03-15T11:04:23,575|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7df468f6
2021-03-15T11:04:23,576|[DEBUG] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@35f9c37c
2021-03-15T11:04:23,576|[DEBUG] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@35f9c37c
2021-03-15T11:04:23,577|[DEBUG] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@5bfa2801
2021-03-15T11:04:23,577|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5bfa2801
2021-03-15T11:04:23,577|[DEBUG] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@25428bab
2021-03-15T11:04:23,577|[DEBUG] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@25428bab
2021-03-15T11:04:23,577|[DEBUG] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@418e1cd6
2021-03-15T11:04:23,577|[DEBUG] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@5ef99f75
2021-03-15T11:04:23,578|[DEBUG] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@5ef99f75
2021-03-15T11:04:23,578|[DEBUG] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@5ef99f75
2021-03-15T11:04:23,578|[DEBUG] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1b438ec
2021-03-15T11:04:23,578|[DEBUG] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1b438ec
2021-03-15T11:04:23,578|[DEBUG] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1b438ec
2021-03-15T11:04:23,578|[DEBUG] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@4f241437
2021-03-15T11:04:23,578|[DEBUG] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@58e48d9
2021-03-15T11:04:23,578|[DEBUG] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@27c243a3
2021-03-15T11:04:23,578|[DEBUG] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@27c243a3
2021-03-15T11:04:23,579|[DEBUG] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@27c243a3
2021-03-15T11:04:23,579|[DEBUG] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@da87122
2021-03-15T11:04:23,579|[DEBUG] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@da87122
2021-03-15T11:04:23,579|[DEBUG] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@da87122
2021-03-15T11:04:23,579|[DEBUG] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@2e47ec5e
2021-03-15T11:04:23,579|[DEBUG] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@d3e9b94
2021-03-15T11:04:23,579|[DEBUG] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@4c3133a1
2021-03-15T11:04:23,579|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4c3133a1
2021-03-15T11:04:23,579|[DEBUG] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@26f6fbbd
2021-03-15T11:04:23,579|[DEBUG] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@3fa27158
2021-03-15T11:04:23,579|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3fa27158
2021-03-15T11:04:23,579|[DEBUG] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@58da1b27
2021-03-15T11:04:23,579|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@58da1b27
2021-03-15T11:04:23,579|[DEBUG] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@29862f60
2021-03-15T11:04:23,579|[DEBUG] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@644acaff
2021-03-15T11:04:23,579|[DEBUG] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@771047b4
2021-03-15T11:04:23,579|[DEBUG] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@677f1963
2021-03-15T11:04:23,579|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@677f1963
2021-03-15T11:04:23,579|[DEBUG] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3580dd47
2021-03-15T11:04:23,580|[DEBUG] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6942d9bc
2021-03-15T11:04:23,580|[DEBUG] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5aa9fdc2
2021-03-15T11:04:23,580|[DEBUG] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@436d140d
2021-03-15T11:04:23,580|[DEBUG] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@703483c2
2021-03-15T11:04:23,580|[DEBUG] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@f442b41
2021-03-15T11:04:23,580|[DEBUG] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1a168086
2021-03-15T11:04:23,580|[DEBUG] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@317032b5
]]></system-out>
  </testcase>
  <testcase name="testCreateEntityAndAdd" classname="logic.AccountLogicTest" time="0.037">
    <error type="org.hibernate.service.spi.ServiceException"><![CDATA[org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
	at logic.AccountLogicTest.setUp(AccountLogicTest.java:56)
Caused by: org.hibernate.engine.jndi.JndiException: Unable to lookup JNDI name [java:comp/env/jdbc/SimpleBloodBank]
	at logic.AccountLogicTest.setUp(AccountLogicTest.java:56)
Caused by: javax.naming.NameNotFoundException: Name [comp/env/jdbc/SimpleBloodBank] is not bound in this Context. Unable to find [comp].
	at logic.AccountLogicTest.setUp(AccountLogicTest.java:56)
]]></error>
    <system-out><![CDATA[2021-03-15T11:04:23,600|[DEBUG] EMFactory - getting EntityManagerFactory
2021-03-15T11:04:23,600|[DEBUG] EMFactory - initializeing EntityManagerFactory
2021-03-15T11:04:23,600|[DEBUG] EMFactory - creating EntityManagerFactory
2021-03-15T11:04:23,608|[INFO ] LogHelper - HHH000204: Processing PersistenceUnitInfo [name: simplebloodbank-PU-test]
2021-03-15T11:04:23,612|[DEBUG] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@59c4921f
2021-03-15T11:04:23,613|[DEBUG] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@59c4921f
2021-03-15T11:04:23,613|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@59c4921f
2021-03-15T11:04:23,613|[DEBUG] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7f2e2ae6
2021-03-15T11:04:23,613|[DEBUG] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@3860542a
2021-03-15T11:04:23,613|[DEBUG] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@6fb07db6
2021-03-15T11:04:23,613|[DEBUG] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@6cd76b55
2021-03-15T11:04:23,613|[DEBUG] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@6cd76b55
2021-03-15T11:04:23,613|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6cd76b55
2021-03-15T11:04:23,613|[DEBUG] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@1124fd8
2021-03-15T11:04:23,613|[DEBUG] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@1124fd8
2021-03-15T11:04:23,613|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1124fd8
2021-03-15T11:04:23,613|[DEBUG] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@283730de
2021-03-15T11:04:23,613|[DEBUG] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@283730de
2021-03-15T11:04:23,613|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@283730de
2021-03-15T11:04:23,613|[DEBUG] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@57212116
2021-03-15T11:04:23,613|[DEBUG] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@57212116
2021-03-15T11:04:23,613|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@57212116
2021-03-15T11:04:23,613|[DEBUG] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@17b17fa8
2021-03-15T11:04:23,613|[DEBUG] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@17b17fa8
2021-03-15T11:04:23,613|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@17b17fa8
2021-03-15T11:04:23,613|[DEBUG] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@463b865b
2021-03-15T11:04:23,613|[DEBUG] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@463b865b
2021-03-15T11:04:23,613|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@463b865b
2021-03-15T11:04:23,613|[DEBUG] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@4fc2e703
2021-03-15T11:04:23,613|[DEBUG] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@4fc2e703
2021-03-15T11:04:23,614|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4fc2e703
2021-03-15T11:04:23,614|[DEBUG] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4ca3923
2021-03-15T11:04:23,614|[DEBUG] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4ca3923
2021-03-15T11:04:23,614|[DEBUG] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6d88a3f4
2021-03-15T11:04:23,614|[DEBUG] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6d88a3f4
2021-03-15T11:04:23,614|[DEBUG] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@5882ff51
2021-03-15T11:04:23,614|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@5882ff51
2021-03-15T11:04:23,614|[DEBUG] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4c5afa2d
2021-03-15T11:04:23,614|[DEBUG] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3177221b
2021-03-15T11:04:23,614|[DEBUG] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@654b9f0
2021-03-15T11:04:23,614|[DEBUG] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@654b9f0
2021-03-15T11:04:23,614|[DEBUG] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@533c62d0
2021-03-15T11:04:23,614|[DEBUG] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@533c62d0
2021-03-15T11:04:23,614|[DEBUG] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@7c654cfc
2021-03-15T11:04:23,614|[DEBUG] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@7c654cfc
2021-03-15T11:04:23,614|[DEBUG] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@74d41fcf
2021-03-15T11:04:23,614|[DEBUG] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@74d41fcf
2021-03-15T11:04:23,614|[DEBUG] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@10d28ee2
2021-03-15T11:04:23,614|[DEBUG] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@10d28ee2
2021-03-15T11:04:23,614|[DEBUG] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1355d2a0
2021-03-15T11:04:23,614|[DEBUG] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1355d2a0
2021-03-15T11:04:23,614|[DEBUG] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7773d139
2021-03-15T11:04:23,614|[DEBUG] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7773d139
2021-03-15T11:04:23,614|[DEBUG] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1f0b2ffb
2021-03-15T11:04:23,614|[DEBUG] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1f0b2ffb
2021-03-15T11:04:23,614|[DEBUG] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3f2fd933
2021-03-15T11:04:23,614|[DEBUG] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3f2fd933
2021-03-15T11:04:23,614|[DEBUG] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@77d5a3ee
2021-03-15T11:04:23,614|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@77d5a3ee
2021-03-15T11:04:23,614|[DEBUG] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@5095f89a
2021-03-15T11:04:23,614|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5095f89a
2021-03-15T11:04:23,615|[DEBUG] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@15c8bb25
2021-03-15T11:04:23,615|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@15c8bb25
2021-03-15T11:04:23,615|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@15c8bb25
2021-03-15T11:04:23,615|[DEBUG] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@34b4f6c3
2021-03-15T11:04:23,615|[DEBUG] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@2a04a440
2021-03-15T11:04:23,615|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2a04a440
2021-03-15T11:04:23,615|[DEBUG] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2a04a440
2021-03-15T11:04:23,615|[DEBUG] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7f3964b0
2021-03-15T11:04:23,615|[DEBUG] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@dc46916
2021-03-15T11:04:23,615|[DEBUG] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@faa592b
2021-03-15T11:04:23,615|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@faa592b
2021-03-15T11:04:23,615|[DEBUG] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@7df468f6
2021-03-15T11:04:23,615|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7df468f6
2021-03-15T11:04:23,615|[DEBUG] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@35f9c37c
2021-03-15T11:04:23,615|[DEBUG] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@35f9c37c
2021-03-15T11:04:23,615|[DEBUG] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@5bfa2801
2021-03-15T11:04:23,615|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5bfa2801
2021-03-15T11:04:23,615|[DEBUG] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@25428bab
2021-03-15T11:04:23,616|[DEBUG] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@25428bab
2021-03-15T11:04:23,616|[DEBUG] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@418e1cd6
2021-03-15T11:04:23,616|[DEBUG] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@5ef99f75
2021-03-15T11:04:23,616|[DEBUG] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@5ef99f75
2021-03-15T11:04:23,616|[DEBUG] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@5ef99f75
2021-03-15T11:04:23,616|[DEBUG] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1b438ec
2021-03-15T11:04:23,616|[DEBUG] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1b438ec
2021-03-15T11:04:23,616|[DEBUG] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1b438ec
2021-03-15T11:04:23,616|[DEBUG] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@4f241437
2021-03-15T11:04:23,616|[DEBUG] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@58e48d9
2021-03-15T11:04:23,616|[DEBUG] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@27c243a3
2021-03-15T11:04:23,616|[DEBUG] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@27c243a3
2021-03-15T11:04:23,616|[DEBUG] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@27c243a3
2021-03-15T11:04:23,617|[DEBUG] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@da87122
2021-03-15T11:04:23,617|[DEBUG] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@da87122
2021-03-15T11:04:23,617|[DEBUG] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@da87122
2021-03-15T11:04:23,617|[DEBUG] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@2e47ec5e
2021-03-15T11:04:23,617|[DEBUG] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@d3e9b94
2021-03-15T11:04:23,617|[DEBUG] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@4c3133a1
2021-03-15T11:04:23,617|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4c3133a1
2021-03-15T11:04:23,617|[DEBUG] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@26f6fbbd
2021-03-15T11:04:23,617|[DEBUG] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@3fa27158
2021-03-15T11:04:23,617|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3fa27158
2021-03-15T11:04:23,618|[DEBUG] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@58da1b27
2021-03-15T11:04:23,618|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@58da1b27
2021-03-15T11:04:23,618|[DEBUG] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@29862f60
2021-03-15T11:04:23,618|[DEBUG] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@644acaff
2021-03-15T11:04:23,618|[DEBUG] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@771047b4
2021-03-15T11:04:23,618|[DEBUG] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@677f1963
2021-03-15T11:04:23,618|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@677f1963
2021-03-15T11:04:23,618|[DEBUG] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5a5d16c2
2021-03-15T11:04:23,618|[DEBUG] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@55c9400d
2021-03-15T11:04:23,618|[DEBUG] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@650d95e6
2021-03-15T11:04:23,618|[DEBUG] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5c1ec792
2021-03-15T11:04:23,618|[DEBUG] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6e4731d5
2021-03-15T11:04:23,618|[DEBUG] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@7111dd38
2021-03-15T11:04:23,618|[DEBUG] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@783ac459
2021-03-15T11:04:23,618|[DEBUG] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5232be9b
]]></system-out>
  </testcase>
  <testcase name="testAccountValidation" classname="logic.AccountLogicTest" time="0.058">
    <error type="org.hibernate.service.spi.ServiceException"><![CDATA[org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
	at logic.AccountLogicTest.setUp(AccountLogicTest.java:56)
Caused by: org.hibernate.engine.jndi.JndiException: Unable to lookup JNDI name [java:comp/env/jdbc/SimpleBloodBank]
	at logic.AccountLogicTest.setUp(AccountLogicTest.java:56)
Caused by: javax.naming.NameNotFoundException: Name [comp/env/jdbc/SimpleBloodBank] is not bound in this Context. Unable to find [comp].
	at logic.AccountLogicTest.setUp(AccountLogicTest.java:56)
]]></error>
    <system-out><![CDATA[2021-03-15T11:04:23,642|[DEBUG] EMFactory - getting EntityManagerFactory
2021-03-15T11:04:23,643|[DEBUG] EMFactory - initializeing EntityManagerFactory
2021-03-15T11:04:23,643|[DEBUG] EMFactory - creating EntityManagerFactory
2021-03-15T11:04:23,656|[INFO ] LogHelper - HHH000204: Processing PersistenceUnitInfo [name: simplebloodbank-PU-test]
2021-03-15T11:04:23,661|[DEBUG] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@59c4921f
2021-03-15T11:04:23,661|[DEBUG] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@59c4921f
2021-03-15T11:04:23,661|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@59c4921f
2021-03-15T11:04:23,661|[DEBUG] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7f2e2ae6
2021-03-15T11:04:23,661|[DEBUG] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@3860542a
2021-03-15T11:04:23,661|[DEBUG] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@6fb07db6
2021-03-15T11:04:23,661|[DEBUG] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@6cd76b55
2021-03-15T11:04:23,661|[DEBUG] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@6cd76b55
2021-03-15T11:04:23,661|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6cd76b55
2021-03-15T11:04:23,661|[DEBUG] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@1124fd8
2021-03-15T11:04:23,661|[DEBUG] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@1124fd8
2021-03-15T11:04:23,661|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1124fd8
2021-03-15T11:04:23,661|[DEBUG] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@283730de
2021-03-15T11:04:23,661|[DEBUG] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@283730de
2021-03-15T11:04:23,661|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@283730de
2021-03-15T11:04:23,661|[DEBUG] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@57212116
2021-03-15T11:04:23,662|[DEBUG] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@57212116
2021-03-15T11:04:23,662|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@57212116
2021-03-15T11:04:23,662|[DEBUG] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@17b17fa8
2021-03-15T11:04:23,662|[DEBUG] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@17b17fa8
2021-03-15T11:04:23,662|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@17b17fa8
2021-03-15T11:04:23,662|[DEBUG] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@463b865b
2021-03-15T11:04:23,662|[DEBUG] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@463b865b
2021-03-15T11:04:23,662|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@463b865b
2021-03-15T11:04:23,662|[DEBUG] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@4fc2e703
2021-03-15T11:04:23,662|[DEBUG] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@4fc2e703
2021-03-15T11:04:23,662|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4fc2e703
2021-03-15T11:04:23,662|[DEBUG] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4ca3923
2021-03-15T11:04:23,662|[DEBUG] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4ca3923
2021-03-15T11:04:23,662|[DEBUG] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6d88a3f4
2021-03-15T11:04:23,662|[DEBUG] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6d88a3f4
2021-03-15T11:04:23,662|[DEBUG] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@5882ff51
2021-03-15T11:04:23,662|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@5882ff51
2021-03-15T11:04:23,662|[DEBUG] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4c5afa2d
2021-03-15T11:04:23,663|[DEBUG] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3177221b
2021-03-15T11:04:23,663|[DEBUG] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@654b9f0
2021-03-15T11:04:23,663|[DEBUG] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@654b9f0
2021-03-15T11:04:23,663|[DEBUG] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@533c62d0
2021-03-15T11:04:23,663|[DEBUG] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@533c62d0
2021-03-15T11:04:23,663|[DEBUG] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@7c654cfc
2021-03-15T11:04:23,663|[DEBUG] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@7c654cfc
2021-03-15T11:04:23,663|[DEBUG] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@74d41fcf
2021-03-15T11:04:23,663|[DEBUG] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@74d41fcf
2021-03-15T11:04:23,663|[DEBUG] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@10d28ee2
2021-03-15T11:04:23,663|[DEBUG] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@10d28ee2
2021-03-15T11:04:23,663|[DEBUG] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1355d2a0
2021-03-15T11:04:23,663|[DEBUG] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1355d2a0
2021-03-15T11:04:23,663|[DEBUG] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7773d139
2021-03-15T11:04:23,663|[DEBUG] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7773d139
2021-03-15T11:04:23,663|[DEBUG] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1f0b2ffb
2021-03-15T11:04:23,663|[DEBUG] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1f0b2ffb
2021-03-15T11:04:23,663|[DEBUG] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3f2fd933
2021-03-15T11:04:23,663|[DEBUG] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3f2fd933
2021-03-15T11:04:23,663|[DEBUG] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@77d5a3ee
2021-03-15T11:04:23,663|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@77d5a3ee
2021-03-15T11:04:23,663|[DEBUG] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@5095f89a
2021-03-15T11:04:23,663|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5095f89a
2021-03-15T11:04:23,663|[DEBUG] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@15c8bb25
2021-03-15T11:04:23,663|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@15c8bb25
2021-03-15T11:04:23,663|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@15c8bb25
2021-03-15T11:04:23,663|[DEBUG] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@34b4f6c3
2021-03-15T11:04:23,663|[DEBUG] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@2a04a440
2021-03-15T11:04:23,664|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2a04a440
2021-03-15T11:04:23,664|[DEBUG] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2a04a440
2021-03-15T11:04:23,664|[DEBUG] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7f3964b0
2021-03-15T11:04:23,664|[DEBUG] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@dc46916
2021-03-15T11:04:23,664|[DEBUG] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@faa592b
2021-03-15T11:04:23,664|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@faa592b
2021-03-15T11:04:23,664|[DEBUG] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@7df468f6
2021-03-15T11:04:23,664|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7df468f6
2021-03-15T11:04:23,664|[DEBUG] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@35f9c37c
2021-03-15T11:04:23,664|[DEBUG] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@35f9c37c
2021-03-15T11:04:23,664|[DEBUG] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@5bfa2801
2021-03-15T11:04:23,664|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5bfa2801
2021-03-15T11:04:23,664|[DEBUG] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@25428bab
2021-03-15T11:04:23,664|[DEBUG] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@25428bab
2021-03-15T11:04:23,664|[DEBUG] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@418e1cd6
2021-03-15T11:04:23,664|[DEBUG] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@5ef99f75
2021-03-15T11:04:23,664|[DEBUG] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@5ef99f75
2021-03-15T11:04:23,664|[DEBUG] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@5ef99f75
2021-03-15T11:04:23,664|[DEBUG] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1b438ec
2021-03-15T11:04:23,664|[DEBUG] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1b438ec
2021-03-15T11:04:23,665|[DEBUG] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1b438ec
2021-03-15T11:04:23,665|[DEBUG] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@4f241437
2021-03-15T11:04:23,665|[DEBUG] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@58e48d9
2021-03-15T11:04:23,665|[DEBUG] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@27c243a3
2021-03-15T11:04:23,665|[DEBUG] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@27c243a3
2021-03-15T11:04:23,665|[DEBUG] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@27c243a3
2021-03-15T11:04:23,665|[DEBUG] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@da87122
2021-03-15T11:04:23,665|[DEBUG] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@da87122
2021-03-15T11:04:23,665|[DEBUG] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@da87122
2021-03-15T11:04:23,665|[DEBUG] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@2e47ec5e
2021-03-15T11:04:23,665|[DEBUG] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@d3e9b94
2021-03-15T11:04:23,665|[DEBUG] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@4c3133a1
2021-03-15T11:04:23,665|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4c3133a1
2021-03-15T11:04:23,665|[DEBUG] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@26f6fbbd
2021-03-15T11:04:23,665|[DEBUG] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@3fa27158
2021-03-15T11:04:23,665|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3fa27158
2021-03-15T11:04:23,665|[DEBUG] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@58da1b27
2021-03-15T11:04:23,665|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@58da1b27
2021-03-15T11:04:23,665|[DEBUG] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@29862f60
2021-03-15T11:04:23,665|[DEBUG] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@644acaff
2021-03-15T11:04:23,665|[DEBUG] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@771047b4
2021-03-15T11:04:23,665|[DEBUG] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@677f1963
2021-03-15T11:04:23,665|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@677f1963
2021-03-15T11:04:23,665|[DEBUG] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@579325f2
2021-03-15T11:04:23,665|[DEBUG] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4f20ec7d
2021-03-15T11:04:23,665|[DEBUG] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@78828aca
2021-03-15T11:04:23,665|[DEBUG] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2a4ff62
2021-03-15T11:04:23,665|[DEBUG] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4c56e671
2021-03-15T11:04:23,665|[DEBUG] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4ddb882
2021-03-15T11:04:23,665|[DEBUG] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@68e5b609
2021-03-15T11:04:23,665|[DEBUG] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4d1f1b98
]]></system-out>
  </testcase>
  <testcase name="testCreateEntityBadLengthValues" classname="logic.AccountLogicTest" time="0.045">
    <error type="org.hibernate.service.spi.ServiceException"><![CDATA[org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
	at logic.AccountLogicTest.setUp(AccountLogicTest.java:56)
Caused by: org.hibernate.engine.jndi.JndiException: Unable to lookup JNDI name [java:comp/env/jdbc/SimpleBloodBank]
	at logic.AccountLogicTest.setUp(AccountLogicTest.java:56)
Caused by: javax.naming.NameNotFoundException: Name [comp/env/jdbc/SimpleBloodBank] is not bound in this Context. Unable to find [comp].
	at logic.AccountLogicTest.setUp(AccountLogicTest.java:56)
]]></error>
    <system-out><![CDATA[2021-03-15T11:04:23,707|[DEBUG] EMFactory - getting EntityManagerFactory
2021-03-15T11:04:23,709|[DEBUG] EMFactory - initializeing EntityManagerFactory
2021-03-15T11:04:23,709|[DEBUG] EMFactory - creating EntityManagerFactory
2021-03-15T11:04:23,718|[INFO ] LogHelper - HHH000204: Processing PersistenceUnitInfo [name: simplebloodbank-PU-test]
2021-03-15T11:04:23,725|[DEBUG] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@59c4921f
2021-03-15T11:04:23,725|[DEBUG] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@59c4921f
2021-03-15T11:04:23,725|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@59c4921f
2021-03-15T11:04:23,725|[DEBUG] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7f2e2ae6
2021-03-15T11:04:23,725|[DEBUG] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@3860542a
2021-03-15T11:04:23,725|[DEBUG] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@6fb07db6
2021-03-15T11:04:23,725|[DEBUG] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@6cd76b55
2021-03-15T11:04:23,725|[DEBUG] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@6cd76b55
2021-03-15T11:04:23,725|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6cd76b55
2021-03-15T11:04:23,725|[DEBUG] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@1124fd8
2021-03-15T11:04:23,725|[DEBUG] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@1124fd8
2021-03-15T11:04:23,725|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1124fd8
2021-03-15T11:04:23,725|[DEBUG] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@283730de
2021-03-15T11:04:23,725|[DEBUG] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@283730de
2021-03-15T11:04:23,725|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@283730de
2021-03-15T11:04:23,725|[DEBUG] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@57212116
2021-03-15T11:04:23,725|[DEBUG] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@57212116
2021-03-15T11:04:23,725|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@57212116
2021-03-15T11:04:23,725|[DEBUG] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@17b17fa8
2021-03-15T11:04:23,725|[DEBUG] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@17b17fa8
2021-03-15T11:04:23,726|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@17b17fa8
2021-03-15T11:04:23,726|[DEBUG] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@463b865b
2021-03-15T11:04:23,726|[DEBUG] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@463b865b
2021-03-15T11:04:23,726|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@463b865b
2021-03-15T11:04:23,726|[DEBUG] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@4fc2e703
2021-03-15T11:04:23,726|[DEBUG] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@4fc2e703
2021-03-15T11:04:23,726|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4fc2e703
2021-03-15T11:04:23,726|[DEBUG] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4ca3923
2021-03-15T11:04:23,726|[DEBUG] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4ca3923
2021-03-15T11:04:23,726|[DEBUG] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6d88a3f4
2021-03-15T11:04:23,726|[DEBUG] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6d88a3f4
2021-03-15T11:04:23,726|[DEBUG] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@5882ff51
2021-03-15T11:04:23,726|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@5882ff51
2021-03-15T11:04:23,726|[DEBUG] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4c5afa2d
2021-03-15T11:04:23,726|[DEBUG] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3177221b
2021-03-15T11:04:23,726|[DEBUG] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@654b9f0
2021-03-15T11:04:23,726|[DEBUG] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@654b9f0
2021-03-15T11:04:23,726|[DEBUG] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@533c62d0
2021-03-15T11:04:23,726|[DEBUG] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@533c62d0
2021-03-15T11:04:23,726|[DEBUG] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@7c654cfc
2021-03-15T11:04:23,726|[DEBUG] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@7c654cfc
2021-03-15T11:04:23,726|[DEBUG] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@74d41fcf
2021-03-15T11:04:23,726|[DEBUG] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@74d41fcf
2021-03-15T11:04:23,726|[DEBUG] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@10d28ee2
2021-03-15T11:04:23,726|[DEBUG] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@10d28ee2
2021-03-15T11:04:23,726|[DEBUG] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1355d2a0
2021-03-15T11:04:23,726|[DEBUG] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1355d2a0
2021-03-15T11:04:23,726|[DEBUG] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7773d139
2021-03-15T11:04:23,726|[DEBUG] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7773d139
2021-03-15T11:04:23,726|[DEBUG] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1f0b2ffb
2021-03-15T11:04:23,726|[DEBUG] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1f0b2ffb
2021-03-15T11:04:23,726|[DEBUG] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3f2fd933
2021-03-15T11:04:23,726|[DEBUG] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3f2fd933
2021-03-15T11:04:23,726|[DEBUG] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@77d5a3ee
2021-03-15T11:04:23,727|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@77d5a3ee
2021-03-15T11:04:23,727|[DEBUG] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@5095f89a
2021-03-15T11:04:23,727|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5095f89a
2021-03-15T11:04:23,727|[DEBUG] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@15c8bb25
2021-03-15T11:04:23,727|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@15c8bb25
2021-03-15T11:04:23,727|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@15c8bb25
2021-03-15T11:04:23,727|[DEBUG] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@34b4f6c3
2021-03-15T11:04:23,727|[DEBUG] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@2a04a440
2021-03-15T11:04:23,727|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2a04a440
2021-03-15T11:04:23,727|[DEBUG] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2a04a440
2021-03-15T11:04:23,727|[DEBUG] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7f3964b0
2021-03-15T11:04:23,727|[DEBUG] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@dc46916
2021-03-15T11:04:23,727|[DEBUG] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@faa592b
2021-03-15T11:04:23,727|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@faa592b
2021-03-15T11:04:23,727|[DEBUG] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@7df468f6
2021-03-15T11:04:23,727|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7df468f6
2021-03-15T11:04:23,727|[DEBUG] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@35f9c37c
2021-03-15T11:04:23,727|[DEBUG] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@35f9c37c
2021-03-15T11:04:23,727|[DEBUG] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@5bfa2801
2021-03-15T11:04:23,727|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5bfa2801
2021-03-15T11:04:23,727|[DEBUG] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@25428bab
2021-03-15T11:04:23,727|[DEBUG] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@25428bab
2021-03-15T11:04:23,727|[DEBUG] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@418e1cd6
2021-03-15T11:04:23,727|[DEBUG] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@5ef99f75
2021-03-15T11:04:23,727|[DEBUG] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@5ef99f75
2021-03-15T11:04:23,727|[DEBUG] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@5ef99f75
2021-03-15T11:04:23,727|[DEBUG] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1b438ec
2021-03-15T11:04:23,727|[DEBUG] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1b438ec
2021-03-15T11:04:23,727|[DEBUG] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1b438ec
2021-03-15T11:04:23,727|[DEBUG] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@4f241437
2021-03-15T11:04:23,727|[DEBUG] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@58e48d9
2021-03-15T11:04:23,727|[DEBUG] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@27c243a3
2021-03-15T11:04:23,727|[DEBUG] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@27c243a3
2021-03-15T11:04:23,727|[DEBUG] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@27c243a3
2021-03-15T11:04:23,727|[DEBUG] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@da87122
2021-03-15T11:04:23,727|[DEBUG] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@da87122
2021-03-15T11:04:23,727|[DEBUG] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@da87122
2021-03-15T11:04:23,727|[DEBUG] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@2e47ec5e
2021-03-15T11:04:23,727|[DEBUG] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@d3e9b94
2021-03-15T11:04:23,728|[DEBUG] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@4c3133a1
2021-03-15T11:04:23,728|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4c3133a1
2021-03-15T11:04:23,728|[DEBUG] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@26f6fbbd
2021-03-15T11:04:23,728|[DEBUG] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@3fa27158
2021-03-15T11:04:23,728|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3fa27158
2021-03-15T11:04:23,728|[DEBUG] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@58da1b27
2021-03-15T11:04:23,728|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@58da1b27
2021-03-15T11:04:23,728|[DEBUG] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@29862f60
2021-03-15T11:04:23,728|[DEBUG] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@644acaff
2021-03-15T11:04:23,728|[DEBUG] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@771047b4
2021-03-15T11:04:23,728|[DEBUG] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@677f1963
2021-03-15T11:04:23,728|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@677f1963
2021-03-15T11:04:23,728|[DEBUG] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@341b1597
2021-03-15T11:04:23,728|[DEBUG] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1ac7ec0e
2021-03-15T11:04:23,728|[DEBUG] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@263121b
2021-03-15T11:04:23,728|[DEBUG] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@41dabe47
2021-03-15T11:04:23,728|[DEBUG] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2d01bc46
2021-03-15T11:04:23,728|[DEBUG] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@8039274
2021-03-15T11:04:23,728|[DEBUG] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@126aaaa5
2021-03-15T11:04:23,728|[DEBUG] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6561629
]]></system-out>
  </testcase>
  <testcase name="testCreateEntityEdgeValues" classname="logic.AccountLogicTest" time="0.048">
    <error type="org.hibernate.service.spi.ServiceException"><![CDATA[org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
	at logic.AccountLogicTest.setUp(AccountLogicTest.java:56)
Caused by: org.hibernate.engine.jndi.JndiException: Unable to lookup JNDI name [java:comp/env/jdbc/SimpleBloodBank]
	at logic.AccountLogicTest.setUp(AccountLogicTest.java:56)
Caused by: javax.naming.NameNotFoundException: Name [comp/env/jdbc/SimpleBloodBank] is not bound in this Context. Unable to find [comp].
	at logic.AccountLogicTest.setUp(AccountLogicTest.java:56)
]]></error>
    <system-out><![CDATA[2021-03-15T11:04:23,755|[DEBUG] EMFactory - getting EntityManagerFactory
2021-03-15T11:04:23,755|[DEBUG] EMFactory - initializeing EntityManagerFactory
2021-03-15T11:04:23,755|[DEBUG] EMFactory - creating EntityManagerFactory
2021-03-15T11:04:23,762|[INFO ] LogHelper - HHH000204: Processing PersistenceUnitInfo [name: simplebloodbank-PU-test]
2021-03-15T11:04:23,767|[DEBUG] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@59c4921f
2021-03-15T11:04:23,767|[DEBUG] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@59c4921f
2021-03-15T11:04:23,767|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@59c4921f
2021-03-15T11:04:23,767|[DEBUG] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7f2e2ae6
2021-03-15T11:04:23,767|[DEBUG] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@3860542a
2021-03-15T11:04:23,767|[DEBUG] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@6fb07db6
2021-03-15T11:04:23,767|[DEBUG] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@6cd76b55
2021-03-15T11:04:23,767|[DEBUG] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@6cd76b55
2021-03-15T11:04:23,768|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6cd76b55
2021-03-15T11:04:23,768|[DEBUG] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@1124fd8
2021-03-15T11:04:23,768|[DEBUG] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@1124fd8
2021-03-15T11:04:23,768|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1124fd8
2021-03-15T11:04:23,768|[DEBUG] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@283730de
2021-03-15T11:04:23,768|[DEBUG] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@283730de
2021-03-15T11:04:23,768|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@283730de
2021-03-15T11:04:23,768|[DEBUG] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@57212116
2021-03-15T11:04:23,768|[DEBUG] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@57212116
2021-03-15T11:04:23,768|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@57212116
2021-03-15T11:04:23,768|[DEBUG] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@17b17fa8
2021-03-15T11:04:23,768|[DEBUG] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@17b17fa8
2021-03-15T11:04:23,768|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@17b17fa8
2021-03-15T11:04:23,768|[DEBUG] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@463b865b
2021-03-15T11:04:23,768|[DEBUG] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@463b865b
2021-03-15T11:04:23,768|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@463b865b
2021-03-15T11:04:23,768|[DEBUG] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@4fc2e703
2021-03-15T11:04:23,768|[DEBUG] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@4fc2e703
2021-03-15T11:04:23,768|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4fc2e703
2021-03-15T11:04:23,768|[DEBUG] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4ca3923
2021-03-15T11:04:23,768|[DEBUG] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4ca3923
2021-03-15T11:04:23,768|[DEBUG] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6d88a3f4
2021-03-15T11:04:23,768|[DEBUG] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6d88a3f4
2021-03-15T11:04:23,768|[DEBUG] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@5882ff51
2021-03-15T11:04:23,768|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@5882ff51
2021-03-15T11:04:23,769|[DEBUG] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4c5afa2d
2021-03-15T11:04:23,769|[DEBUG] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3177221b
2021-03-15T11:04:23,769|[DEBUG] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@654b9f0
2021-03-15T11:04:23,769|[DEBUG] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@654b9f0
2021-03-15T11:04:23,769|[DEBUG] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@533c62d0
2021-03-15T11:04:23,769|[DEBUG] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@533c62d0
2021-03-15T11:04:23,769|[DEBUG] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@7c654cfc
2021-03-15T11:04:23,769|[DEBUG] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@7c654cfc
2021-03-15T11:04:23,769|[DEBUG] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@74d41fcf
2021-03-15T11:04:23,769|[DEBUG] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@74d41fcf
2021-03-15T11:04:23,769|[DEBUG] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@10d28ee2
2021-03-15T11:04:23,769|[DEBUG] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@10d28ee2
2021-03-15T11:04:23,769|[DEBUG] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1355d2a0
2021-03-15T11:04:23,769|[DEBUG] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1355d2a0
2021-03-15T11:04:23,769|[DEBUG] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7773d139
2021-03-15T11:04:23,769|[DEBUG] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7773d139
2021-03-15T11:04:23,769|[DEBUG] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1f0b2ffb
2021-03-15T11:04:23,769|[DEBUG] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1f0b2ffb
2021-03-15T11:04:23,769|[DEBUG] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3f2fd933
2021-03-15T11:04:23,769|[DEBUG] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3f2fd933
2021-03-15T11:04:23,769|[DEBUG] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@77d5a3ee
2021-03-15T11:04:23,769|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@77d5a3ee
2021-03-15T11:04:23,770|[DEBUG] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@5095f89a
2021-03-15T11:04:23,770|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5095f89a
2021-03-15T11:04:23,770|[DEBUG] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@15c8bb25
2021-03-15T11:04:23,770|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@15c8bb25
2021-03-15T11:04:23,770|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@15c8bb25
2021-03-15T11:04:23,770|[DEBUG] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@34b4f6c3
2021-03-15T11:04:23,770|[DEBUG] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@2a04a440
2021-03-15T11:04:23,770|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2a04a440
2021-03-15T11:04:23,770|[DEBUG] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2a04a440
2021-03-15T11:04:23,770|[DEBUG] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7f3964b0
2021-03-15T11:04:23,770|[DEBUG] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@dc46916
2021-03-15T11:04:23,770|[DEBUG] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@faa592b
2021-03-15T11:04:23,770|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@faa592b
2021-03-15T11:04:23,770|[DEBUG] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@7df468f6
2021-03-15T11:04:23,770|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7df468f6
2021-03-15T11:04:23,770|[DEBUG] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@35f9c37c
2021-03-15T11:04:23,770|[DEBUG] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@35f9c37c
2021-03-15T11:04:23,770|[DEBUG] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@5bfa2801
2021-03-15T11:04:23,770|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5bfa2801
2021-03-15T11:04:23,770|[DEBUG] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@25428bab
2021-03-15T11:04:23,770|[DEBUG] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@25428bab
2021-03-15T11:04:23,770|[DEBUG] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@418e1cd6
2021-03-15T11:04:23,770|[DEBUG] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@5ef99f75
2021-03-15T11:04:23,770|[DEBUG] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@5ef99f75
2021-03-15T11:04:23,770|[DEBUG] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@5ef99f75
2021-03-15T11:04:23,770|[DEBUG] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1b438ec
2021-03-15T11:04:23,770|[DEBUG] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1b438ec
2021-03-15T11:04:23,770|[DEBUG] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1b438ec
2021-03-15T11:04:23,770|[DEBUG] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@4f241437
2021-03-15T11:04:23,770|[DEBUG] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@58e48d9
2021-03-15T11:04:23,770|[DEBUG] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@27c243a3
2021-03-15T11:04:23,770|[DEBUG] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@27c243a3
2021-03-15T11:04:23,770|[DEBUG] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@27c243a3
2021-03-15T11:04:23,770|[DEBUG] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@da87122
2021-03-15T11:04:23,771|[DEBUG] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@da87122
2021-03-15T11:04:23,771|[DEBUG] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@da87122
2021-03-15T11:04:23,771|[DEBUG] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@2e47ec5e
2021-03-15T11:04:23,771|[DEBUG] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@d3e9b94
2021-03-15T11:04:23,771|[DEBUG] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@4c3133a1
2021-03-15T11:04:23,771|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4c3133a1
2021-03-15T11:04:23,771|[DEBUG] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@26f6fbbd
2021-03-15T11:04:23,771|[DEBUG] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@3fa27158
2021-03-15T11:04:23,771|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3fa27158
2021-03-15T11:04:23,771|[DEBUG] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@58da1b27
2021-03-15T11:04:23,771|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@58da1b27
2021-03-15T11:04:23,771|[DEBUG] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@29862f60
2021-03-15T11:04:23,771|[DEBUG] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@644acaff
2021-03-15T11:04:23,771|[DEBUG] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@771047b4
2021-03-15T11:04:23,771|[DEBUG] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@677f1963
2021-03-15T11:04:23,771|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@677f1963
2021-03-15T11:04:23,771|[DEBUG] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1ddf5237
2021-03-15T11:04:23,771|[DEBUG] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5e4b92b3
2021-03-15T11:04:23,771|[DEBUG] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@c14943c
2021-03-15T11:04:23,771|[DEBUG] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7a0daf3d
2021-03-15T11:04:23,771|[DEBUG] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1d2414a1
2021-03-15T11:04:23,771|[DEBUG] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1f78d3bc
2021-03-15T11:04:23,771|[DEBUG] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@37e5111b
2021-03-15T11:04:23,771|[DEBUG] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2006249d
]]></system-out>
  </testcase>
  <testcase name="testGetAll" classname="logic.AccountLogicTest" time="0.061">
    <error type="org.hibernate.service.spi.ServiceException"><![CDATA[org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
	at logic.AccountLogicTest.setUp(AccountLogicTest.java:56)
Caused by: org.hibernate.engine.jndi.JndiException: Unable to lookup JNDI name [java:comp/env/jdbc/SimpleBloodBank]
	at logic.AccountLogicTest.setUp(AccountLogicTest.java:56)
Caused by: javax.naming.NameNotFoundException: Name [comp/env/jdbc/SimpleBloodBank] is not bound in this Context. Unable to find [comp].
	at logic.AccountLogicTest.setUp(AccountLogicTest.java:56)
]]></error>
    <system-out><![CDATA[2021-03-15T11:04:23,802|[DEBUG] EMFactory - getting EntityManagerFactory
2021-03-15T11:04:23,802|[DEBUG] EMFactory - initializeing EntityManagerFactory
2021-03-15T11:04:23,802|[DEBUG] EMFactory - creating EntityManagerFactory
2021-03-15T11:04:23,811|[INFO ] LogHelper - HHH000204: Processing PersistenceUnitInfo [name: simplebloodbank-PU-test]
2021-03-15T11:04:23,819|[DEBUG] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@59c4921f
2021-03-15T11:04:23,820|[DEBUG] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@59c4921f
2021-03-15T11:04:23,820|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@59c4921f
2021-03-15T11:04:23,820|[DEBUG] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7f2e2ae6
2021-03-15T11:04:23,820|[DEBUG] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@3860542a
2021-03-15T11:04:23,820|[DEBUG] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@6fb07db6
2021-03-15T11:04:23,820|[DEBUG] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@6cd76b55
2021-03-15T11:04:23,820|[DEBUG] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@6cd76b55
2021-03-15T11:04:23,820|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6cd76b55
2021-03-15T11:04:23,820|[DEBUG] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@1124fd8
2021-03-15T11:04:23,820|[DEBUG] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@1124fd8
2021-03-15T11:04:23,820|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1124fd8
2021-03-15T11:04:23,820|[DEBUG] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@283730de
2021-03-15T11:04:23,820|[DEBUG] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@283730de
2021-03-15T11:04:23,820|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@283730de
2021-03-15T11:04:23,820|[DEBUG] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@57212116
2021-03-15T11:04:23,820|[DEBUG] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@57212116
2021-03-15T11:04:23,820|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@57212116
2021-03-15T11:04:23,820|[DEBUG] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@17b17fa8
2021-03-15T11:04:23,820|[DEBUG] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@17b17fa8
2021-03-15T11:04:23,820|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@17b17fa8
2021-03-15T11:04:23,820|[DEBUG] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@463b865b
2021-03-15T11:04:23,820|[DEBUG] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@463b865b
2021-03-15T11:04:23,820|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@463b865b
2021-03-15T11:04:23,820|[DEBUG] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@4fc2e703
2021-03-15T11:04:23,820|[DEBUG] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@4fc2e703
2021-03-15T11:04:23,820|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4fc2e703
2021-03-15T11:04:23,820|[DEBUG] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4ca3923
2021-03-15T11:04:23,820|[DEBUG] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4ca3923
2021-03-15T11:04:23,820|[DEBUG] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6d88a3f4
2021-03-15T11:04:23,820|[DEBUG] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6d88a3f4
2021-03-15T11:04:23,820|[DEBUG] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@5882ff51
2021-03-15T11:04:23,820|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@5882ff51
2021-03-15T11:04:23,820|[DEBUG] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4c5afa2d
2021-03-15T11:04:23,821|[DEBUG] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3177221b
2021-03-15T11:04:23,821|[DEBUG] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@654b9f0
2021-03-15T11:04:23,821|[DEBUG] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@654b9f0
2021-03-15T11:04:23,821|[DEBUG] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@533c62d0
2021-03-15T11:04:23,821|[DEBUG] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@533c62d0
2021-03-15T11:04:23,821|[DEBUG] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@7c654cfc
2021-03-15T11:04:23,821|[DEBUG] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@7c654cfc
2021-03-15T11:04:23,821|[DEBUG] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@74d41fcf
2021-03-15T11:04:23,821|[DEBUG] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@74d41fcf
2021-03-15T11:04:23,821|[DEBUG] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@10d28ee2
2021-03-15T11:04:23,821|[DEBUG] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@10d28ee2
2021-03-15T11:04:23,821|[DEBUG] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1355d2a0
2021-03-15T11:04:23,821|[DEBUG] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1355d2a0
2021-03-15T11:04:23,821|[DEBUG] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7773d139
2021-03-15T11:04:23,821|[DEBUG] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7773d139
2021-03-15T11:04:23,821|[DEBUG] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1f0b2ffb
2021-03-15T11:04:23,821|[DEBUG] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1f0b2ffb
2021-03-15T11:04:23,821|[DEBUG] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3f2fd933
2021-03-15T11:04:23,821|[DEBUG] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3f2fd933
2021-03-15T11:04:23,821|[DEBUG] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@77d5a3ee
2021-03-15T11:04:23,821|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@77d5a3ee
2021-03-15T11:04:23,821|[DEBUG] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@5095f89a
2021-03-15T11:04:23,821|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5095f89a
2021-03-15T11:04:23,821|[DEBUG] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@15c8bb25
2021-03-15T11:04:23,821|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@15c8bb25
2021-03-15T11:04:23,821|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@15c8bb25
2021-03-15T11:04:23,821|[DEBUG] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@34b4f6c3
2021-03-15T11:04:23,821|[DEBUG] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@2a04a440
2021-03-15T11:04:23,822|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2a04a440
2021-03-15T11:04:23,822|[DEBUG] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2a04a440
2021-03-15T11:04:23,822|[DEBUG] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7f3964b0
2021-03-15T11:04:23,822|[DEBUG] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@dc46916
2021-03-15T11:04:23,822|[DEBUG] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@faa592b
2021-03-15T11:04:23,822|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@faa592b
2021-03-15T11:04:23,822|[DEBUG] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@7df468f6
2021-03-15T11:04:23,822|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7df468f6
2021-03-15T11:04:23,822|[DEBUG] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@35f9c37c
2021-03-15T11:04:23,822|[DEBUG] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@35f9c37c
2021-03-15T11:04:23,822|[DEBUG] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@5bfa2801
2021-03-15T11:04:23,822|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5bfa2801
2021-03-15T11:04:23,822|[DEBUG] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@25428bab
2021-03-15T11:04:23,822|[DEBUG] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@25428bab
2021-03-15T11:04:23,822|[DEBUG] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@418e1cd6
2021-03-15T11:04:23,822|[DEBUG] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@5ef99f75
2021-03-15T11:04:23,822|[DEBUG] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@5ef99f75
2021-03-15T11:04:23,822|[DEBUG] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@5ef99f75
2021-03-15T11:04:23,822|[DEBUG] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1b438ec
2021-03-15T11:04:23,822|[DEBUG] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1b438ec
2021-03-15T11:04:23,822|[DEBUG] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1b438ec
2021-03-15T11:04:23,822|[DEBUG] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@4f241437
2021-03-15T11:04:23,822|[DEBUG] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@58e48d9
2021-03-15T11:04:23,822|[DEBUG] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@27c243a3
2021-03-15T11:04:23,822|[DEBUG] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@27c243a3
2021-03-15T11:04:23,822|[DEBUG] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@27c243a3
2021-03-15T11:04:23,822|[DEBUG] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@da87122
2021-03-15T11:04:23,822|[DEBUG] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@da87122
2021-03-15T11:04:23,822|[DEBUG] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@da87122
2021-03-15T11:04:23,822|[DEBUG] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@2e47ec5e
2021-03-15T11:04:23,822|[DEBUG] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@d3e9b94
2021-03-15T11:04:23,822|[DEBUG] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@4c3133a1
2021-03-15T11:04:23,822|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4c3133a1
2021-03-15T11:04:23,822|[DEBUG] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@26f6fbbd
2021-03-15T11:04:23,823|[DEBUG] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@3fa27158
2021-03-15T11:04:23,823|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3fa27158
2021-03-15T11:04:23,823|[DEBUG] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@58da1b27
2021-03-15T11:04:23,823|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@58da1b27
2021-03-15T11:04:23,823|[DEBUG] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@29862f60
2021-03-15T11:04:23,823|[DEBUG] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@644acaff
2021-03-15T11:04:23,823|[DEBUG] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@771047b4
2021-03-15T11:04:23,823|[DEBUG] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@677f1963
2021-03-15T11:04:23,823|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@677f1963
2021-03-15T11:04:23,823|[DEBUG] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2e259c54
2021-03-15T11:04:23,823|[DEBUG] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2bd01716
2021-03-15T11:04:23,823|[DEBUG] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2bc7e895
2021-03-15T11:04:23,823|[DEBUG] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2ff9e11e
2021-03-15T11:04:23,823|[DEBUG] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2d3c0f89
2021-03-15T11:04:23,823|[DEBUG] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@67fd59f
2021-03-15T11:04:23,823|[DEBUG] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@12680685
2021-03-15T11:04:23,823|[DEBUG] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@72f9e4c7
]]></system-out>
  </testcase>
  <testcase name="testGetColumnCodes" classname="logic.AccountLogicTest" time="0.034">
    <error type="org.hibernate.service.spi.ServiceException"><![CDATA[org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
	at logic.AccountLogicTest.setUp(AccountLogicTest.java:56)
Caused by: org.hibernate.engine.jndi.JndiException: Unable to lookup JNDI name [java:comp/env/jdbc/SimpleBloodBank]
	at logic.AccountLogicTest.setUp(AccountLogicTest.java:56)
Caused by: javax.naming.NameNotFoundException: Name [comp/env/jdbc/SimpleBloodBank] is not bound in this Context. Unable to find [comp].
	at logic.AccountLogicTest.setUp(AccountLogicTest.java:56)
]]></error>
    <system-out><![CDATA[2021-03-15T11:04:23,865|[DEBUG] EMFactory - getting EntityManagerFactory
2021-03-15T11:04:23,865|[DEBUG] EMFactory - initializeing EntityManagerFactory
2021-03-15T11:04:23,865|[DEBUG] EMFactory - creating EntityManagerFactory
2021-03-15T11:04:23,872|[INFO ] LogHelper - HHH000204: Processing PersistenceUnitInfo [name: simplebloodbank-PU-test]
2021-03-15T11:04:23,876|[DEBUG] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@59c4921f
2021-03-15T11:04:23,876|[DEBUG] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@59c4921f
2021-03-15T11:04:23,876|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@59c4921f
2021-03-15T11:04:23,876|[DEBUG] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7f2e2ae6
2021-03-15T11:04:23,876|[DEBUG] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@3860542a
2021-03-15T11:04:23,876|[DEBUG] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@6fb07db6
2021-03-15T11:04:23,876|[DEBUG] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@6cd76b55
2021-03-15T11:04:23,876|[DEBUG] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@6cd76b55
2021-03-15T11:04:23,876|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6cd76b55
2021-03-15T11:04:23,876|[DEBUG] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@1124fd8
2021-03-15T11:04:23,876|[DEBUG] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@1124fd8
2021-03-15T11:04:23,876|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1124fd8
2021-03-15T11:04:23,876|[DEBUG] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@283730de
2021-03-15T11:04:23,876|[DEBUG] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@283730de
2021-03-15T11:04:23,876|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@283730de
2021-03-15T11:04:23,876|[DEBUG] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@57212116
2021-03-15T11:04:23,876|[DEBUG] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@57212116
2021-03-15T11:04:23,876|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@57212116
2021-03-15T11:04:23,877|[DEBUG] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@17b17fa8
2021-03-15T11:04:23,877|[DEBUG] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@17b17fa8
2021-03-15T11:04:23,877|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@17b17fa8
2021-03-15T11:04:23,877|[DEBUG] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@463b865b
2021-03-15T11:04:23,877|[DEBUG] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@463b865b
2021-03-15T11:04:23,877|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@463b865b
2021-03-15T11:04:23,877|[DEBUG] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@4fc2e703
2021-03-15T11:04:23,877|[DEBUG] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@4fc2e703
2021-03-15T11:04:23,877|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4fc2e703
2021-03-15T11:04:23,877|[DEBUG] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4ca3923
2021-03-15T11:04:23,877|[DEBUG] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4ca3923
2021-03-15T11:04:23,877|[DEBUG] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6d88a3f4
2021-03-15T11:04:23,877|[DEBUG] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6d88a3f4
2021-03-15T11:04:23,877|[DEBUG] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@5882ff51
2021-03-15T11:04:23,877|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@5882ff51
2021-03-15T11:04:23,877|[DEBUG] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4c5afa2d
2021-03-15T11:04:23,877|[DEBUG] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3177221b
2021-03-15T11:04:23,877|[DEBUG] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@654b9f0
2021-03-15T11:04:23,877|[DEBUG] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@654b9f0
2021-03-15T11:04:23,878|[DEBUG] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@533c62d0
2021-03-15T11:04:23,878|[DEBUG] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@533c62d0
2021-03-15T11:04:23,878|[DEBUG] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@7c654cfc
2021-03-15T11:04:23,878|[DEBUG] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@7c654cfc
2021-03-15T11:04:23,878|[DEBUG] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@74d41fcf
2021-03-15T11:04:23,878|[DEBUG] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@74d41fcf
2021-03-15T11:04:23,878|[DEBUG] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@10d28ee2
2021-03-15T11:04:23,878|[DEBUG] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@10d28ee2
2021-03-15T11:04:23,878|[DEBUG] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1355d2a0
2021-03-15T11:04:23,878|[DEBUG] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1355d2a0
2021-03-15T11:04:23,878|[DEBUG] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7773d139
2021-03-15T11:04:23,878|[DEBUG] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7773d139
2021-03-15T11:04:23,878|[DEBUG] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1f0b2ffb
2021-03-15T11:04:23,878|[DEBUG] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1f0b2ffb
2021-03-15T11:04:23,878|[DEBUG] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3f2fd933
2021-03-15T11:04:23,878|[DEBUG] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3f2fd933
2021-03-15T11:04:23,878|[DEBUG] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@77d5a3ee
2021-03-15T11:04:23,878|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@77d5a3ee
2021-03-15T11:04:23,878|[DEBUG] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@5095f89a
2021-03-15T11:04:23,878|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5095f89a
2021-03-15T11:04:23,878|[DEBUG] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@15c8bb25
2021-03-15T11:04:23,878|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@15c8bb25
2021-03-15T11:04:23,878|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@15c8bb25
2021-03-15T11:04:23,878|[DEBUG] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@34b4f6c3
2021-03-15T11:04:23,878|[DEBUG] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@2a04a440
2021-03-15T11:04:23,878|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2a04a440
2021-03-15T11:04:23,878|[DEBUG] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2a04a440
2021-03-15T11:04:23,878|[DEBUG] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7f3964b0
2021-03-15T11:04:23,878|[DEBUG] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@dc46916
2021-03-15T11:04:23,878|[DEBUG] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@faa592b
2021-03-15T11:04:23,878|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@faa592b
2021-03-15T11:04:23,878|[DEBUG] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@7df468f6
2021-03-15T11:04:23,878|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7df468f6
2021-03-15T11:04:23,878|[DEBUG] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@35f9c37c
2021-03-15T11:04:23,878|[DEBUG] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@35f9c37c
2021-03-15T11:04:23,878|[DEBUG] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@5bfa2801
2021-03-15T11:04:23,879|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5bfa2801
2021-03-15T11:04:23,879|[DEBUG] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@25428bab
2021-03-15T11:04:23,879|[DEBUG] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@25428bab
2021-03-15T11:04:23,879|[DEBUG] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@418e1cd6
2021-03-15T11:04:23,879|[DEBUG] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@5ef99f75
2021-03-15T11:04:23,879|[DEBUG] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@5ef99f75
2021-03-15T11:04:23,879|[DEBUG] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@5ef99f75
2021-03-15T11:04:23,879|[DEBUG] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1b438ec
2021-03-15T11:04:23,879|[DEBUG] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1b438ec
2021-03-15T11:04:23,879|[DEBUG] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1b438ec
2021-03-15T11:04:23,879|[DEBUG] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@4f241437
2021-03-15T11:04:23,879|[DEBUG] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@58e48d9
2021-03-15T11:04:23,879|[DEBUG] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@27c243a3
2021-03-15T11:04:23,879|[DEBUG] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@27c243a3
2021-03-15T11:04:23,879|[DEBUG] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@27c243a3
2021-03-15T11:04:23,879|[DEBUG] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@da87122
2021-03-15T11:04:23,879|[DEBUG] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@da87122
2021-03-15T11:04:23,879|[DEBUG] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@da87122
2021-03-15T11:04:23,879|[DEBUG] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@2e47ec5e
2021-03-15T11:04:23,879|[DEBUG] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@d3e9b94
2021-03-15T11:04:23,879|[DEBUG] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@4c3133a1
2021-03-15T11:04:23,879|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4c3133a1
2021-03-15T11:04:23,879|[DEBUG] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@26f6fbbd
2021-03-15T11:04:23,879|[DEBUG] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@3fa27158
2021-03-15T11:04:23,879|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3fa27158
2021-03-15T11:04:23,879|[DEBUG] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@58da1b27
2021-03-15T11:04:23,879|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@58da1b27
2021-03-15T11:04:23,879|[DEBUG] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@29862f60
2021-03-15T11:04:23,879|[DEBUG] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@644acaff
2021-03-15T11:04:23,879|[DEBUG] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@771047b4
2021-03-15T11:04:23,879|[DEBUG] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@677f1963
2021-03-15T11:04:23,879|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@677f1963
2021-03-15T11:04:23,879|[DEBUG] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@50caf658
2021-03-15T11:04:23,879|[DEBUG] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2b52e068
2021-03-15T11:04:23,879|[DEBUG] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@207d6c18
2021-03-15T11:04:23,879|[DEBUG] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@54fe40e0
2021-03-15T11:04:23,879|[DEBUG] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@53010411
2021-03-15T11:04:23,880|[DEBUG] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6f6cefb9
2021-03-15T11:04:23,880|[DEBUG] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@24ba43e0
2021-03-15T11:04:23,880|[DEBUG] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2e5fed7
]]></system-out>
  </testcase>
  <testcase name="testGetColumnNames" classname="logic.AccountLogicTest" time="0.037">
    <error type="org.hibernate.service.spi.ServiceException"><![CDATA[org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
	at logic.AccountLogicTest.setUp(AccountLogicTest.java:56)
Caused by: org.hibernate.engine.jndi.JndiException: Unable to lookup JNDI name [java:comp/env/jdbc/SimpleBloodBank]
	at logic.AccountLogicTest.setUp(AccountLogicTest.java:56)
Caused by: javax.naming.NameNotFoundException: Name [comp/env/jdbc/SimpleBloodBank] is not bound in this Context. Unable to find [comp].
	at logic.AccountLogicTest.setUp(AccountLogicTest.java:56)
]]></error>
    <system-out><![CDATA[2021-03-15T11:04:23,902|[DEBUG] EMFactory - getting EntityManagerFactory
2021-03-15T11:04:23,902|[DEBUG] EMFactory - initializeing EntityManagerFactory
2021-03-15T11:04:23,902|[DEBUG] EMFactory - creating EntityManagerFactory
2021-03-15T11:04:23,912|[INFO ] LogHelper - HHH000204: Processing PersistenceUnitInfo [name: simplebloodbank-PU-test]
2021-03-15T11:04:23,916|[DEBUG] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@59c4921f
2021-03-15T11:04:23,916|[DEBUG] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@59c4921f
2021-03-15T11:04:23,916|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@59c4921f
2021-03-15T11:04:23,916|[DEBUG] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7f2e2ae6
2021-03-15T11:04:23,916|[DEBUG] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@3860542a
2021-03-15T11:04:23,917|[DEBUG] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@6fb07db6
2021-03-15T11:04:23,917|[DEBUG] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@6cd76b55
2021-03-15T11:04:23,917|[DEBUG] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@6cd76b55
2021-03-15T11:04:23,917|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6cd76b55
2021-03-15T11:04:23,917|[DEBUG] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@1124fd8
2021-03-15T11:04:23,917|[DEBUG] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@1124fd8
2021-03-15T11:04:23,917|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1124fd8
2021-03-15T11:04:23,917|[DEBUG] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@283730de
2021-03-15T11:04:23,917|[DEBUG] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@283730de
2021-03-15T11:04:23,917|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@283730de
2021-03-15T11:04:23,917|[DEBUG] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@57212116
2021-03-15T11:04:23,917|[DEBUG] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@57212116
2021-03-15T11:04:23,917|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@57212116
2021-03-15T11:04:23,917|[DEBUG] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@17b17fa8
2021-03-15T11:04:23,917|[DEBUG] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@17b17fa8
2021-03-15T11:04:23,917|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@17b17fa8
2021-03-15T11:04:23,917|[DEBUG] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@463b865b
2021-03-15T11:04:23,917|[DEBUG] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@463b865b
2021-03-15T11:04:23,917|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@463b865b
2021-03-15T11:04:23,917|[DEBUG] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@4fc2e703
2021-03-15T11:04:23,917|[DEBUG] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@4fc2e703
2021-03-15T11:04:23,917|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4fc2e703
2021-03-15T11:04:23,917|[DEBUG] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4ca3923
2021-03-15T11:04:23,917|[DEBUG] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4ca3923
2021-03-15T11:04:23,917|[DEBUG] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6d88a3f4
2021-03-15T11:04:23,917|[DEBUG] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6d88a3f4
2021-03-15T11:04:23,918|[DEBUG] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@5882ff51
2021-03-15T11:04:23,918|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@5882ff51
2021-03-15T11:04:23,918|[DEBUG] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4c5afa2d
2021-03-15T11:04:23,918|[DEBUG] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3177221b
2021-03-15T11:04:23,918|[DEBUG] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@654b9f0
2021-03-15T11:04:23,918|[DEBUG] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@654b9f0
2021-03-15T11:04:23,918|[DEBUG] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@533c62d0
2021-03-15T11:04:23,918|[DEBUG] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@533c62d0
2021-03-15T11:04:23,918|[DEBUG] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@7c654cfc
2021-03-15T11:04:23,918|[DEBUG] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@7c654cfc
2021-03-15T11:04:23,918|[DEBUG] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@74d41fcf
2021-03-15T11:04:23,918|[DEBUG] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@74d41fcf
2021-03-15T11:04:23,918|[DEBUG] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@10d28ee2
2021-03-15T11:04:23,918|[DEBUG] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@10d28ee2
2021-03-15T11:04:23,918|[DEBUG] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1355d2a0
2021-03-15T11:04:23,918|[DEBUG] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1355d2a0
2021-03-15T11:04:23,918|[DEBUG] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7773d139
2021-03-15T11:04:23,918|[DEBUG] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7773d139
2021-03-15T11:04:23,918|[DEBUG] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1f0b2ffb
2021-03-15T11:04:23,919|[DEBUG] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1f0b2ffb
2021-03-15T11:04:23,919|[DEBUG] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3f2fd933
2021-03-15T11:04:23,919|[DEBUG] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3f2fd933
2021-03-15T11:04:23,919|[DEBUG] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@77d5a3ee
2021-03-15T11:04:23,919|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@77d5a3ee
2021-03-15T11:04:23,919|[DEBUG] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@5095f89a
2021-03-15T11:04:23,919|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5095f89a
2021-03-15T11:04:23,919|[DEBUG] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@15c8bb25
2021-03-15T11:04:23,919|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@15c8bb25
2021-03-15T11:04:23,919|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@15c8bb25
2021-03-15T11:04:23,919|[DEBUG] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@34b4f6c3
2021-03-15T11:04:23,920|[DEBUG] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@2a04a440
2021-03-15T11:04:23,920|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2a04a440
2021-03-15T11:04:23,920|[DEBUG] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2a04a440
2021-03-15T11:04:23,920|[DEBUG] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7f3964b0
2021-03-15T11:04:23,920|[DEBUG] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@dc46916
2021-03-15T11:04:23,920|[DEBUG] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@faa592b
2021-03-15T11:04:23,920|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@faa592b
2021-03-15T11:04:23,920|[DEBUG] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@7df468f6
2021-03-15T11:04:23,920|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7df468f6
2021-03-15T11:04:23,920|[DEBUG] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@35f9c37c
2021-03-15T11:04:23,920|[DEBUG] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@35f9c37c
2021-03-15T11:04:23,920|[DEBUG] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@5bfa2801
2021-03-15T11:04:23,920|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5bfa2801
2021-03-15T11:04:23,920|[DEBUG] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@25428bab
2021-03-15T11:04:23,920|[DEBUG] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@25428bab
2021-03-15T11:04:23,920|[DEBUG] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@418e1cd6
2021-03-15T11:04:23,921|[DEBUG] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@5ef99f75
2021-03-15T11:04:23,921|[DEBUG] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@5ef99f75
2021-03-15T11:04:23,921|[DEBUG] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@5ef99f75
2021-03-15T11:04:23,921|[DEBUG] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1b438ec
2021-03-15T11:04:23,921|[DEBUG] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1b438ec
2021-03-15T11:04:23,921|[DEBUG] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1b438ec
2021-03-15T11:04:23,921|[DEBUG] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@4f241437
2021-03-15T11:04:23,921|[DEBUG] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@58e48d9
2021-03-15T11:04:23,921|[DEBUG] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@27c243a3
2021-03-15T11:04:23,921|[DEBUG] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@27c243a3
2021-03-15T11:04:23,921|[DEBUG] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@27c243a3
2021-03-15T11:04:23,921|[DEBUG] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@da87122
2021-03-15T11:04:23,921|[DEBUG] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@da87122
2021-03-15T11:04:23,921|[DEBUG] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@da87122
2021-03-15T11:04:23,921|[DEBUG] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@2e47ec5e
2021-03-15T11:04:23,921|[DEBUG] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@d3e9b94
2021-03-15T11:04:23,921|[DEBUG] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@4c3133a1
2021-03-15T11:04:23,921|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4c3133a1
2021-03-15T11:04:23,921|[DEBUG] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@26f6fbbd
2021-03-15T11:04:23,921|[DEBUG] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@3fa27158
2021-03-15T11:04:23,921|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3fa27158
2021-03-15T11:04:23,921|[DEBUG] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@58da1b27
2021-03-15T11:04:23,921|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@58da1b27
2021-03-15T11:04:23,921|[DEBUG] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@29862f60
2021-03-15T11:04:23,921|[DEBUG] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@644acaff
2021-03-15T11:04:23,921|[DEBUG] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@771047b4
2021-03-15T11:04:23,921|[DEBUG] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@677f1963
2021-03-15T11:04:23,921|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@677f1963
2021-03-15T11:04:23,921|[DEBUG] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1444fa42
2021-03-15T11:04:23,921|[DEBUG] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@ffc9278
2021-03-15T11:04:23,921|[DEBUG] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1d9643e6
2021-03-15T11:04:23,921|[DEBUG] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7f487086
2021-03-15T11:04:23,921|[DEBUG] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4ced03c7
2021-03-15T11:04:23,921|[DEBUG] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@27e93770
2021-03-15T11:04:23,921|[DEBUG] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@8cfc918
2021-03-15T11:04:23,921|[DEBUG] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@343f54c7
]]></system-out>
  </testcase>
  <testcase name="testGetWithId" classname="logic.AccountLogicTest" time="0.037">
    <error type="org.hibernate.service.spi.ServiceException"><![CDATA[org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
	at logic.AccountLogicTest.setUp(AccountLogicTest.java:56)
Caused by: org.hibernate.engine.jndi.JndiException: Unable to lookup JNDI name [java:comp/env/jdbc/SimpleBloodBank]
	at logic.AccountLogicTest.setUp(AccountLogicTest.java:56)
Caused by: javax.naming.NameNotFoundException: Name [comp/env/jdbc/SimpleBloodBank] is not bound in this Context. Unable to find [comp].
	at logic.AccountLogicTest.setUp(AccountLogicTest.java:56)
]]></error>
    <system-out><![CDATA[2021-03-15T11:04:23,944|[DEBUG] EMFactory - getting EntityManagerFactory
2021-03-15T11:04:23,944|[DEBUG] EMFactory - initializeing EntityManagerFactory
2021-03-15T11:04:23,944|[DEBUG] EMFactory - creating EntityManagerFactory
2021-03-15T11:04:23,949|[INFO ] LogHelper - HHH000204: Processing PersistenceUnitInfo [name: simplebloodbank-PU-test]
2021-03-15T11:04:23,954|[DEBUG] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@59c4921f
2021-03-15T11:04:23,954|[DEBUG] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@59c4921f
2021-03-15T11:04:23,954|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@59c4921f
2021-03-15T11:04:23,954|[DEBUG] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7f2e2ae6
2021-03-15T11:04:23,954|[DEBUG] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@3860542a
2021-03-15T11:04:23,954|[DEBUG] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@6fb07db6
2021-03-15T11:04:23,954|[DEBUG] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@6cd76b55
2021-03-15T11:04:23,954|[DEBUG] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@6cd76b55
2021-03-15T11:04:23,954|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6cd76b55
2021-03-15T11:04:23,954|[DEBUG] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@1124fd8
2021-03-15T11:04:23,954|[DEBUG] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@1124fd8
2021-03-15T11:04:23,954|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1124fd8
2021-03-15T11:04:23,954|[DEBUG] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@283730de
2021-03-15T11:04:23,954|[DEBUG] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@283730de
2021-03-15T11:04:23,954|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@283730de
2021-03-15T11:04:23,954|[DEBUG] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@57212116
2021-03-15T11:04:23,954|[DEBUG] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@57212116
2021-03-15T11:04:23,954|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@57212116
2021-03-15T11:04:23,954|[DEBUG] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@17b17fa8
2021-03-15T11:04:23,954|[DEBUG] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@17b17fa8
2021-03-15T11:04:23,954|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@17b17fa8
2021-03-15T11:04:23,954|[DEBUG] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@463b865b
2021-03-15T11:04:23,955|[DEBUG] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@463b865b
2021-03-15T11:04:23,955|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@463b865b
2021-03-15T11:04:23,955|[DEBUG] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@4fc2e703
2021-03-15T11:04:23,955|[DEBUG] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@4fc2e703
2021-03-15T11:04:23,955|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4fc2e703
2021-03-15T11:04:23,955|[DEBUG] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4ca3923
2021-03-15T11:04:23,955|[DEBUG] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4ca3923
2021-03-15T11:04:23,955|[DEBUG] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6d88a3f4
2021-03-15T11:04:23,955|[DEBUG] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6d88a3f4
2021-03-15T11:04:23,955|[DEBUG] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@5882ff51
2021-03-15T11:04:23,955|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@5882ff51
2021-03-15T11:04:23,955|[DEBUG] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4c5afa2d
2021-03-15T11:04:23,955|[DEBUG] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3177221b
2021-03-15T11:04:23,955|[DEBUG] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@654b9f0
2021-03-15T11:04:23,955|[DEBUG] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@654b9f0
2021-03-15T11:04:23,955|[DEBUG] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@533c62d0
2021-03-15T11:04:23,955|[DEBUG] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@533c62d0
2021-03-15T11:04:23,955|[DEBUG] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@7c654cfc
2021-03-15T11:04:23,955|[DEBUG] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@7c654cfc
2021-03-15T11:04:23,955|[DEBUG] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@74d41fcf
2021-03-15T11:04:23,955|[DEBUG] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@74d41fcf
2021-03-15T11:04:23,955|[DEBUG] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@10d28ee2
2021-03-15T11:04:23,955|[DEBUG] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@10d28ee2
2021-03-15T11:04:23,955|[DEBUG] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1355d2a0
2021-03-15T11:04:23,955|[DEBUG] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1355d2a0
2021-03-15T11:04:23,955|[DEBUG] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7773d139
2021-03-15T11:04:23,955|[DEBUG] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7773d139
2021-03-15T11:04:23,955|[DEBUG] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1f0b2ffb
2021-03-15T11:04:23,956|[DEBUG] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1f0b2ffb
2021-03-15T11:04:23,956|[DEBUG] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3f2fd933
2021-03-15T11:04:23,956|[DEBUG] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3f2fd933
2021-03-15T11:04:23,956|[DEBUG] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@77d5a3ee
2021-03-15T11:04:23,956|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@77d5a3ee
2021-03-15T11:04:23,956|[DEBUG] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@5095f89a
2021-03-15T11:04:23,956|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5095f89a
2021-03-15T11:04:23,956|[DEBUG] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@15c8bb25
2021-03-15T11:04:23,956|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@15c8bb25
2021-03-15T11:04:23,956|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@15c8bb25
2021-03-15T11:04:23,956|[DEBUG] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@34b4f6c3
2021-03-15T11:04:23,956|[DEBUG] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@2a04a440
2021-03-15T11:04:23,956|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2a04a440
2021-03-15T11:04:23,956|[DEBUG] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2a04a440
2021-03-15T11:04:23,956|[DEBUG] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7f3964b0
2021-03-15T11:04:23,956|[DEBUG] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@dc46916
2021-03-15T11:04:23,956|[DEBUG] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@faa592b
2021-03-15T11:04:23,956|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@faa592b
2021-03-15T11:04:23,956|[DEBUG] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@7df468f6
2021-03-15T11:04:23,956|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7df468f6
2021-03-15T11:04:23,956|[DEBUG] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@35f9c37c
2021-03-15T11:04:23,956|[DEBUG] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@35f9c37c
2021-03-15T11:04:23,956|[DEBUG] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@5bfa2801
2021-03-15T11:04:23,956|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5bfa2801
2021-03-15T11:04:23,956|[DEBUG] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@25428bab
2021-03-15T11:04:23,956|[DEBUG] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@25428bab
2021-03-15T11:04:23,956|[DEBUG] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@418e1cd6
2021-03-15T11:04:23,956|[DEBUG] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@5ef99f75
2021-03-15T11:04:23,956|[DEBUG] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@5ef99f75
2021-03-15T11:04:23,956|[DEBUG] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@5ef99f75
2021-03-15T11:04:23,956|[DEBUG] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1b438ec
2021-03-15T11:04:23,956|[DEBUG] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1b438ec
2021-03-15T11:04:23,956|[DEBUG] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1b438ec
2021-03-15T11:04:23,956|[DEBUG] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@4f241437
2021-03-15T11:04:23,956|[DEBUG] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@58e48d9
2021-03-15T11:04:23,957|[DEBUG] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@27c243a3
2021-03-15T11:04:23,957|[DEBUG] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@27c243a3
2021-03-15T11:04:23,957|[DEBUG] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@27c243a3
2021-03-15T11:04:23,957|[DEBUG] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@da87122
2021-03-15T11:04:23,957|[DEBUG] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@da87122
2021-03-15T11:04:23,957|[DEBUG] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@da87122
2021-03-15T11:04:23,957|[DEBUG] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@2e47ec5e
2021-03-15T11:04:23,957|[DEBUG] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@d3e9b94
2021-03-15T11:04:23,957|[DEBUG] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@4c3133a1
2021-03-15T11:04:23,957|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4c3133a1
2021-03-15T11:04:23,957|[DEBUG] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@26f6fbbd
2021-03-15T11:04:23,957|[DEBUG] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@3fa27158
2021-03-15T11:04:23,957|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3fa27158
2021-03-15T11:04:23,957|[DEBUG] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@58da1b27
2021-03-15T11:04:23,957|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@58da1b27
2021-03-15T11:04:23,957|[DEBUG] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@29862f60
2021-03-15T11:04:23,957|[DEBUG] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@644acaff
2021-03-15T11:04:23,957|[DEBUG] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@771047b4
2021-03-15T11:04:23,957|[DEBUG] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@677f1963
2021-03-15T11:04:23,957|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@677f1963
2021-03-15T11:04:23,957|[DEBUG] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@30d9da5e
2021-03-15T11:04:23,957|[DEBUG] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5ed9907b
2021-03-15T11:04:23,957|[DEBUG] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@34538dde
2021-03-15T11:04:23,957|[DEBUG] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1e1f9de4
2021-03-15T11:04:23,957|[DEBUG] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@60eabf53
2021-03-15T11:04:23,957|[DEBUG] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@72a2b17d
2021-03-15T11:04:23,957|[DEBUG] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5ab7ef8a
2021-03-15T11:04:23,957|[DEBUG] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@38a5b985
]]></system-out>
  </testcase>
  <testcase name="testSearch" classname="logic.AccountLogicTest" time="0.032">
    <error type="org.hibernate.service.spi.ServiceException"><![CDATA[org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
	at logic.AccountLogicTest.setUp(AccountLogicTest.java:56)
Caused by: org.hibernate.engine.jndi.JndiException: Unable to lookup JNDI name [java:comp/env/jdbc/SimpleBloodBank]
	at logic.AccountLogicTest.setUp(AccountLogicTest.java:56)
Caused by: javax.naming.NameNotFoundException: Name [comp/env/jdbc/SimpleBloodBank] is not bound in this Context. Unable to find [comp].
	at logic.AccountLogicTest.setUp(AccountLogicTest.java:56)
]]></error>
    <system-out><![CDATA[2021-03-15T11:04:23,982|[DEBUG] EMFactory - getting EntityManagerFactory
2021-03-15T11:04:23,982|[DEBUG] EMFactory - initializeing EntityManagerFactory
2021-03-15T11:04:23,982|[DEBUG] EMFactory - creating EntityManagerFactory
2021-03-15T11:04:23,990|[INFO ] LogHelper - HHH000204: Processing PersistenceUnitInfo [name: simplebloodbank-PU-test]
2021-03-15T11:04:23,992|[DEBUG] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@59c4921f
2021-03-15T11:04:23,993|[DEBUG] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@59c4921f
2021-03-15T11:04:23,993|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@59c4921f
2021-03-15T11:04:23,993|[DEBUG] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7f2e2ae6
2021-03-15T11:04:23,993|[DEBUG] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@3860542a
2021-03-15T11:04:23,993|[DEBUG] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@6fb07db6
2021-03-15T11:04:23,993|[DEBUG] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@6cd76b55
2021-03-15T11:04:23,993|[DEBUG] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@6cd76b55
2021-03-15T11:04:23,993|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6cd76b55
2021-03-15T11:04:23,993|[DEBUG] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@1124fd8
2021-03-15T11:04:23,993|[DEBUG] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@1124fd8
2021-03-15T11:04:23,993|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1124fd8
2021-03-15T11:04:23,993|[DEBUG] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@283730de
2021-03-15T11:04:23,993|[DEBUG] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@283730de
2021-03-15T11:04:23,993|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@283730de
2021-03-15T11:04:23,993|[DEBUG] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@57212116
2021-03-15T11:04:23,993|[DEBUG] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@57212116
2021-03-15T11:04:23,993|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@57212116
2021-03-15T11:04:23,993|[DEBUG] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@17b17fa8
2021-03-15T11:04:23,993|[DEBUG] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@17b17fa8
2021-03-15T11:04:23,993|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@17b17fa8
2021-03-15T11:04:23,993|[DEBUG] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@463b865b
2021-03-15T11:04:23,993|[DEBUG] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@463b865b
2021-03-15T11:04:23,993|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@463b865b
2021-03-15T11:04:23,993|[DEBUG] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@4fc2e703
2021-03-15T11:04:23,993|[DEBUG] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@4fc2e703
2021-03-15T11:04:23,993|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4fc2e703
2021-03-15T11:04:23,993|[DEBUG] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4ca3923
2021-03-15T11:04:23,993|[DEBUG] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4ca3923
2021-03-15T11:04:23,993|[DEBUG] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6d88a3f4
2021-03-15T11:04:23,993|[DEBUG] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6d88a3f4
2021-03-15T11:04:23,993|[DEBUG] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@5882ff51
2021-03-15T11:04:23,993|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@5882ff51
2021-03-15T11:04:23,993|[DEBUG] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4c5afa2d
2021-03-15T11:04:23,993|[DEBUG] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3177221b
2021-03-15T11:04:23,993|[DEBUG] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@654b9f0
2021-03-15T11:04:23,993|[DEBUG] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@654b9f0
2021-03-15T11:04:23,993|[DEBUG] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@533c62d0
2021-03-15T11:04:23,993|[DEBUG] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@533c62d0
2021-03-15T11:04:23,993|[DEBUG] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@7c654cfc
2021-03-15T11:04:23,993|[DEBUG] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@7c654cfc
2021-03-15T11:04:23,993|[DEBUG] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@74d41fcf
2021-03-15T11:04:23,993|[DEBUG] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@74d41fcf
2021-03-15T11:04:23,993|[DEBUG] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@10d28ee2
2021-03-15T11:04:23,993|[DEBUG] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@10d28ee2
2021-03-15T11:04:23,993|[DEBUG] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1355d2a0
2021-03-15T11:04:23,993|[DEBUG] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1355d2a0
2021-03-15T11:04:23,993|[DEBUG] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7773d139
2021-03-15T11:04:23,993|[DEBUG] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7773d139
2021-03-15T11:04:23,993|[DEBUG] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1f0b2ffb
2021-03-15T11:04:23,993|[DEBUG] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1f0b2ffb
2021-03-15T11:04:23,994|[DEBUG] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3f2fd933
2021-03-15T11:04:23,994|[DEBUG] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3f2fd933
2021-03-15T11:04:23,994|[DEBUG] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@77d5a3ee
2021-03-15T11:04:23,994|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@77d5a3ee
2021-03-15T11:04:23,994|[DEBUG] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@5095f89a
2021-03-15T11:04:23,994|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5095f89a
2021-03-15T11:04:23,994|[DEBUG] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@15c8bb25
2021-03-15T11:04:23,994|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@15c8bb25
2021-03-15T11:04:23,994|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@15c8bb25
2021-03-15T11:04:23,994|[DEBUG] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@34b4f6c3
2021-03-15T11:04:23,994|[DEBUG] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@2a04a440
2021-03-15T11:04:23,994|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2a04a440
2021-03-15T11:04:23,994|[DEBUG] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2a04a440
2021-03-15T11:04:23,994|[DEBUG] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7f3964b0
2021-03-15T11:04:23,994|[DEBUG] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@dc46916
2021-03-15T11:04:23,994|[DEBUG] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@faa592b
2021-03-15T11:04:23,994|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@faa592b
2021-03-15T11:04:23,994|[DEBUG] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@7df468f6
2021-03-15T11:04:23,994|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7df468f6
2021-03-15T11:04:23,994|[DEBUG] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@35f9c37c
2021-03-15T11:04:23,994|[DEBUG] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@35f9c37c
2021-03-15T11:04:23,994|[DEBUG] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@5bfa2801
2021-03-15T11:04:23,994|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5bfa2801
2021-03-15T11:04:23,994|[DEBUG] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@25428bab
2021-03-15T11:04:23,994|[DEBUG] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@25428bab
2021-03-15T11:04:23,994|[DEBUG] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@418e1cd6
2021-03-15T11:04:23,994|[DEBUG] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@5ef99f75
2021-03-15T11:04:23,994|[DEBUG] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@5ef99f75
2021-03-15T11:04:23,994|[DEBUG] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@5ef99f75
2021-03-15T11:04:23,994|[DEBUG] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1b438ec
2021-03-15T11:04:23,994|[DEBUG] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1b438ec
2021-03-15T11:04:23,994|[DEBUG] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1b438ec
2021-03-15T11:04:23,994|[DEBUG] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@4f241437
2021-03-15T11:04:23,994|[DEBUG] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@58e48d9
2021-03-15T11:04:23,994|[DEBUG] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@27c243a3
2021-03-15T11:04:23,994|[DEBUG] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@27c243a3
2021-03-15T11:04:23,994|[DEBUG] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@27c243a3
2021-03-15T11:04:23,994|[DEBUG] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@da87122
2021-03-15T11:04:23,994|[DEBUG] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@da87122
2021-03-15T11:04:23,994|[DEBUG] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@da87122
2021-03-15T11:04:23,994|[DEBUG] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@2e47ec5e
2021-03-15T11:04:23,994|[DEBUG] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@d3e9b94
2021-03-15T11:04:23,994|[DEBUG] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@4c3133a1
2021-03-15T11:04:23,994|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4c3133a1
2021-03-15T11:04:23,994|[DEBUG] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@26f6fbbd
2021-03-15T11:04:23,994|[DEBUG] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@3fa27158
2021-03-15T11:04:23,994|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3fa27158
2021-03-15T11:04:23,994|[DEBUG] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@58da1b27
2021-03-15T11:04:23,994|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@58da1b27
2021-03-15T11:04:23,994|[DEBUG] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@29862f60
2021-03-15T11:04:23,994|[DEBUG] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@644acaff
2021-03-15T11:04:23,994|[DEBUG] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@771047b4
2021-03-15T11:04:23,994|[DEBUG] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@677f1963
2021-03-15T11:04:23,994|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@677f1963
2021-03-15T11:04:23,994|[DEBUG] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6537c17c
2021-03-15T11:04:23,994|[DEBUG] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2ff89271
2021-03-15T11:04:23,994|[DEBUG] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@761bac58
2021-03-15T11:04:23,994|[DEBUG] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@354e6aaa
2021-03-15T11:04:23,994|[DEBUG] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6e29615e
2021-03-15T11:04:23,994|[DEBUG] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5a90df0
2021-03-15T11:04:23,994|[DEBUG] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2efb1871
2021-03-15T11:04:23,994|[DEBUG] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@68263c3e
]]></system-out>
  </testcase>
  <testcase name="testGetAccountWithName" classname="logic.AccountLogicTest" time="0.035">
    <error type="org.hibernate.service.spi.ServiceException"><![CDATA[org.hibernate.service.spi.ServiceException: Unable to create requested service [org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
	at logic.AccountLogicTest.setUp(AccountLogicTest.java:56)
Caused by: org.hibernate.engine.jndi.JndiException: Unable to lookup JNDI name [java:comp/env/jdbc/SimpleBloodBank]
	at logic.AccountLogicTest.setUp(AccountLogicTest.java:56)
Caused by: javax.naming.NameNotFoundException: Name [comp/env/jdbc/SimpleBloodBank] is not bound in this Context. Unable to find [comp].
	at logic.AccountLogicTest.setUp(AccountLogicTest.java:56)
]]></error>
    <system-out><![CDATA[2021-03-15T11:04:24,019|[DEBUG] EMFactory - getting EntityManagerFactory
2021-03-15T11:04:24,019|[DEBUG] EMFactory - initializeing EntityManagerFactory
2021-03-15T11:04:24,019|[DEBUG] EMFactory - creating EntityManagerFactory
2021-03-15T11:04:24,026|[INFO ] LogHelper - HHH000204: Processing PersistenceUnitInfo [name: simplebloodbank-PU-test]
2021-03-15T11:04:24,031|[DEBUG] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@59c4921f
2021-03-15T11:04:24,031|[DEBUG] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@59c4921f
2021-03-15T11:04:24,031|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@59c4921f
2021-03-15T11:04:24,031|[DEBUG] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7f2e2ae6
2021-03-15T11:04:24,031|[DEBUG] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@3860542a
2021-03-15T11:04:24,031|[DEBUG] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@6fb07db6
2021-03-15T11:04:24,031|[DEBUG] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@6cd76b55
2021-03-15T11:04:24,031|[DEBUG] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@6cd76b55
2021-03-15T11:04:24,031|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6cd76b55
2021-03-15T11:04:24,031|[DEBUG] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@1124fd8
2021-03-15T11:04:24,031|[DEBUG] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@1124fd8
2021-03-15T11:04:24,031|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1124fd8
2021-03-15T11:04:24,031|[DEBUG] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@283730de
2021-03-15T11:04:24,031|[DEBUG] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@283730de
2021-03-15T11:04:24,031|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@283730de
2021-03-15T11:04:24,031|[DEBUG] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@57212116
2021-03-15T11:04:24,031|[DEBUG] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@57212116
2021-03-15T11:04:24,031|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@57212116
2021-03-15T11:04:24,031|[DEBUG] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@17b17fa8
2021-03-15T11:04:24,031|[DEBUG] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@17b17fa8
2021-03-15T11:04:24,031|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@17b17fa8
2021-03-15T11:04:24,031|[DEBUG] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@463b865b
2021-03-15T11:04:24,031|[DEBUG] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@463b865b
2021-03-15T11:04:24,031|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@463b865b
2021-03-15T11:04:24,031|[DEBUG] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@4fc2e703
2021-03-15T11:04:24,031|[DEBUG] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@4fc2e703
2021-03-15T11:04:24,031|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4fc2e703
2021-03-15T11:04:24,031|[DEBUG] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4ca3923
2021-03-15T11:04:24,031|[DEBUG] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4ca3923
2021-03-15T11:04:24,031|[DEBUG] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@6d88a3f4
2021-03-15T11:04:24,031|[DEBUG] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@6d88a3f4
2021-03-15T11:04:24,031|[DEBUG] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@5882ff51
2021-03-15T11:04:24,031|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@5882ff51
2021-03-15T11:04:24,031|[DEBUG] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4c5afa2d
2021-03-15T11:04:24,031|[DEBUG] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@3177221b
2021-03-15T11:04:24,031|[DEBUG] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@654b9f0
2021-03-15T11:04:24,031|[DEBUG] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@654b9f0
2021-03-15T11:04:24,031|[DEBUG] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@533c62d0
2021-03-15T11:04:24,031|[DEBUG] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@533c62d0
2021-03-15T11:04:24,031|[DEBUG] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@7c654cfc
2021-03-15T11:04:24,032|[DEBUG] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@7c654cfc
2021-03-15T11:04:24,032|[DEBUG] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@74d41fcf
2021-03-15T11:04:24,032|[DEBUG] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@74d41fcf
2021-03-15T11:04:24,032|[DEBUG] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@10d28ee2
2021-03-15T11:04:24,032|[DEBUG] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@10d28ee2
2021-03-15T11:04:24,032|[DEBUG] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1355d2a0
2021-03-15T11:04:24,032|[DEBUG] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1355d2a0
2021-03-15T11:04:24,032|[DEBUG] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7773d139
2021-03-15T11:04:24,032|[DEBUG] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7773d139
2021-03-15T11:04:24,032|[DEBUG] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1f0b2ffb
2021-03-15T11:04:24,032|[DEBUG] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1f0b2ffb
2021-03-15T11:04:24,032|[DEBUG] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3f2fd933
2021-03-15T11:04:24,032|[DEBUG] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3f2fd933
2021-03-15T11:04:24,032|[DEBUG] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@77d5a3ee
2021-03-15T11:04:24,032|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@77d5a3ee
2021-03-15T11:04:24,032|[DEBUG] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@5095f89a
2021-03-15T11:04:24,032|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5095f89a
2021-03-15T11:04:24,032|[DEBUG] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@15c8bb25
2021-03-15T11:04:24,032|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@15c8bb25
2021-03-15T11:04:24,032|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@15c8bb25
2021-03-15T11:04:24,032|[DEBUG] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@34b4f6c3
2021-03-15T11:04:24,032|[DEBUG] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@2a04a440
2021-03-15T11:04:24,032|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2a04a440
2021-03-15T11:04:24,032|[DEBUG] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2a04a440
2021-03-15T11:04:24,032|[DEBUG] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7f3964b0
2021-03-15T11:04:24,032|[DEBUG] BasicTypeRegistry - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@dc46916
2021-03-15T11:04:24,032|[DEBUG] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@faa592b
2021-03-15T11:04:24,032|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@faa592b
2021-03-15T11:04:24,032|[DEBUG] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@7df468f6
2021-03-15T11:04:24,032|[DEBUG] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7df468f6
2021-03-15T11:04:24,032|[DEBUG] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@35f9c37c
2021-03-15T11:04:24,032|[DEBUG] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@35f9c37c
2021-03-15T11:04:24,032|[DEBUG] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@5bfa2801
2021-03-15T11:04:24,032|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5bfa2801
2021-03-15T11:04:24,032|[DEBUG] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@25428bab
2021-03-15T11:04:24,032|[DEBUG] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@25428bab
2021-03-15T11:04:24,032|[DEBUG] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@418e1cd6
2021-03-15T11:04:24,032|[DEBUG] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@5ef99f75
2021-03-15T11:04:24,032|[DEBUG] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@5ef99f75
2021-03-15T11:04:24,032|[DEBUG] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@5ef99f75
2021-03-15T11:04:24,032|[DEBUG] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1b438ec
2021-03-15T11:04:24,032|[DEBUG] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1b438ec
2021-03-15T11:04:24,032|[DEBUG] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1b438ec
2021-03-15T11:04:24,032|[DEBUG] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@4f241437
2021-03-15T11:04:24,032|[DEBUG] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@58e48d9
2021-03-15T11:04:24,032|[DEBUG] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@27c243a3
2021-03-15T11:04:24,032|[DEBUG] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@27c243a3
2021-03-15T11:04:24,032|[DEBUG] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@27c243a3
2021-03-15T11:04:24,032|[DEBUG] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@da87122
2021-03-15T11:04:24,032|[DEBUG] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@da87122
2021-03-15T11:04:24,032|[DEBUG] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@da87122
2021-03-15T11:04:24,032|[DEBUG] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@2e47ec5e
2021-03-15T11:04:24,033|[DEBUG] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@d3e9b94
2021-03-15T11:04:24,033|[DEBUG] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@4c3133a1
2021-03-15T11:04:24,033|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4c3133a1
2021-03-15T11:04:24,033|[DEBUG] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@26f6fbbd
2021-03-15T11:04:24,033|[DEBUG] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@3fa27158
2021-03-15T11:04:24,033|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3fa27158
2021-03-15T11:04:24,033|[DEBUG] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@58da1b27
2021-03-15T11:04:24,033|[DEBUG] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@58da1b27
2021-03-15T11:04:24,033|[DEBUG] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@29862f60
2021-03-15T11:04:24,033|[DEBUG] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@644acaff
2021-03-15T11:04:24,033|[DEBUG] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@771047b4
2021-03-15T11:04:24,033|[DEBUG] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@677f1963
2021-03-15T11:04:24,033|[DEBUG] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@677f1963
2021-03-15T11:04:24,033|[DEBUG] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@10c8abf0
2021-03-15T11:04:24,033|[DEBUG] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6f3d6bb2
2021-03-15T11:04:24,033|[DEBUG] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5e231326
2021-03-15T11:04:24,033|[DEBUG] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@71b99cc6
2021-03-15T11:04:24,033|[DEBUG] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@24fb3e2a
2021-03-15T11:04:24,033|[DEBUG] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@209fa1fc
2021-03-15T11:04:24,033|[DEBUG] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@66e33cea
2021-03-15T11:04:24,033|[DEBUG] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5b81d35c
]]></system-out>
  </testcase>
</testsuite>